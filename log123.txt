Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.040 units: [5.00, 5.00, 246.37] -> [5.00, 5.00, 246.33]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-3054.38, -7373.92, -2343.71] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 6, pending meshes: 0
Checking 6 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing readbacks: 2 pending, completed_frame: 323, frames_in_flight: 3
Checking readback 313: submitted frame 322, current frame 323, 1 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 13 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(0, 1, -1) with 28 minichunks (available workspaces: 1)
Allocating workspace 0 (current_index: 0)
Available workspaces after allocation: 0/3
Processing 12 minichunks in workspace 0
Overall bounds: [0, 72, -16] to [64, 88, -8]
renderer_buffer_write called - buffer: anyopaque@1efff479918, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479918, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479918 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c148, alignment: 0
Returning buffer pointer: 0x1f002d9c148 (aligned: true)
Created staging buffer at: 0x1f002d9c148
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a3c000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(16674257662455582603), dst: vk.Buffer(16655718796899647951)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1efff479658, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479658, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479658 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c5c8, alignment: 0
Returning buffer pointer: 0x1f002d9c5c8 (aligned: true)
Created staging buffer at: 0x1f002d9c5c8
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb18f4000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(18108836662703296397), dst: vk.Buffer(15589100158980194763)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1efff479818, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479818, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479818 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c6c8, alignment: 0
Returning buffer pointer: 0x1f002d9c6c8 (aligned: true)
Created staging buffer at: 0x1f002d9c6c8
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb18f1000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(18363921161324072847), dst: vk.Buffer(170787141142446541)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5a28, size: 768, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5a28, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5a28 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c608, alignment: 0
Returning buffer pointer: 0x1f002d9c608 (aligned: true)
Created staging buffer at: 0x1f002d9c608
Staging buffer cast successful
About to map memory for staging buffer - size: 768
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb18f2000
About to memcpy 768 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(18294473807890485137), dst: vk.Buffer(1025278100226703827)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,7.2e1,-1.6e1] to [6.4e1,8.8e1,-8.0e0]
Buffer handles - SDF: vk.Buffer(15589100158980194763), Params: vk.Buffer(16655718796899647951), Output: vk.Buffer(15344826058683711953)
generateWorldAdaptive called - offset: 0, max_workgroups: 12
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
getBufferDeviceAddress called for buffer: vk.Buffer(170787141142446541)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534177280
Using actual brush buffer with address: 0x238480000
Dispatching brush chunk: offset=0, size=12 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=12, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002d9c688, alignment: 0
Returning buffer pointer: 0x1f002d9c688 (aligned: true)
Submitting readback 315 at frame 323 (will be ready at frame 326)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 1: No available workspace in ring buffer
Re-queuing 16 remaining minichunks from batch
Successfully queued 12 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 41.8ms (target: 10.0ms), Workgroups: 13 -> 13 (PID: 14)
DeferredReadbackManager: advanced to frame 324
Processing readbacks: 3 pending, completed_frame: 324, frames_in_flight: 3
Checking readback 313: submitted frame 322, current frame 324, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 3 pending, max age: 3 frames, current frame: 324
Velocity: [0.00, 0.00, 4099.87] speed=4099.87 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -33420.77] | Torque: [170673.719, 412042.812, 130962.562]
  Angular vel: current=[-4618.360, -11149.707, -3543.793] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.040 units: [5.00, 5.00, 246.33] -> [5.00, 5.00, 246.29]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-4617.61, -11147.89, -3543.22] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 6, pending meshes: 0
Checking 6 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 0
Command buffer begun in frame_begin
Processing readbacks: 3 pending, completed_frame: 324, frames_in_flight: 3
Checking readback 313: submitted frame 322, current frame 324, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 13 batches waiting, 1 active chunks
No available workspaces, stopping batch processing
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 37.8ms (target: 10.0ms), Workgroups: 12 -> 12 (PID: 4)
DeferredReadbackManager: advanced to frame 325
Processing readbacks: 3 pending, completed_frame: 325, frames_in_flight: 3
Checking readback 313: submitted frame 322, current frame 325, 3 frames elapsed (need 3)
Readback 313 ready (submitted frame 322, current frame 325)
Checking readback 314: submitted frame 322, current frame 325, 3 frames elapsed (need 3)
Readback 314 ready (submitted frame 322, current frame 325)
Checking readback 315: submitted frame 323, current frame 325, 2 frames elapsed (need 3)
Processing 2 completed readbacks
Minichunk batch readback complete for workspace 1 (11 minichunks, 22528 bytes)
Adding minichunk at offset (32, 24, 56) with 512 non-empty voxels
Minichunk 149/512 completed
Adding minichunk at offset (40, 24, 56) with 512 non-empty voxels
Minichunk 150/512 completed
Adding minichunk at offset (48, 24, 56) with 512 non-empty voxels
Minichunk 151/512 completed
Adding minichunk at offset (56, 24, 56) with 512 non-empty voxels
Minichunk 152/512 completed
Adding minichunk at offset (0, 32, 56) with 512 non-empty voxels
Minichunk 153/512 completed
Adding minichunk at offset (8, 32, 56) with 512 non-empty voxels
Minichunk 154/512 completed
Adding minichunk at offset (16, 32, 56) with 512 non-empty voxels
Minichunk 155/512 completed
Adding minichunk at offset (24, 32, 56) with 512 non-empty voxels
Minichunk 156/512 completed
Adding minichunk at offset (32, 32, 56) with 512 non-empty voxels
Minichunk 157/512 completed
Adding minichunk at offset (40, 32, 56) with 512 non-empty voxels
Minichunk 158/512 completed
Adding minichunk at offset (48, 32, 56) with 512 non-empty voxels
Minichunk 159/512 completed
Releasing workspace 1 (was in_use: true)
Available workspaces after release: 1/3
Minichunk batch readback complete for workspace 2 (11 minichunks, 22528 bytes)
Adding minichunk at offset (56, 32, 56) with 512 non-empty voxels
Minichunk 160/512 completed
Adding minichunk at offset (0, 40, 56) with 512 non-empty voxels
Minichunk 161/512 completed
Adding minichunk at offset (8, 40, 56) with 512 non-empty voxels
Minichunk 162/512 completed
Adding minichunk at offset (16, 40, 56) with 512 non-empty voxels
Minichunk 163/512 completed
Adding minichunk at offset (24, 40, 56) with 512 non-empty voxels
Minichunk 164/512 completed
Adding minichunk at offset (32, 40, 56) with 512 non-empty voxels
Minichunk 165/512 completed
Adding minichunk at offset (40, 40, 56) with 512 non-empty voxels
Minichunk 166/512 completed
Adding minichunk at offset (48, 40, 56) with 512 non-empty voxels
Minichunk 167/512 completed
Adding minichunk at offset (56, 40, 56) with 512 non-empty voxels
Minichunk 168/512 completed
Adding minichunk at offset (0, 48, 56) with 512 non-empty voxels
Minichunk 169/512 completed
Adding minichunk at offset (8, 48, 56) with 512 non-empty voxels
Minichunk 170/512 completed
Releasing workspace 2 (was in_use: true)
Available workspaces after release: 2/3
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 325
Velocity: [0.00, 0.00, 6198.16] speed=6198.16 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -26478.73] | Torque: [177824.906, 429307.250, 136449.891]
  Angular vel: current=[-7919.369, -19119.049, -6076.746] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.040 units: [5.00, 5.00, 246.29] -> [5.00, 5.00, 246.25]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-7918.08, -19115.95, -6075.76] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 6, pending meshes: 0
Checking 6 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 1
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 325, frames_in_flight: 3
Checking readback 315: submitted frame 323, current frame 325, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 13 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(0, 1, -1) with 28 minichunks (available workspaces: 2)
Allocating workspace 1 (current_index: 1)
Available workspaces after allocation: 1/3
Processing 12 minichunks in workspace 1
Overall bounds: [0, 64, -8] to [64, 80, 0]
renderer_buffer_write called - buffer: anyopaque@1f002cf5c68, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5c68, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5c68 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c748, alignment: 0
Returning buffer pointer: 0x1f002d9c748 (aligned: true)
Created staging buffer at: 0x1f002d9c748
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a2c000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(17713967952308473750), dst: vk.Buffer(17645821321130541531)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5768, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5768, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5768 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c388, alignment: 0
Returning buffer pointer: 0x1f002d9c388 (aligned: true)
Created staging buffer at: 0x1f002d9c388
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b15000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(17049280187969048472), dst: vk.Buffer(14073195781184029143)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5928, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5928, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5928 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbec8, alignment: 0
Returning buffer pointer: 0x1f002dbbec8 (aligned: true)
Created staging buffer at: 0x1f002dbbec8
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a5c000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(10232517002967125914), dst: vk.Buffer(16705046187056562649)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf57e8, size: 768, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf57e8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf57e8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbf48, alignment: 0
Returning buffer pointer: 0x1f002dbbf48 (aligned: true)
Created staging buffer at: 0x1f002dbbf48
Staging buffer cast successful
About to map memory for staging buffer - size: 768
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a3a000
About to memcpy 768 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(16981053292442292124), dst: vk.Buffer(18334454249699672543)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,6.4e1,-8.0e0] to [6.4e1,8.0e1,0.0e0]
Buffer handles - SDF: vk.Buffer(14073195781184029143), Params: vk.Buffer(17645821321130541531), Output: vk.Buffer(18233758775804690909)
generateWorldAdaptive called - offset: 0, max_workgroups: 12
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
getBufferDeviceAddress called for buffer: vk.Buffer(16705046187056562649)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545711616
Using actual brush buffer with address: 0x238f80000
Dispatching brush chunk: offset=0, size=12 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=12, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002dbbbc8, alignment: 0
Returning buffer pointer: 0x1f002dbbbc8 (aligned: true)
Submitting readback 316 at frame 325 (will be ready at frame 328)
Allocating workspace 2 (current_index: 2)
Available workspaces after allocation: 0/3
Processing 12 minichunks in workspace 2
Overall bounds: [0, 72, -8] to [64, 88, 0]
renderer_buffer_write called - buffer: anyopaque@1f002cf5be8, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5be8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5be8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbd88, alignment: 0
Returning buffer pointer: 0x1f002dbbd88 (aligned: true)
Created staging buffer at: 0x1f002dbbd88
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a4f000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(15785458642049830817), dst: vk.Buffer(10094846052541661671)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5ba8, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ba8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5ba8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbb8c8, alignment: 0
Returning buffer pointer: 0x1f002dbb8c8 (aligned: true)
Created staging buffer at: 0x1f002dbb8c8
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b16000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(10441372535198060451), dst: vk.Buffer(16700742698545447395)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5ca8, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ca8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5ca8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbac8, alignment: 0
Returning buffer pointer: 0x1f002dbbac8 (aligned: true)
Created staging buffer at: 0x1f002dbbac8
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a09000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(1890852136518946725), dst: vk.Buffer(17497165150031970789)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf58a8, size: 768, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf58a8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf58a8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbb908, alignment: 0
Returning buffer pointer: 0x1f002dbb908 (aligned: true)
Created staging buffer at: 0x1f002dbb908
Staging buffer cast successful
About to map memory for staging buffer - size: 768
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a0a000
About to memcpy 768 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(14227673866351677351), dst: vk.Buffer(14063823544068866539)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,7.2e1,-8.0e0] to [6.4e1,8.8e1,0.0e0]
Buffer handles - SDF: vk.Buffer(16700742698545447395), Params: vk.Buffer(10094846052541661671), Output: vk.Buffer(17114293211007812073)
generateWorldAdaptive called - offset: 0, max_workgroups: 12
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
getBufferDeviceAddress called for buffer: vk.Buffer(17497165150031970789)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557245952
Using actual brush buffer with address: 0x239a80000
Dispatching brush chunk: offset=0, size=12 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=12, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002dbbb48, alignment: 0
Returning buffer pointer: 0x1f002dbbb48 (aligned: true)
Submitting readback 317 at frame 325 (will be ready at frame 328)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 2: No available workspace in ring buffer
Re-queuing 4 remaining minichunks from batch
Successfully queued 24 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 41.9ms (target: 10.0ms), Workgroups: 13 -> 13 (PID: 16)
DeferredReadbackManager: advanced to frame 326
Processing readbacks: 3 pending, completed_frame: 326, frames_in_flight: 3
Checking readback 315: submitted frame 323, current frame 326, 3 frames elapsed (need 3)
Readback 315 ready (submitted frame 323, current frame 326)
Checking readback 316: submitted frame 325, current frame 326, 1 frames elapsed (need 3)
Processing 1 completed readbacks
Minichunk batch readback complete for workspace 0 (12 minichunks, 24576 bytes)
Adding minichunk at offset (0, 8, 48) with 512 non-empty voxels
Minichunk 171/512 completed
Adding minichunk at offset (8, 8, 48) with 512 non-empty voxels
Minichunk 172/512 completed
Adding minichunk at offset (16, 8, 48) with 512 non-empty voxels
Minichunk 173/512 completed
Adding minichunk at offset (24, 8, 48) with 512 non-empty voxels
Minichunk 174/512 completed
Adding minichunk at offset (32, 8, 48) with 512 non-empty voxels
Minichunk 175/512 completed
Adding minichunk at offset (40, 8, 48) with 512 non-empty voxels
Minichunk 176/512 completed
Adding minichunk at offset (48, 8, 48) with 512 non-empty voxels
Minichunk 177/512 completed
Adding minichunk at offset (56, 8, 48) with 512 non-empty voxels
Minichunk 178/512 completed
Adding minichunk at offset (0, 16, 48) with 512 non-empty voxels
Minichunk 179/512 completed
Adding minichunk at offset (8, 16, 48) with 512 non-empty voxels
Minichunk 180/512 completed
Adding minichunk at offset (16, 16, 48) with 512 non-empty voxels
Minichunk 181/512 completed
Adding minichunk at offset (24, 16, 48) with 512 non-empty voxels
Minichunk 182/512 completed
Releasing workspace 0 (was in_use: true)
Available workspaces after release: 1/3
Force processing old readbacks: 2 pending, max age: 3 frames, current frame: 326
Velocity: [0.00, 0.00, 10628.32] speed=10628.32 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -65943.44] | Torque: [276080.875, 666518.250, 211844.344]
  Angular vel: current=[-3044.330, -7349.665, -2335.997] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.040 units: [5.00, 5.00, 246.25] -> [5.00, 5.00, 246.21]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-3043.84, -7348.48, -2335.62] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 6, pending meshes: 0
Checking 6 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing readbacks: 2 pending, completed_frame: 326, frames_in_flight: 3
Checking readback 316: submitted frame 325, current frame 326, 1 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 13 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(0, 1, -1) with 28 minichunks (available workspaces: 1)
Allocating workspace 0 (current_index: 0)
Available workspaces after allocation: 0/3
Processing 13 minichunks in workspace 0
Overall bounds: [0, 104, -24] to [64, 128, -16]
renderer_buffer_write called - buffer: anyopaque@1efff479918, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479918, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479918 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbb988, alignment: 0
Returning buffer pointer: 0x1f002dbb988 (aligned: true)
Created staging buffer at: 0x1f002dbb988
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a33000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(12500093708999331756), dst: vk.Buffer(16655718796899647951)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1efff479658, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479658, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479658 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbb08, alignment: 0
Returning buffer pointer: 0x1f002dbbb08 (aligned: true)
Created staging buffer at: 0x1f002dbbb08
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a1b000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(874686788663250862), dst: vk.Buffer(15589100158980194763)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1efff479818, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479818, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479818 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbe88, alignment: 0
Returning buffer pointer: 0x1f002dbbe88 (aligned: true)
Created staging buffer at: 0x1f002dbbe88
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a3d000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(12360794381853134768), dst: vk.Buffer(170787141142446541)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5a28, size: 832, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5a28, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5a28 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbc08, alignment: 0
Returning buffer pointer: 0x1f002dbbc08 (aligned: true)
Created staging buffer at: 0x1f002dbbc08
Staging buffer cast successful
About to map memory for staging buffer - size: 832
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a34000
About to memcpy 832 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(13194437500963131314), dst: vk.Buffer(1025278100226703827)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,1.0e2,-2.4e1] to [6.4e1,1.3e2,-1.6e1]
Buffer handles - SDF: vk.Buffer(15589100158980194763), Params: vk.Buffer(16655718796899647951), Output: vk.Buffer(15344826058683711953)
generateWorldAdaptive called - offset: 0, max_workgroups: 13
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x3x1 workgroups for 64x24x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=3, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
getBufferDeviceAddress called for buffer: vk.Buffer(170787141142446541)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534177280
Using actual brush buffer with address: 0x238480000
Dispatching brush chunk: offset=0, size=13 (of 24 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=13, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002dbbc48, alignment: 0
Returning buffer pointer: 0x1f002dbbc48 (aligned: true)
Submitting readback 318 at frame 326 (will be ready at frame 329)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 1: No available workspace in ring buffer
Re-queuing 15 remaining minichunks from batch
Successfully queued 13 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 41.3ms (target: 10.0ms), Workgroups: 13 -> 13 (PID: 13)
DeferredReadbackManager: advanced to frame 327
Processing readbacks: 3 pending, completed_frame: 327, frames_in_flight: 3
Checking readback 316: submitted frame 325, current frame 327, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 3 pending, max age: 3 frames, current frame: 327
Velocity: [0.00, 0.00, 4085.68] speed=4085.68 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -32373.76] | Torque: [169286.859, 408694.625, 129898.398]
  Angular vel: current=[-4869.557, -11756.151, -3736.543] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.040 units: [5.00, 5.00, 246.21] -> [5.00, 5.00, 246.17]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-4868.76, -11754.23, -3735.93] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 6, pending meshes: 0
Checking 6 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true

=== Camera State ===
Position: [5.00, 5.00, 246.17]
Rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°]
Mesh Generator: SimpleCube
==================
Controls:
  WASD/Left Stick: Move
  Mouse/Right Stick: Look
  Left Click/RT: Place voxel
  Right Click/LT: Remove voxel
  B/Circle: Toggle mesh generator
  Start/Menu: Save/Load world

Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 0
Command buffer begun in frame_begin
Processing readbacks: 3 pending, completed_frame: 327, frames_in_flight: 3
Checking readback 316: submitted frame 325, current frame 327, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 13 batches waiting, 1 active chunks
No available workspaces, stopping batch processing
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 37.2ms (target: 10.0ms), Workgroups: 12 -> 12 (PID: 4)
DeferredReadbackManager: advanced to frame 328
Processing readbacks: 3 pending, completed_frame: 328, frames_in_flight: 3
Checking readback 316: submitted frame 325, current frame 328, 3 frames elapsed (need 3)
Readback 316 ready (submitted frame 325, current frame 328)
Checking readback 317: submitted frame 325, current frame 328, 3 frames elapsed (need 3)
Readback 317 ready (submitted frame 325, current frame 328)
Checking readback 318: submitted frame 326, current frame 328, 2 frames elapsed (need 3)
Processing 2 completed readbacks
Minichunk batch readback complete for workspace 1 (12 minichunks, 24576 bytes)
Adding minichunk at offset (0, 0, 56) with 512 non-empty voxels
Minichunk 183/512 completed
Adding minichunk at offset (8, 0, 56) with 512 non-empty voxels
Minichunk 184/512 completed
Adding minichunk at offset (16, 0, 56) with 512 non-empty voxels
Minichunk 185/512 completed
Adding minichunk at offset (24, 0, 56) with 512 non-empty voxels
Minichunk 186/512 completed
Adding minichunk at offset (32, 0, 56) with 512 non-empty voxels
Minichunk 187/512 completed
Adding minichunk at offset (40, 0, 56) with 512 non-empty voxels
Minichunk 188/512 completed
Adding minichunk at offset (48, 0, 56) with 512 non-empty voxels
Minichunk 189/512 completed
Adding minichunk at offset (56, 0, 56) with 512 non-empty voxels
Minichunk 190/512 completed
Adding minichunk at offset (0, 8, 56) with 512 non-empty voxels
Minichunk 191/512 completed
Adding minichunk at offset (8, 8, 56) with 512 non-empty voxels
Minichunk 192/512 completed
Adding minichunk at offset (16, 8, 56) with 512 non-empty voxels
Minichunk 193/512 completed
Adding minichunk at offset (24, 8, 56) with 512 non-empty voxels
Minichunk 194/512 completed
Releasing workspace 1 (was in_use: true)
Available workspaces after release: 1/3
Minichunk batch readback complete for workspace 2 (12 minichunks, 24576 bytes)
Adding minichunk at offset (32, 8, 56) with 512 non-empty voxels
Minichunk 195/512 completed
Adding minichunk at offset (40, 8, 56) with 512 non-empty voxels
Minichunk 196/512 completed
Adding minichunk at offset (48, 8, 56) with 512 non-empty voxels
Minichunk 197/512 completed
Adding minichunk at offset (56, 8, 56) with 512 non-empty voxels
Minichunk 198/512 completed
Adding minichunk at offset (0, 16, 56) with 512 non-empty voxels
Minichunk 199/512 completed
Adding minichunk at offset (8, 16, 56) with 512 non-empty voxels
Minichunk 200/512 completed
Adding minichunk at offset (16, 16, 56) with 512 non-empty voxels
Minichunk 201/512 completed
Adding minichunk at offset (24, 16, 56) with 512 non-empty voxels
Minichunk 202/512 completed
Adding minichunk at offset (32, 16, 56) with 512 non-empty voxels
Minichunk 203/512 completed
Adding minichunk at offset (40, 16, 56) with 512 non-empty voxels
Minichunk 204/512 completed
Adding minichunk at offset (48, 16, 56) with 512 non-empty voxels
Minichunk 205/512 completed
Adding minichunk at offset (56, 16, 56) with 512 non-empty voxels
Minichunk 206/512 completed
Releasing workspace 2 (was in_use: true)
Available workspaces after release: 2/3
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 328
Velocity: [0.00, 0.00, 6535.21] speed=6535.21 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -32511.10] | Torque: [199116.688, 480710.156, 152787.625]
  Angular vel: current=[-7801.372, -18834.182, -5986.205] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.040 units: [5.00, 5.00, 246.17] -> [5.00, 5.00, 246.13]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-7800.10, -18831.12, -5985.23] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 6, pending meshes: 0
Checking 6 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 1
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 328, frames_in_flight: 3
Checking readback 318: submitted frame 326, current frame 328, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 13 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(0, 1, -1) with 6 minichunks (available workspaces: 2)
Allocating workspace 1 (current_index: 1)
Available workspaces after allocation: 1/3
Processing 6 minichunks in workspace 1
Overall bounds: [16, 112, -8] to [64, 120, 0]
renderer_buffer_write called - buffer: anyopaque@1f002cf5c68, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5c68, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5c68 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbb48, alignment: 0
Returning buffer pointer: 0x1f002dbbb48 (aligned: true)
Created staging buffer at: 0x1f002dbbb48
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a1c000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(4504912444254064567), dst: vk.Buffer(17645821321130541531)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5768, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5768, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5768 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbd08, alignment: 0
Returning buffer pointer: 0x1f002dbbd08 (aligned: true)
Created staging buffer at: 0x1f002dbbd08
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a3e000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(13267564919814885305), dst: vk.Buffer(14073195781184029143)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5928, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5928, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5928 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbb9c8, alignment: 0
Returning buffer pointer: 0x1f002dbb9c8 (aligned: true)
Created staging buffer at: 0x1f002dbb9c8
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a69000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(4706382556881227707), dst: vk.Buffer(16705046187056562649)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf57e8, size: 384, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf57e8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf57e8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbbc8, alignment: 0
Returning buffer pointer: 0x1f002dbbbc8 (aligned: true)
Created staging buffer at: 0x1f002dbbbc8
Staging buffer cast successful
About to map memory for staging buffer - size: 384
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb18f7000
About to memcpy 384 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(2795310401527484349), dst: vk.Buffer(18334454249699672543)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [1.6e1,1.1e2,-8.0e0] to [6.4e1,1.2e2,0.0e0]
Buffer handles - SDF: vk.Buffer(14073195781184029143), Params: vk.Buffer(17645821321130541531), Output: vk.Buffer(18233758775804690909)
generateWorldAdaptive called - offset: 0, max_workgroups: 6
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 6x1x1 workgroups for 48x8x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=6, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
getBufferDeviceAddress called for buffer: vk.Buffer(16705046187056562649)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545711616
Using actual brush buffer with address: 0x238f80000
Dispatching brush chunk: offset=0, size=6 (of 6 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=6, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002dbbc88, alignment: 0
Returning buffer pointer: 0x1f002dbbc88 (aligned: true)
Submitting readback 319 at frame 328 (will be ready at frame 331)
Successfully queued 6 minichunks from this batch
Processing pending minichunk batch for chunk ChunkId(0, 1, -1) with 16 minichunks (available workspaces: 1)
Allocating workspace 2 (current_index: 2)
Available workspaces after allocation: 0/3
Processing 12 minichunks in workspace 2
Overall bounds: [0, 80, -16] to [64, 96, -8]
renderer_buffer_write called - buffer: anyopaque@1f002cf5be8, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5be8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5be8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbd48, alignment: 0
Returning buffer pointer: 0x1f002dbbd48 (aligned: true)
Created staging buffer at: 0x1f002dbbd48
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a2d000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(10286817484216471490), dst: vk.Buffer(10094846052541661671)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5ba8, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ba8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5ba8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5318, alignment: 0
Returning buffer pointer: 0x1f002df5318 (aligned: true)
Created staging buffer at: 0x1f002df5318
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b1d000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(6047182011372670916), dst: vk.Buffer(16700742698545447395)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5ca8, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ca8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5ca8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5718, alignment: 0
Returning buffer pointer: 0x1f002df5718 (aligned: true)
Created staging buffer at: 0x1f002df5718
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a25000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(6285470370367541190), dst: vk.Buffer(17497165150031970789)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf58a8, size: 768, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf58a8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf58a8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df53d8, alignment: 0
Returning buffer pointer: 0x1f002df53d8 (aligned: true)
Created staging buffer at: 0x1f002df53d8
Staging buffer cast successful
About to map memory for staging buffer - size: 768
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a26000
About to memcpy 768 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(11061091373473075144), dst: vk.Buffer(14063823544068866539)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,8.0e1,-1.6e1] to [6.4e1,9.6e1,-8.0e0]
Buffer handles - SDF: vk.Buffer(16700742698545447395), Params: vk.Buffer(10094846052541661671), Output: vk.Buffer(17114293211007812073)
generateWorldAdaptive called - offset: 0, max_workgroups: 12
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
getBufferDeviceAddress called for buffer: vk.Buffer(17497165150031970789)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557245952
Using actual brush buffer with address: 0x239a80000
Dispatching brush chunk: offset=0, size=12 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=12, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002df5418, alignment: 0
Returning buffer pointer: 0x1f002df5418 (aligned: true)
Submitting readback 320 at frame 328 (will be ready at frame 331)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 1: No available workspace in ring buffer
Re-queuing 4 remaining minichunks from batch
Successfully queued 12 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 41.8ms (target: 10.0ms), Workgroups: 13 -> 13 (PID: 16)
DeferredReadbackManager: advanced to frame 329
Processing readbacks: 3 pending, completed_frame: 329, frames_in_flight: 3
Checking readback 318: submitted frame 326, current frame 329, 3 frames elapsed (need 3)
Readback 318 ready (submitted frame 326, current frame 329)
Checking readback 319: submitted frame 328, current frame 329, 1 frames elapsed (need 3)
Processing 1 completed readbacks
Minichunk batch readback complete for workspace 0 (13 minichunks, 26624 bytes)
Adding minichunk at offset (32, 40, 40) with 512 non-empty voxels
Minichunk 207/512 completed
Adding minichunk at offset (40, 40, 40) with 512 non-empty voxels
Minichunk 208/512 completed
Adding minichunk at offset (48, 40, 40) with 512 non-empty voxels
Minichunk 209/512 completed
Adding minichunk at offset (56, 40, 40) with 512 non-empty voxels
Minichunk 210/512 completed
Adding minichunk at offset (0, 48, 40) with 512 non-empty voxels
Minichunk 211/512 completed
Adding minichunk at offset (8, 48, 40) with 512 non-empty voxels
Minichunk 212/512 completed
Adding minichunk at offset (16, 48, 40) with 512 non-empty voxels
Minichunk 213/512 completed
Adding minichunk at offset (24, 48, 40) with 512 non-empty voxels
Minichunk 214/512 completed
Adding minichunk at offset (32, 48, 40) with 512 non-empty voxels
Minichunk 215/512 completed
Adding minichunk at offset (40, 48, 40) with 512 non-empty voxels
Minichunk 216/512 completed
Adding minichunk at offset (48, 48, 40) with 512 non-empty voxels
Minichunk 217/512 completed
Adding minichunk at offset (56, 48, 40) with 512 non-empty voxels
Minichunk 218/512 completed
Adding minichunk at offset (0, 56, 40) with 512 non-empty voxels
Minichunk 219/512 completed
Releasing workspace 0 (was in_use: true)
Available workspaces after release: 1/3
Force processing old readbacks: 2 pending, max age: 3 frames, current frame: 329
Velocity: [0.00, 0.00, 10469.85] speed=10469.85 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -63269.78] | Torque: [264856.406, 639420.000, 203231.500]
  Angular vel: current=[-2917.565, -7043.626, -2238.727] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.040 units: [5.00, 5.00, 246.13] -> [5.00, 5.00, 246.09]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-2917.09, -7042.49, -2238.37] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 6, pending meshes: 0
Checking 6 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing readbacks: 2 pending, completed_frame: 329, frames_in_flight: 3
Checking readback 319: submitted frame 328, current frame 329, 1 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 12 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(0, 1, -1) with 4 minichunks (available workspaces: 1)
Allocating workspace 0 (current_index: 0)
Available workspaces after allocation: 0/3
Processing 4 minichunks in workspace 0
Overall bounds: [0, 88, -8] to [32, 96, 0]
renderer_buffer_write called - buffer: anyopaque@1efff479918, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479918, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479918 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5558, alignment: 0
Returning buffer pointer: 0x1f002df5558 (aligned: true)
Created staging buffer at: 0x1f002df5558
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a2e000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(1907345910447214541), dst: vk.Buffer(16655718796899647951)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1efff479658, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479658, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479658 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5758, alignment: 0
Returning buffer pointer: 0x1f002df5758 (aligned: true)
Created staging buffer at: 0x1f002df5758
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a29000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(4735397569226608591), dst: vk.Buffer(15589100158980194763)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1efff479818, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479818, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479818 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df51d8, alignment: 0
Returning buffer pointer: 0x1f002df51d8 (aligned: true)
Created staging buffer at: 0x1f002df51d8
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a47000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(7560775215727251409), dst: vk.Buffer(170787141142446541)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5a28, size: 256, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5a28, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5a28 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5598, alignment: 0
Returning buffer pointer: 0x1f002df5598 (aligned: true)
Created staging buffer at: 0x1f002df5598
Staging buffer cast successful
About to map memory for staging buffer - size: 256
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a08000
About to memcpy 256 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(1424552553714028499), dst: vk.Buffer(1025278100226703827)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,8.8e1,-8.0e0] to [3.2e1,9.6e1,0.0e0]
Buffer handles - SDF: vk.Buffer(15589100158980194763), Params: vk.Buffer(16655718796899647951), Output: vk.Buffer(15344826058683711953)
generateWorldAdaptive called - offset: 0, max_workgroups: 4
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 4x1x1 workgroups for 32x8x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=4, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
getBufferDeviceAddress called for buffer: vk.Buffer(170787141142446541)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534177280
Using actual brush buffer with address: 0x238480000
Dispatching brush chunk: offset=0, size=4 (of 4 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=4, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002df5098, alignment: 0
Returning buffer pointer: 0x1f002df5098 (aligned: true)
Submitting readback 321 at frame 329 (will be ready at frame 332)
Successfully queued 4 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 41.6ms (target: 10.0ms), Workgroups: 14 -> 14 (PID: 15)
DeferredReadbackManager: advanced to frame 330
Processing readbacks: 3 pending, completed_frame: 330, frames_in_flight: 3
Checking readback 319: submitted frame 328, current frame 330, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 3 pending, max age: 3 frames, current frame: 330
Velocity: [0.00, 0.00, 3915.51] speed=3915.51 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -31755.41] | Torque: [165108.938, 398608.250, 126692.547]
  Angular vel: current=[-4681.975, -11303.287, -3592.606] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.040 units: [5.00, 5.00, 246.09] -> [5.00, 5.00, 246.05]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-4681.21, -11301.44, -3592.02] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 6, pending meshes: 0
Checking 6 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 0
Command buffer begun in frame_begin
Processing readbacks: 3 pending, completed_frame: 330, frames_in_flight: 3
Checking readback 319: submitted frame 328, current frame 330, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 11 batches waiting, 1 active chunks
No available workspaces, stopping batch processing
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 37.2ms (target: 10.0ms), Workgroups: 13 -> 13 (PID: 4)
DeferredReadbackManager: advanced to frame 331
Processing readbacks: 3 pending, completed_frame: 331, frames_in_flight: 3
Checking readback 319: submitted frame 328, current frame 331, 3 frames elapsed (need 3)
Readback 319 ready (submitted frame 328, current frame 331)
Checking readback 320: submitted frame 328, current frame 331, 3 frames elapsed (need 3)
Readback 320 ready (submitted frame 328, current frame 331)
Checking readback 321: submitted frame 329, current frame 331, 2 frames elapsed (need 3)
Processing 2 completed readbacks
Minichunk batch readback complete for workspace 1 (6 minichunks, 12288 bytes)
Adding minichunk at offset (16, 48, 56) with 512 non-empty voxels
Minichunk 220/512 completed
Adding minichunk at offset (24, 48, 56) with 512 non-empty voxels
Minichunk 221/512 completed
Adding minichunk at offset (32, 48, 56) with 512 non-empty voxels
Minichunk 222/512 completed
Adding minichunk at offset (40, 48, 56) with 512 non-empty voxels
Minichunk 223/512 completed
Adding minichunk at offset (48, 48, 56) with 512 non-empty voxels
Minichunk 224/512 completed
Adding minichunk at offset (56, 48, 56) with 512 non-empty voxels
Minichunk 225/512 completed
Releasing workspace 1 (was in_use: true)
Available workspaces after release: 1/3
Minichunk batch readback complete for workspace 2 (12 minichunks, 24576 bytes)
Adding minichunk at offset (32, 16, 48) with 512 non-empty voxels
Minichunk 226/512 completed
Adding minichunk at offset (40, 16, 48) with 512 non-empty voxels
Minichunk 227/512 completed
Adding minichunk at offset (48, 16, 48) with 512 non-empty voxels
Minichunk 228/512 completed
Adding minichunk at offset (56, 16, 48) with 512 non-empty voxels
Minichunk 229/512 completed
Adding minichunk at offset (0, 24, 48) with 512 non-empty voxels
Minichunk 230/512 completed
Adding minichunk at offset (8, 24, 48) with 512 non-empty voxels
Minichunk 231/512 completed
Adding minichunk at offset (16, 24, 48) with 512 non-empty voxels
Minichunk 232/512 completed
Adding minichunk at offset (24, 24, 48) with 512 non-empty voxels
Minichunk 233/512 completed
Adding minichunk at offset (32, 24, 48) with 512 non-empty voxels
Minichunk 234/512 completed
Adding minichunk at offset (40, 24, 48) with 512 non-empty voxels
Minichunk 235/512 completed
Adding minichunk at offset (48, 24, 48) with 512 non-empty voxels
Minichunk 236/512 completed
Adding minichunk at offset (56, 24, 48) with 512 non-empty voxels
Minichunk 237/512 completed
Releasing workspace 2 (was in_use: true)
Available workspaces after release: 2/3
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 331
Velocity: [0.00, 0.00, 6283.39] speed=6283.39 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -16073.65] | Torque: [146286.719, 353167.250, 112249.750]
  Angular vel: current=[-8641.307, -20861.963, -6630.709] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.040 units: [5.00, 5.00, 246.05] -> [5.00, 5.00, 246.01]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-8639.90, -20858.56, -6629.63] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 6, pending meshes: 0
Checking 6 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 1
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 331, frames_in_flight: 3
Checking readback 321: submitted frame 329, current frame 331, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 11 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(0, 1, -1) with 15 minichunks (available workspaces: 2)
Allocating workspace 1 (current_index: 1)
Available workspaces after allocation: 1/3
Processing 13 minichunks in workspace 1
Overall bounds: [0, 64, -24] to [64, 128, -8]
renderer_buffer_write called - buffer: anyopaque@1f002cf5c68, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5c68, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5c68 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5118, alignment: 0
Returning buffer pointer: 0x1f002df5118 (aligned: true)
Created staging buffer at: 0x1f002df5118
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a19000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(8344453227936223192), dst: vk.Buffer(17645821321130541531)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5768, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5768, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5768 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5398, alignment: 0
Returning buffer pointer: 0x1f002df5398 (aligned: true)
Created staging buffer at: 0x1f002df5398
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb18f5000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(8600738393254531034), dst: vk.Buffer(14073195781184029143)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5928, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5928, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5928 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5418, alignment: 0
Returning buffer pointer: 0x1f002df5418 (aligned: true)
Created staging buffer at: 0x1f002df5418
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a0b000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(387616331698016220), dst: vk.Buffer(16705046187056562649)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf57e8, size: 832, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf57e8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf57e8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5518, alignment: 0
Returning buffer pointer: 0x1f002df5518 (aligned: true)
Created staging buffer at: 0x1f002df5518
Staging buffer cast successful
About to map memory for staging buffer - size: 832
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a0c000
About to memcpy 832 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(7065819061367607262), dst: vk.Buffer(18334454249699672543)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,6.4e1,-2.4e1] to [6.4e1,1.3e2,-8.0e0]
Buffer handles - SDF: vk.Buffer(14073195781184029143), Params: vk.Buffer(17645821321130541531), Output: vk.Buffer(18233758775804690909)
generateWorldAdaptive called - offset: 0, max_workgroups: 13
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x8x2 workgroups for 64x64x16 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=8, z=2
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
getBufferDeviceAddress called for buffer: vk.Buffer(16705046187056562649)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545711616
Using actual brush buffer with address: 0x238f80000
Dispatching brush chunk: offset=0, size=13 (of 128 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=13, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002dbbf08, alignment: 0
Returning buffer pointer: 0x1f002dbbf08 (aligned: true)
Submitting readback 322 at frame 331 (will be ready at frame 334)
Allocating workspace 2 (current_index: 2)
Available workspaces after allocation: 0/3
Processing 2 minichunks in workspace 2
Overall bounds: [48, 64, -16] to [64, 72, -8]
renderer_buffer_write called - buffer: anyopaque@1f002cf5be8, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5be8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5be8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbc88, alignment: 0
Returning buffer pointer: 0x1f002dbbc88 (aligned: true)
Created staging buffer at: 0x1f002dbbc88
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a1d000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(5014028109356208099), dst: vk.Buffer(10094846052541661671)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5ba8, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ba8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5ba8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbf88, alignment: 0
Returning buffer pointer: 0x1f002dbbf88 (aligned: true)
Created staging buffer at: 0x1f002dbbf88
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a22000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(7570522386307485669), dst: vk.Buffer(16700742698545447395)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5ca8, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ca8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5ca8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbfc8, alignment: 0
Returning buffer pointer: 0x1f002dbbfc8 (aligned: true)
Created staging buffer at: 0x1f002dbbfc8
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a23000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(8333528480402640871), dst: vk.Buffer(17497165150031970789)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf58a8, size: 128, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf58a8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf58a8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbcc8, alignment: 0
Returning buffer pointer: 0x1f002dbbcc8 (aligned: true)
Created staging buffer at: 0x1f002dbbcc8
Staging buffer cast successful
About to map memory for staging buffer - size: 128
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a24000
About to memcpy 128 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(5652195653233676265), dst: vk.Buffer(14063823544068866539)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [4.8e1,6.4e1,-1.6e1] to [6.4e1,7.2e1,-8.0e0]
Buffer handles - SDF: vk.Buffer(16700742698545447395), Params: vk.Buffer(10094846052541661671), Output: vk.Buffer(17114293211007812073)
generateWorldAdaptive called - offset: 0, max_workgroups: 2
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 2x1x1 workgroups for 16x8x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=2, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
getBufferDeviceAddress called for buffer: vk.Buffer(17497165150031970789)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557245952
Using actual brush buffer with address: 0x239a80000
Dispatching brush chunk: offset=0, size=2 (of 2 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=2, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002dbbc48, alignment: 0
Returning buffer pointer: 0x1f002dbbc48 (aligned: true)
Submitting readback 323 at frame 331 (will be ready at frame 334)
Successfully queued 15 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 42.1ms (target: 10.0ms), Workgroups: 14 -> 14 (PID: 16)
DeferredReadbackManager: advanced to frame 332
Processing readbacks: 3 pending, completed_frame: 332, frames_in_flight: 3
Checking readback 321: submitted frame 329, current frame 332, 3 frames elapsed (need 3)
Readback 321 ready (submitted frame 329, current frame 332)
Checking readback 322: submitted frame 331, current frame 332, 1 frames elapsed (need 3)
Processing 1 completed readbacks
Minichunk batch readback complete for workspace 0 (4 minichunks, 8192 bytes)
Adding minichunk at offset (0, 24, 56) with 512 non-empty voxels
Minichunk 238/512 completed
Adding minichunk at offset (8, 24, 56) with 512 non-empty voxels
Minichunk 239/512 completed
Adding minichunk at offset (16, 24, 56) with 512 non-empty voxels
Minichunk 240/512 completed
Adding minichunk at offset (24, 24, 56) with 512 non-empty voxels
Minichunk 241/512 completed
Releasing workspace 0 (was in_use: true)
Available workspaces after release: 1/3
Force processing old readbacks: 2 pending, max age: 3 frames, current frame: 332
Velocity: [0.00, 0.00, 11596.95] speed=11596.95 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -68002.11] | Torque: [282032.938, 680887.750, 216411.516]
  Angular vel: current=[-2872.134, -6933.946, -2203.866] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.040 units: [5.00, 5.00, 246.01] -> [5.00, 5.00, 245.97]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-2871.67, -6932.82, -2203.51] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 6, pending meshes: 0
Checking 6 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing readbacks: 2 pending, completed_frame: 332, frames_in_flight: 3
Checking readback 322: submitted frame 331, current frame 332, 1 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 10 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(0, 1, -1) with 28 minichunks (available workspaces: 1)
Allocating workspace 0 (current_index: 0)
Available workspaces after allocation: 0/3
Processing 14 minichunks in workspace 0
Overall bounds: [0, 80, -24] to [64, 96, -16]
renderer_buffer_write called - buffer: anyopaque@1efff479918, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479918, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479918 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbb88, alignment: 0
Returning buffer pointer: 0x1f002dbbb88 (aligned: true)
Created staging buffer at: 0x1f002dbbb88
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a6a000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(6303145019784040430), dst: vk.Buffer(16655718796899647951)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1efff479658, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479658, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479658 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbdc8, alignment: 0
Returning buffer pointer: 0x1f002dbbdc8 (aligned: true)
Created staging buffer at: 0x1f002dbbdc8
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b12000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(9602689254786338800), dst: vk.Buffer(15589100158980194763)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1efff479818, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479818, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479818 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbb888, alignment: 0
Returning buffer pointer: 0x1f002dbb888 (aligned: true)
Created staging buffer at: 0x1f002dbb888
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b0c000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(6767864604379844594), dst: vk.Buffer(170787141142446541)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5a28, size: 896, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5a28, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5a28 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbe48, alignment: 0
Returning buffer pointer: 0x1f002dbbe48 (aligned: true)
Created staging buffer at: 0x1f002dbbe48
Staging buffer cast successful
About to map memory for staging buffer - size: 896
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a55000
About to memcpy 896 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(6815704355304378356), dst: vk.Buffer(1025278100226703827)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,8.0e1,-2.4e1] to [6.4e1,9.6e1,-1.6e1]
Buffer handles - SDF: vk.Buffer(15589100158980194763), Params: vk.Buffer(16655718796899647951), Output: vk.Buffer(15344826058683711953)
generateWorldAdaptive called - offset: 0, max_workgroups: 14
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
getBufferDeviceAddress called for buffer: vk.Buffer(170787141142446541)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534177280
Using actual brush buffer with address: 0x238480000
Dispatching brush chunk: offset=0, size=14 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=14, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002df5258, alignment: 0
Returning buffer pointer: 0x1f002df5258 (aligned: true)
Submitting readback 324 at frame 332 (will be ready at frame 335)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 1: No available workspace in ring buffer
Re-queuing 14 remaining minichunks from batch
Successfully queued 14 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 41.8ms (target: 10.0ms), Workgroups: 15 -> 15 (PID: 15)
DeferredReadbackManager: advanced to frame 333
Processing readbacks: 3 pending, completed_frame: 333, frames_in_flight: 3
Checking readback 322: submitted frame 331, current frame 333, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 3 pending, max age: 3 frames, current frame: 333
Velocity: [0.00, 0.00, 3854.49] speed=3854.49 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -31423.10] | Torque: [163459.000, 394624.969, 125426.539]
  Angular vel: current=[-4640.637, -11203.490, -3560.887] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.040 units: [5.00, 5.00, 245.97] -> [5.00, 5.00, 245.92]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-4639.87, -11201.65, -3560.30] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 6, pending meshes: 0
Checking 6 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 0
Command buffer begun in frame_begin
Processing readbacks: 3 pending, completed_frame: 333, frames_in_flight: 3
Checking readback 322: submitted frame 331, current frame 333, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 10 batches waiting, 1 active chunks
No available workspaces, stopping batch processing
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 37.3ms (target: 10.0ms), Workgroups: 14 -> 14 (PID: 4)
DeferredReadbackManager: advanced to frame 334
Processing readbacks: 3 pending, completed_frame: 334, frames_in_flight: 3
Checking readback 322: submitted frame 331, current frame 334, 3 frames elapsed (need 3)
Readback 322 ready (submitted frame 331, current frame 334)
Checking readback 323: submitted frame 331, current frame 334, 3 frames elapsed (need 3)
Readback 323 ready (submitted frame 331, current frame 334)
Checking readback 324: submitted frame 332, current frame 334, 2 frames elapsed (need 3)
Processing 2 completed readbacks
Minichunk batch readback complete for workspace 1 (13 minichunks, 26624 bytes)
Adding minichunk at offset (8, 56, 40) with 512 non-empty voxels
Minichunk 242/512 completed
Adding minichunk at offset (16, 56, 40) with 512 non-empty voxels
Minichunk 243/512 completed
Adding minichunk at offset (24, 56, 40) with 512 non-empty voxels
Minichunk 244/512 completed
Adding minichunk at offset (32, 56, 40) with 512 non-empty voxels
Minichunk 245/512 completed
Adding minichunk at offset (40, 56, 40) with 512 non-empty voxels
Minichunk 246/512 completed
Adding minichunk at offset (48, 56, 40) with 512 non-empty voxels
Minichunk 247/512 completed
Adding minichunk at offset (56, 56, 40) with 512 non-empty voxels
Minichunk 248/512 completed
Adding minichunk at offset (0, 0, 48) with 512 non-empty voxels
Minichunk 249/512 completed
Adding minichunk at offset (8, 0, 48) with 512 non-empty voxels
Minichunk 250/512 completed
Adding minichunk at offset (16, 0, 48) with 512 non-empty voxels
Minichunk 251/512 completed
Adding minichunk at offset (24, 0, 48) with 512 non-empty voxels
Minichunk 252/512 completed
Adding minichunk at offset (32, 0, 48) with 512 non-empty voxels
Minichunk 253/512 completed
Adding minichunk at offset (40, 0, 48) with 512 non-empty voxels
Minichunk 254/512 completed
Releasing workspace 1 (was in_use: true)
Available workspaces after release: 1/3
Minichunk batch readback complete for workspace 2 (2 minichunks, 4096 bytes)
Adding minichunk at offset (48, 0, 48) with 512 non-empty voxels
Minichunk 255/512 completed
Adding minichunk at offset (56, 0, 48) with 512 non-empty voxels
Minichunk 256/512 completed
Releasing workspace 2 (was in_use: true)
Available workspaces after release: 2/3
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 334
Velocity: [0.00, 0.00, 6227.84] speed=6227.84 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, 4903.50] | Torque: [78268.000, 188955.688, 60057.188]
  Angular vel: current=[-9653.589, -23305.826, -7407.460] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.040 units: [5.00, 5.00, 245.92] -> [5.00, 5.00, 245.88]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-9652.01, -23302.01, -7406.25] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 6, pending meshes: 0
Checking 6 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 1
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 334, frames_in_flight: 3
Checking readback 324: submitted frame 332, current frame 334, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 10 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(0, 1, -1) with 4 minichunks (available workspaces: 2)
Allocating workspace 1 (current_index: 1)
Available workspaces after allocation: 1/3
Processing 4 minichunks in workspace 1
Overall bounds: [0, 96, -16] to [32, 104, -8]
renderer_buffer_write called - buffer: anyopaque@1f002cf5c68, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5c68, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5c68 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5458, alignment: 0
Returning buffer pointer: 0x1f002df5458 (aligned: true)
Created staging buffer at: 0x1f002df5458
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a56000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(10746031814092001273), dst: vk.Buffer(17645821321130541531)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5768, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5768, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5768 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5698, alignment: 0
Returning buffer pointer: 0x1f002df5698 (aligned: true)
Created staging buffer at: 0x1f002df5698
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a1e000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(1407428759623045115), dst: vk.Buffer(14073195781184029143)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5928, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5928, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5928 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5498, alignment: 0
Returning buffer pointer: 0x1f002df5498 (aligned: true)
Created staging buffer at: 0x1f002df5498
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a0d000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(5196660289264685053), dst: vk.Buffer(16705046187056562649)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf57e8, size: 256, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf57e8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf57e8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df55d8, alignment: 0
Returning buffer pointer: 0x1f002df55d8 (aligned: true)
Created staging buffer at: 0x1f002df55d8
Staging buffer cast successful
About to map memory for staging buffer - size: 256
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a27000
About to memcpy 256 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(11719576792720216063), dst: vk.Buffer(18334454249699672543)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,9.6e1,-1.6e1] to [3.2e1,1.0e2,-8.0e0]
Buffer handles - SDF: vk.Buffer(14073195781184029143), Params: vk.Buffer(17645821321130541531), Output: vk.Buffer(18233758775804690909)
generateWorldAdaptive called - offset: 0, max_workgroups: 4
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 4x1x1 workgroups for 32x8x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=4, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
getBufferDeviceAddress called for buffer: vk.Buffer(16705046187056562649)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545711616
Using actual brush buffer with address: 0x238f80000
Dispatching brush chunk: offset=0, size=4 (of 4 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=4, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002df5618, alignment: 0
Returning buffer pointer: 0x1f002df5618 (aligned: true)
Submitting readback 325 at frame 334 (will be ready at frame 337)
Successfully queued 4 minichunks from this batch
Processing pending minichunk batch for chunk ChunkId(0, 1, -1) with 28 minichunks (available workspaces: 1)
Allocating workspace 2 (current_index: 2)
Available workspaces after allocation: 0/3
Processing 14 minichunks in workspace 2
Overall bounds: [0, 64, -32] to [64, 128, -16]
renderer_buffer_write called - buffer: anyopaque@1f002cf5be8, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5be8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5be8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5098, alignment: 0
Returning buffer pointer: 0x1f002df5098 (aligned: true)
Created staging buffer at: 0x1f002df5098
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a13000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(79989470920708100), dst: vk.Buffer(10094846052541661671)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5ba8, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ba8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5ba8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df50d8, alignment: 0
Returning buffer pointer: 0x1f002df50d8 (aligned: true)
Created staging buffer at: 0x1f002df50d8
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a5f000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(13678060988975288326), dst: vk.Buffer(16700742698545447395)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5ca8, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ca8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5ca8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbf08, alignment: 0
Returning buffer pointer: 0x1f002dbbf08 (aligned: true)
Created staging buffer at: 0x1f002dbbf08
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a60000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(13567271998337323016), dst: vk.Buffer(17497165150031970789)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf58a8, size: 896, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf58a8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf58a8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbba88, alignment: 0
Returning buffer pointer: 0x1f002dbba88 (aligned: true)
Created staging buffer at: 0x1f002dbba88
Staging buffer cast successful
About to map memory for staging buffer - size: 896
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a61000
About to memcpy 896 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(3710579064860315658), dst: vk.Buffer(14063823544068866539)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,6.4e1,-3.2e1] to [6.4e1,1.3e2,-1.6e1]
Buffer handles - SDF: vk.Buffer(16700742698545447395), Params: vk.Buffer(10094846052541661671), Output: vk.Buffer(17114293211007812073)
generateWorldAdaptive called - offset: 0, max_workgroups: 14
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x8x2 workgroups for 64x64x16 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=8, z=2
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
getBufferDeviceAddress called for buffer: vk.Buffer(17497165150031970789)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557245952
Using actual brush buffer with address: 0x239a80000
Dispatching brush chunk: offset=0, size=14 (of 128 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=14, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002dbbc48, alignment: 0
Returning buffer pointer: 0x1f002dbbc48 (aligned: true)
Submitting readback 326 at frame 334 (will be ready at frame 337)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 1: No available workspace in ring buffer
Re-queuing 14 remaining minichunks from batch
Successfully queued 14 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 41.5ms (target: 10.0ms), Workgroups: 15 -> 15 (PID: 16)
DeferredReadbackManager: advanced to frame 335
Processing readbacks: 3 pending, completed_frame: 335, frames_in_flight: 3
Checking readback 324: submitted frame 332, current frame 335, 3 frames elapsed (need 3)
Readback 324 ready (submitted frame 332, current frame 335)
Checking readback 325: submitted frame 334, current frame 335, 1 frames elapsed (need 3)
Processing 1 completed readbacks
Minichunk batch readback complete for workspace 0 (14 minichunks, 28672 bytes)
Adding minichunk at offset (0, 16, 40) with 512 non-empty voxels
Minichunk 257/512 completed
Adding minichunk at offset (8, 16, 40) with 512 non-empty voxels
Minichunk 258/512 completed
Adding minichunk at offset (16, 16, 40) with 512 non-empty voxels
Minichunk 259/512 completed
Adding minichunk at offset (24, 16, 40) with 512 non-empty voxels
Minichunk 260/512 completed
Adding minichunk at offset (32, 16, 40) with 512 non-empty voxels
Minichunk 261/512 completed
Adding minichunk at offset (40, 16, 40) with 512 non-empty voxels
Minichunk 262/512 completed
Adding minichunk at offset (48, 16, 40) with 512 non-empty voxels
Minichunk 263/512 completed
Adding minichunk at offset (56, 16, 40) with 512 non-empty voxels
Minichunk 264/512 completed
Adding minichunk at offset (0, 24, 40) with 512 non-empty voxels
Minichunk 265/512 completed
Adding minichunk at offset (8, 24, 40) with 512 non-empty voxels
Minichunk 266/512 completed
Adding minichunk at offset (16, 24, 40) with 512 non-empty voxels
Minichunk 267/512 completed
Adding minichunk at offset (24, 24, 40) with 512 non-empty voxels
Minichunk 268/512 completed
Adding minichunk at offset (32, 24, 40) with 512 non-empty voxels
Minichunk 269/512 completed
Adding minichunk at offset (40, 24, 40) with 512 non-empty voxels
Minichunk 270/512 completed
Releasing workspace 0 (was in_use: true)
Available workspaces after release: 1/3
Force processing old readbacks: 2 pending, max age: 3 frames, current frame: 335
Velocity: [0.00, 0.00, 12955.31] speed=12955.31 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -76289.20] | Torque: [313810.469, 757605.500, 240795.250]
  Angular vel: current=[-2962.576, -7152.293, -2273.265] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.041 units: [5.00, 5.00, 245.88] -> [5.00, 5.00, 245.84]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-2962.09, -7151.13, -2272.90] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 6, pending meshes: 0
Checking 6 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing readbacks: 2 pending, completed_frame: 335, frames_in_flight: 3
Checking readback 325: submitted frame 334, current frame 335, 1 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 9 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(0, 1, -1) with 28 minichunks (available workspaces: 1)
Allocating workspace 0 (current_index: 0)
Available workspaces after allocation: 0/3
Processing 15 minichunks in workspace 0
Overall bounds: [0, 88, -32] to [64, 104, -24]
renderer_buffer_write called - buffer: anyopaque@1efff479918, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479918, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479918 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d83fb8, alignment: 0
Returning buffer pointer: 0x1f002d83fb8 (aligned: true)
Created staging buffer at: 0x1f002d83fb8
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a14000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(12931590450250256399), dst: vk.Buffer(16655718796899647951)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1efff479658, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479658, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479658 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d84038, alignment: 0
Returning buffer pointer: 0x1f002d84038 (aligned: true)
Created staging buffer at: 0x1f002d84038
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a46000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(14861750127462191121), dst: vk.Buffer(15589100158980194763)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1efff479818, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479818, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479818 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d83e38, alignment: 0
Returning buffer pointer: 0x1f002d83e38 (aligned: true)
Created staging buffer at: 0x1f002d83e38
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a2f000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(2343800349627781139), dst: vk.Buffer(170787141142446541)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5a28, size: 960, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5a28, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5a28 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d840b8, alignment: 0
Returning buffer pointer: 0x1f002d840b8 (aligned: true)
Created staging buffer at: 0x1f002d840b8
Staging buffer cast successful
About to map memory for staging buffer - size: 960
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a11000
About to memcpy 960 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(9883452847473823765), dst: vk.Buffer(1025278100226703827)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,8.8e1,-3.2e1] to [6.4e1,1.0e2,-2.4e1]
Buffer handles - SDF: vk.Buffer(15589100158980194763), Params: vk.Buffer(16655718796899647951), Output: vk.Buffer(15344826058683711953)
generateWorldAdaptive called - offset: 0, max_workgroups: 15
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
getBufferDeviceAddress called for buffer: vk.Buffer(170787141142446541)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534177280
Using actual brush buffer with address: 0x238480000
Dispatching brush chunk: offset=0, size=15 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=15, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002d84178, alignment: 0
Returning buffer pointer: 0x1f002d84178 (aligned: true)
Submitting readback 327 at frame 335 (will be ready at frame 338)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 1: No available workspace in ring buffer
Re-queuing 13 remaining minichunks from batch
Successfully queued 15 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 41.0ms (target: 10.0ms), Workgroups: 14 -> 14 (PID: 14)
DeferredReadbackManager: advanced to frame 336
Processing readbacks: 3 pending, completed_frame: 336, frames_in_flight: 3
Checking readback 325: submitted frame 334, current frame 336, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 3 pending, max age: 3 frames, current frame: 336
Velocity: [0.00, 0.00, 3975.82] speed=3975.82 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -31356.40] | Torque: [165708.422, 400055.562, 127152.562]
  Angular vel: current=[-4890.299, -11806.228, -3752.459] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.040 units: [5.00, 5.00, 245.84] -> [5.00, 5.00, 245.80]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-4889.49, -11804.28, -3751.84] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 6, pending meshes: 0
Checking 6 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 0
Command buffer begun in frame_begin
Processing readbacks: 3 pending, completed_frame: 336, frames_in_flight: 3
Checking readback 325: submitted frame 334, current frame 336, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 9 batches waiting, 1 active chunks
No available workspaces, stopping batch processing
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 36.4ms (target: 10.0ms), Workgroups: 13 -> 13 (PID: 4)
DeferredReadbackManager: advanced to frame 337
Processing readbacks: 3 pending, completed_frame: 337, frames_in_flight: 3
Checking readback 325: submitted frame 334, current frame 337, 3 frames elapsed (need 3)
Readback 325 ready (submitted frame 334, current frame 337)
Checking readback 326: submitted frame 334, current frame 337, 3 frames elapsed (need 3)
Readback 326 ready (submitted frame 334, current frame 337)
Checking readback 327: submitted frame 335, current frame 337, 2 frames elapsed (need 3)
Processing 2 completed readbacks
Minichunk batch readback complete for workspace 1 (4 minichunks, 8192 bytes)
Adding minichunk at offset (0, 32, 48) with 512 non-empty voxels
Minichunk 271/512 completed
Adding minichunk at offset (8, 32, 48) with 512 non-empty voxels
Minichunk 272/512 completed
Adding minichunk at offset (16, 32, 48) with 512 non-empty voxels
Minichunk 273/512 completed
Adding minichunk at offset (24, 32, 48) with 512 non-empty voxels
Minichunk 274/512 completed
Releasing workspace 1 (was in_use: true)
Available workspaces after release: 1/3
Minichunk batch readback complete for workspace 2 (14 minichunks, 28672 bytes)
Adding minichunk at offset (32, 48, 32) with 512 non-empty voxels
Minichunk 275/512 completed
Adding minichunk at offset (40, 48, 32) with 512 non-empty voxels
Minichunk 276/512 completed
Adding minichunk at offset (48, 48, 32) with 512 non-empty voxels
Minichunk 277/512 completed
Adding minichunk at offset (56, 48, 32) with 512 non-empty voxels
Minichunk 278/512 completed
Adding minichunk at offset (0, 56, 32) with 512 non-empty voxels
Minichunk 279/512 completed
Adding minichunk at offset (8, 56, 32) with 512 non-empty voxels
Minichunk 280/512 completed
Adding minichunk at offset (16, 56, 32) with 512 non-empty voxels
Minichunk 281/512 completed
Adding minichunk at offset (24, 56, 32) with 512 non-empty voxels
Minichunk 282/512 completed
Adding minichunk at offset (32, 56, 32) with 512 non-empty voxels
Minichunk 283/512 completed
Adding minichunk at offset (40, 56, 32) with 512 non-empty voxels
Minichunk 284/512 completed
Adding minichunk at offset (48, 56, 32) with 512 non-empty voxels
Minichunk 285/512 completed
Adding minichunk at offset (56, 56, 32) with 512 non-empty voxels
Minichunk 286/512 completed
Adding minichunk at offset (0, 0, 40) with 512 non-empty voxels
Minichunk 287/512 completed
Adding minichunk at offset (8, 0, 40) with 512 non-empty voxels
Minichunk 288/512 completed
Releasing workspace 2 (was in_use: true)
Available workspaces after release: 2/3
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 337
Velocity: [0.00, 0.00, 6562.82] speed=6562.82 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, 4837.52] | Torque: [80901.156, 195312.812, 62077.688]
  Angular vel: current=[-9892.355, -23882.260, -7590.672] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.040 units: [5.00, 5.00, 245.80] -> [5.00, 5.00, 245.76]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-9890.73, -23878.34, -7589.43] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 6, pending meshes: 0
Checking 6 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 1
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 337, frames_in_flight: 3
Checking readback 327: submitted frame 335, current frame 337, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 9 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(0, 1, -1) with 14 minichunks (available workspaces: 2)
Allocating workspace 1 (current_index: 1)
Available workspaces after allocation: 1/3
Processing 13 minichunks in workspace 1
Overall bounds: [0, 88, -24] to [64, 112, -16]
renderer_buffer_write called - buffer: anyopaque@1f002cf5c68, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5c68, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5c68 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5618, alignment: 0
Returning buffer pointer: 0x1f002df5618 (aligned: true)
Created staging buffer at: 0x1f002df5618
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b0d000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(15686515789689524250), dst: vk.Buffer(17645821321130541531)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5768, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5768, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5768 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5798, alignment: 0
Returning buffer pointer: 0x1f002df5798 (aligned: true)
Created staging buffer at: 0x1f002df5798
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b1b000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(16026997157416407068), dst: vk.Buffer(14073195781184029143)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5928, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5928, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5928 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5658, alignment: 0
Returning buffer pointer: 0x1f002df5658 (aligned: true)
Created staging buffer at: 0x1f002df5658
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a30000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(11195129537480364062), dst: vk.Buffer(16705046187056562649)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf57e8, size: 832, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf57e8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf57e8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5218, alignment: 0
Returning buffer pointer: 0x1f002df5218 (aligned: true)
Created staging buffer at: 0x1f002df5218
Staging buffer cast successful
About to map memory for staging buffer - size: 832
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b1c000
About to memcpy 832 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(16705338657149554720), dst: vk.Buffer(18334454249699672543)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,8.8e1,-2.4e1] to [6.4e1,1.1e2,-1.6e1]
Buffer handles - SDF: vk.Buffer(14073195781184029143), Params: vk.Buffer(17645821321130541531), Output: vk.Buffer(18233758775804690909)
generateWorldAdaptive called - offset: 0, max_workgroups: 13
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x3x1 workgroups for 64x24x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=3, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
getBufferDeviceAddress called for buffer: vk.Buffer(16705046187056562649)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545711616
Using actual brush buffer with address: 0x238f80000
Dispatching brush chunk: offset=0, size=13 (of 24 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=13, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002df5058, alignment: 0
Returning buffer pointer: 0x1f002df5058 (aligned: true)
Submitting readback 328 at frame 337 (will be ready at frame 340)
Allocating workspace 2 (current_index: 2)
Available workspaces after allocation: 0/3
Processing 1 minichunks in workspace 2
Overall bounds: [24, 104, -24] to [32, 112, -16]
renderer_buffer_write called - buffer: anyopaque@1f002cf5be8, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5be8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5be8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5258, alignment: 0
Returning buffer pointer: 0x1f002df5258 (aligned: true)
Created staging buffer at: 0x1f002df5258
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b0e000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(14978167518122741797), dst: vk.Buffer(10094846052541661671)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5ba8, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ba8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5ba8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5358, alignment: 0
Returning buffer pointer: 0x1f002df5358 (aligned: true)
Created staging buffer at: 0x1f002df5358
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a0f000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(16350149122377912359), dst: vk.Buffer(16700742698545447395)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5ca8, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ca8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5ca8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df54d8, alignment: 0
Returning buffer pointer: 0x1f002df54d8 (aligned: true)
Created staging buffer at: 0x1f002df54d8
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a10000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(651016436759662633), dst: vk.Buffer(17497165150031970789)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf58a8, size: 64, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf58a8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf58a8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5198, alignment: 0
Returning buffer pointer: 0x1f002df5198 (aligned: true)
Created staging buffer at: 0x1f002df5198
Staging buffer cast successful
About to map memory for staging buffer - size: 64
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a62000
About to memcpy 64 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(17326018468587245611), dst: vk.Buffer(14063823544068866539)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [2.4e1,1.0e2,-2.4e1] to [3.2e1,1.1e2,-1.6e1]
Buffer handles - SDF: vk.Buffer(16700742698545447395), Params: vk.Buffer(10094846052541661671), Output: vk.Buffer(17114293211007812073)
generateWorldAdaptive called - offset: 0, max_workgroups: 1
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 1x1x1 workgroups for 8x8x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
getBufferDeviceAddress called for buffer: vk.Buffer(17497165150031970789)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557245952
Using actual brush buffer with address: 0x239a80000
Dispatching brush chunk: offset=0, size=1 (of 1 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002df56d8, alignment: 0
Returning buffer pointer: 0x1f002df56d8 (aligned: true)
Submitting readback 329 at frame 337 (will be ready at frame 340)
Successfully queued 14 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 41.2ms (target: 10.0ms), Workgroups: 14 -> 14 (PID: 16)
DeferredReadbackManager: advanced to frame 338
Processing readbacks: 3 pending, completed_frame: 338, frames_in_flight: 3
Checking readback 327: submitted frame 335, current frame 338, 3 frames elapsed (need 3)
Readback 327 ready (submitted frame 335, current frame 338)
Checking readback 328: submitted frame 337, current frame 338, 1 frames elapsed (need 3)
Processing 1 completed readbacks
Minichunk batch readback complete for workspace 0 (15 minichunks, 30720 bytes)
Adding minichunk at offset (0, 24, 32) with 512 non-empty voxels
Minichunk 289/512 completed
Adding minichunk at offset (8, 24, 32) with 512 non-empty voxels
Minichunk 290/512 completed
Adding minichunk at offset (16, 24, 32) with 512 non-empty voxels
Minichunk 291/512 completed
Adding minichunk at offset (24, 24, 32) with 512 non-empty voxels
Minichunk 292/512 completed
Adding minichunk at offset (32, 24, 32) with 512 non-empty voxels
Minichunk 293/512 completed
Adding minichunk at offset (40, 24, 32) with 512 non-empty voxels
Minichunk 294/512 completed
Adding minichunk at offset (48, 24, 32) with 512 non-empty voxels
Minichunk 295/512 completed
Adding minichunk at offset (56, 24, 32) with 512 non-empty voxels
Minichunk 296/512 completed
Adding minichunk at offset (0, 32, 32) with 512 non-empty voxels
Minichunk 297/512 completed
Adding minichunk at offset (8, 32, 32) with 512 non-empty voxels
Minichunk 298/512 completed
Adding minichunk at offset (16, 32, 32) with 512 non-empty voxels
Minichunk 299/512 completed
Adding minichunk at offset (24, 32, 32) with 512 non-empty voxels
Minichunk 300/512 completed
Adding minichunk at offset (32, 32, 32) with 512 non-empty voxels
Minichunk 301/512 completed
Adding minichunk at offset (40, 32, 32) with 512 non-empty voxels
Minichunk 302/512 completed
Adding minichunk at offset (48, 32, 32) with 512 non-empty voxels
Minichunk 303/512 completed
Releasing workspace 0 (was in_use: true)
Available workspaces after release: 1/3
Force processing old readbacks: 2 pending, max age: 3 frames, current frame: 338
Velocity: [0.00, 0.00, 13275.60] speed=13275.60 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -75606.33] | Torque: [310118.125, 748691.438, 237962.016]
  Angular vel: current=[-2847.419, -6874.280, -2184.902] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.041 units: [5.00, 5.00, 245.76] -> [5.00, 5.00, 245.72]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-2846.95, -6873.16, -2184.55] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 6, pending meshes: 0
Checking 6 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing readbacks: 2 pending, completed_frame: 338, frames_in_flight: 3
Checking readback 328: submitted frame 337, current frame 338, 1 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 8 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(0, 1, -1) with 28 minichunks (available workspaces: 1)
Allocating workspace 0 (current_index: 0)
Available workspaces after allocation: 0/3
Processing 14 minichunks in workspace 0
Overall bounds: [0, 64, -40] to [64, 128, -24]
renderer_buffer_write called - buffer: anyopaque@1efff479918, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479918, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479918 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c408, alignment: 0
Returning buffer pointer: 0x1f002d9c408 (aligned: true)
Created staging buffer at: 0x1f002d9c408
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a48000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(17297719238311546928), dst: vk.Buffer(16655718796899647951)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1efff479658, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479658, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479658 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c708, alignment: 0
Returning buffer pointer: 0x1f002d9c708 (aligned: true)
Created staging buffer at: 0x1f002d9c708
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a31000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(18067186062731513906), dst: vk.Buffer(15589100158980194763)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1efff479818, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479818, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479818 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c788, alignment: 0
Returning buffer pointer: 0x1f002d9c788 (aligned: true)
Created staging buffer at: 0x1f002d9c788
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a1f000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(16713698244055535668), dst: vk.Buffer(170787141142446541)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5a28, size: 896, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5a28, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5a28 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c688, alignment: 0
Returning buffer pointer: 0x1f002d9c688 (aligned: true)
Created staging buffer at: 0x1f002d9c688
Staging buffer cast successful
About to map memory for staging buffer - size: 896
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a32000
About to memcpy 896 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(14179598819938799670), dst: vk.Buffer(1025278100226703827)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,6.4e1,-4.0e1] to [6.4e1,1.3e2,-2.4e1]
Buffer handles - SDF: vk.Buffer(15589100158980194763), Params: vk.Buffer(16655718796899647951), Output: vk.Buffer(15344826058683711953)
generateWorldAdaptive called - offset: 0, max_workgroups: 14
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x8x2 workgroups for 64x64x16 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=8, z=2
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
getBufferDeviceAddress called for buffer: vk.Buffer(170787141142446541)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534177280
Using actual brush buffer with address: 0x238480000
Dispatching brush chunk: offset=0, size=14 (of 128 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=14, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002d9c108, alignment: 0
Returning buffer pointer: 0x1f002d9c108 (aligned: true)
Submitting readback 330 at frame 338 (will be ready at frame 341)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 1: No available workspace in ring buffer
Re-queuing 14 remaining minichunks from batch
Successfully queued 14 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 40.9ms (target: 10.0ms), Workgroups: 15 -> 15 (PID: 15)
DeferredReadbackManager: advanced to frame 339
Processing readbacks: 3 pending, completed_frame: 339, frames_in_flight: 3
Checking readback 328: submitted frame 337, current frame 339, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 3 pending, max age: 3 frames, current frame: 339
Velocity: [0.00, 0.00, 3821.24] speed=3821.24 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -30815.38] | Torque: [162047.891, 391218.250, 124343.727]
  Angular vel: current=[-4725.653, -11408.737, -3626.122] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.041 units: [5.00, 5.00, 245.72] -> [5.00, 5.00, 245.68]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-4724.87, -11406.85, -3625.52] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 6, pending meshes: 0
Checking 6 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 0
Command buffer begun in frame_begin
Processing readbacks: 3 pending, completed_frame: 339, frames_in_flight: 3
Checking readback 328: submitted frame 337, current frame 339, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 8 batches waiting, 1 active chunks
No available workspaces, stopping batch processing
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 36.8ms (target: 10.0ms), Workgroups: 14 -> 14 (PID: 4)
DeferredReadbackManager: advanced to frame 340
Processing readbacks: 3 pending, completed_frame: 340, frames_in_flight: 3
Checking readback 328: submitted frame 337, current frame 340, 3 frames elapsed (need 3)
Readback 328 ready (submitted frame 337, current frame 340)
Checking readback 329: submitted frame 337, current frame 340, 3 frames elapsed (need 3)
Readback 329 ready (submitted frame 337, current frame 340)
Checking readback 330: submitted frame 338, current frame 340, 2 frames elapsed (need 3)
Processing 2 completed readbacks
Minichunk batch readback complete for workspace 1 (13 minichunks, 26624 bytes)
Adding minichunk at offset (48, 24, 40) with 512 non-empty voxels
Minichunk 304/512 completed
Adding minichunk at offset (56, 24, 40) with 512 non-empty voxels
Minichunk 305/512 completed
Adding minichunk at offset (0, 32, 40) with 512 non-empty voxels
Minichunk 306/512 completed
Adding minichunk at offset (8, 32, 40) with 512 non-empty voxels
Minichunk 307/512 completed
Adding minichunk at offset (16, 32, 40) with 512 non-empty voxels
Minichunk 308/512 completed
Adding minichunk at offset (24, 32, 40) with 512 non-empty voxels
Minichunk 309/512 completed
Adding minichunk at offset (32, 32, 40) with 512 non-empty voxels
Minichunk 310/512 completed
Adding minichunk at offset (40, 32, 40) with 512 non-empty voxels
Minichunk 311/512 completed
Adding minichunk at offset (48, 32, 40) with 512 non-empty voxels
Minichunk 312/512 completed
Adding minichunk at offset (56, 32, 40) with 512 non-empty voxels
Minichunk 313/512 completed
Adding minichunk at offset (0, 40, 40) with 512 non-empty voxels
Minichunk 314/512 completed
Adding minichunk at offset (8, 40, 40) with 512 non-empty voxels
Minichunk 315/512 completed
Adding minichunk at offset (16, 40, 40) with 512 non-empty voxels
Minichunk 316/512 completed
Releasing workspace 1 (was in_use: true)
Available workspaces after release: 1/3
Minichunk batch readback complete for workspace 2 (1 minichunks, 2048 bytes)
Adding minichunk at offset (24, 40, 40) with 512 non-empty voxels
Minichunk 317/512 completed
Releasing workspace 2 (was in_use: true)
Available workspaces after release: 2/3
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 340
Velocity: [0.00, 0.00, 6341.79] speed=6341.79 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -14343.65] | Torque: [141230.562, 340960.750, 108370.031]
  Angular vel: current=[-8779.954, -21196.686, -6737.096] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.040 units: [5.00, 5.00, 245.68] -> [5.00, 5.00, 245.64]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-8778.51, -21193.19, -6735.99] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 6, pending meshes: 0
Checking 6 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 1
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 340, frames_in_flight: 3
Checking readback 330: submitted frame 338, current frame 340, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 8 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(0, 1, -1) with 14 minichunks (available workspaces: 2)
Allocating workspace 1 (current_index: 1)
Available workspaces after allocation: 1/3
Processing 14 minichunks in workspace 1
Overall bounds: [0, 64, -24] to [64, 80, -16]
renderer_buffer_write called - buffer: anyopaque@1f002cf5c68, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5c68, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5c68 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c648, alignment: 0
Returning buffer pointer: 0x1f002d9c648 (aligned: true)
Created staging buffer at: 0x1f002d9c648
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a5d000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(17060184044781703227), dst: vk.Buffer(17645821321130541531)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5768, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5768, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5768 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c348, alignment: 0
Returning buffer pointer: 0x1f002d9c348 (aligned: true)
Created staging buffer at: 0x1f002d9c348
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a15000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(10767681198042910781), dst: vk.Buffer(14073195781184029143)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5928, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5928, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5928 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002cf5d68, alignment: 0
Returning buffer pointer: 0x1f002cf5d68 (aligned: true)
Created staging buffer at: 0x1f002cf5d68
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a57000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(15101711943154536511), dst: vk.Buffer(16705046187056562649)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf57e8, size: 896, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf57e8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf57e8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002cf57a8, alignment: 0
Returning buffer pointer: 0x1f002cf57a8 (aligned: true)
Created staging buffer at: 0x1f002cf57a8
Staging buffer cast successful
About to map memory for staging buffer - size: 896
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a63000
About to memcpy 896 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(15565101118680731713), dst: vk.Buffer(18334454249699672543)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,6.4e1,-2.4e1] to [6.4e1,8.0e1,-1.6e1]
Buffer handles - SDF: vk.Buffer(14073195781184029143), Params: vk.Buffer(17645821321130541531), Output: vk.Buffer(18233758775804690909)
generateWorldAdaptive called - offset: 0, max_workgroups: 14
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
getBufferDeviceAddress called for buffer: vk.Buffer(16705046187056562649)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545711616
Using actual brush buffer with address: 0x238f80000
Dispatching brush chunk: offset=0, size=14 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=14, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002cf5668, alignment: 0
Returning buffer pointer: 0x1f002cf5668 (aligned: true)
Submitting readback 331 at frame 340 (will be ready at frame 343)
Successfully queued 14 minichunks from this batch
Processing pending minichunk batch for chunk ChunkId(0, 1, -1) with 13 minichunks (available workspaces: 1)
Allocating workspace 2 (current_index: 2)
Available workspaces after allocation: 0/3
Processing 13 minichunks in workspace 2
Overall bounds: [0, 96, -32] to [64, 120, -24]
renderer_buffer_write called - buffer: anyopaque@1f002cf5be8, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5be8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5be8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002cf56a8, alignment: 0
Returning buffer pointer: 0x1f002cf56a8 (aligned: true)
Created staging buffer at: 0x1f002cf56a8
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a5e000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(10996099241155235910), dst: vk.Buffer(10094846052541661671)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5ba8, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ba8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5ba8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002cf5828, alignment: 0
Returning buffer pointer: 0x1f002cf5828 (aligned: true)
Created staging buffer at: 0x1f002cf5828
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a16000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(2814855320222830664), dst: vk.Buffer(16700742698545447395)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5ca8, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ca8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5ca8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002cf5968, alignment: 0
Returning buffer pointer: 0x1f002cf5968 (aligned: true)
Created staging buffer at: 0x1f002cf5968
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a64000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(14603727733771997258), dst: vk.Buffer(17497165150031970789)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf58a8, size: 832, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf58a8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf58a8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002cf59a8, alignment: 0
Returning buffer pointer: 0x1f002cf59a8 (aligned: true)
Created staging buffer at: 0x1f002cf59a8
Staging buffer cast successful
About to map memory for staging buffer - size: 832
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a58000
About to memcpy 832 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(12413515964404994124), dst: vk.Buffer(14063823544068866539)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,9.6e1,-3.2e1] to [6.4e1,1.2e2,-2.4e1]
Buffer handles - SDF: vk.Buffer(16700742698545447395), Params: vk.Buffer(10094846052541661671), Output: vk.Buffer(17114293211007812073)
generateWorldAdaptive called - offset: 0, max_workgroups: 13
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x3x1 workgroups for 64x24x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=3, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
getBufferDeviceAddress called for buffer: vk.Buffer(17497165150031970789)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557245952
Using actual brush buffer with address: 0x239a80000
Dispatching brush chunk: offset=0, size=13 (of 24 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=13, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002d83f78, alignment: 0
Returning buffer pointer: 0x1f002d83f78 (aligned: true)
Submitting readback 332 at frame 340 (will be ready at frame 343)
Successfully queued 13 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 42.0ms (target: 10.0ms), Workgroups: 15 -> 15 (PID: 16)
DeferredReadbackManager: advanced to frame 341
Processing readbacks: 3 pending, completed_frame: 341, frames_in_flight: 3
Checking readback 330: submitted frame 338, current frame 341, 3 frames elapsed (need 3)
Readback 330 ready (submitted frame 338, current frame 341)
Checking readback 331: submitted frame 340, current frame 341, 1 frames elapsed (need 3)
Processing 1 completed readbacks
Minichunk batch readback complete for workspace 0 (14 minichunks, 28672 bytes)
Adding minichunk at offset (32, 56, 24) with 512 non-empty voxels
Minichunk 318/512 completed
Adding minichunk at offset (40, 56, 24) with 512 non-empty voxels
Minichunk 319/512 completed
Adding minichunk at offset (48, 56, 24) with 512 non-empty voxels
Minichunk 320/512 completed
Adding minichunk at offset (56, 56, 24) with 512 non-empty voxels
Minichunk 321/512 completed
Adding minichunk at offset (0, 0, 32) with 512 non-empty voxels
Minichunk 322/512 completed
Adding minichunk at offset (8, 0, 32) with 512 non-empty voxels
Minichunk 323/512 completed
Adding minichunk at offset (16, 0, 32) with 512 non-empty voxels
Minichunk 324/512 completed
Adding minichunk at offset (24, 0, 32) with 512 non-empty voxels
Minichunk 325/512 completed
Adding minichunk at offset (32, 0, 32) with 512 non-empty voxels
Minichunk 326/512 completed
Adding minichunk at offset (40, 0, 32) with 512 non-empty voxels
Minichunk 327/512 completed
Adding minichunk at offset (48, 0, 32) with 512 non-empty voxels
Minichunk 328/512 completed
Adding minichunk at offset (56, 0, 32) with 512 non-empty voxels
Minichunk 329/512 completed
Adding minichunk at offset (0, 8, 32) with 512 non-empty voxels
Minichunk 330/512 completed
Adding minichunk at offset (8, 8, 32) with 512 non-empty voxels
Minichunk 331/512 completed
Releasing workspace 0 (was in_use: true)
Available workspaces after release: 1/3
Force processing old readbacks: 2 pending, max age: 3 frames, current frame: 341
Velocity: [0.00, 0.00, 11782.61] speed=11782.61 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -66353.00] | Torque: [274446.250, 662571.875, 210590.000]
  Angular vel: current=[-2726.952, -6583.445, -2092.464] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.041 units: [5.00, 5.00, 245.64] -> [5.00, 5.00, 245.60]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-2726.51, -6582.37, -2092.12] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 6, pending meshes: 0
Checking 6 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing readbacks: 2 pending, completed_frame: 341, frames_in_flight: 3
Checking readback 331: submitted frame 340, current frame 341, 1 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 6 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(0, 1, -1) with 28 minichunks (available workspaces: 1)
Allocating workspace 0 (current_index: 0)
Available workspaces after allocation: 0/3
Processing 15 minichunks in workspace 0
Overall bounds: [0, 96, -40] to [64, 112, -32]
renderer_buffer_write called - buffer: anyopaque@1efff479918, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479918, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479918 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d83cf8, alignment: 0
Returning buffer pointer: 0x1f002d83cf8 (aligned: true)
Created staging buffer at: 0x1f002d83cf8
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a54000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(3840952556612227153), dst: vk.Buffer(16655718796899647951)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1efff479658, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479658, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479658 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d83f38, alignment: 0
Returning buffer pointer: 0x1f002d83f38 (aligned: true)
Created staging buffer at: 0x1f002d83f38
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a1a000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(13093824490440233043), dst: vk.Buffer(15589100158980194763)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1efff479818, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479818, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479818 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d84178, alignment: 0
Returning buffer pointer: 0x1f002d84178 (aligned: true)
Created staging buffer at: 0x1f002d84178
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb18f6000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(13465993783279620181), dst: vk.Buffer(170787141142446541)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5a28, size: 960, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5a28, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5a28 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d84278, alignment: 0
Returning buffer pointer: 0x1f002d84278 (aligned: true)
Created staging buffer at: 0x1f002d84278
Staging buffer cast successful
About to map memory for staging buffer - size: 960
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a59000
About to memcpy 960 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(4578243272756957271), dst: vk.Buffer(1025278100226703827)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,9.6e1,-4.0e1] to [6.4e1,1.1e2,-3.2e1]
Buffer handles - SDF: vk.Buffer(15589100158980194763), Params: vk.Buffer(16655718796899647951), Output: vk.Buffer(15344826058683711953)
generateWorldAdaptive called - offset: 0, max_workgroups: 15
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
getBufferDeviceAddress called for buffer: vk.Buffer(170787141142446541)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534177280
Using actual brush buffer with address: 0x238480000
Dispatching brush chunk: offset=0, size=15 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=15, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002d9c448, alignment: 0
Returning buffer pointer: 0x1f002d9c448 (aligned: true)
Submitting readback 333 at frame 341 (will be ready at frame 344)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 1: No available workspace in ring buffer
Re-queuing 13 remaining minichunks from batch
Successfully queued 15 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 43.3ms (target: 10.0ms), Workgroups: 16 -> 16 (PID: 16)
DeferredReadbackManager: advanced to frame 342
Processing readbacks: 3 pending, completed_frame: 342, frames_in_flight: 3
Checking readback 331: submitted frame 340, current frame 342, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 3 pending, max age: 3 frames, current frame: 342
Velocity: [0.00, 0.00, 3659.52] speed=3659.52 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -31629.33] | Torque: [156294.031, 377327.188, 119928.641]
  Angular vel: current=[-3846.913, -9287.270, -2951.840] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.041 units: [5.00, 5.00, 245.60] -> [5.00, 5.00, 245.56]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-3846.27, -9285.72, -2951.35] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 6, pending meshes: 0
Checking 6 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 0
Command buffer begun in frame_begin
Processing readbacks: 3 pending, completed_frame: 342, frames_in_flight: 3
Checking readback 331: submitted frame 340, current frame 342, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 6 batches waiting, 1 active chunks
No available workspaces, stopping batch processing
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 39.2ms (target: 10.0ms), Workgroups: 15 -> 15 (PID: 4)
DeferredReadbackManager: advanced to frame 343
Processing readbacks: 3 pending, completed_frame: 343, frames_in_flight: 3
Checking readback 331: submitted frame 340, current frame 343, 3 frames elapsed (need 3)
Readback 331 ready (submitted frame 340, current frame 343)
Checking readback 332: submitted frame 340, current frame 343, 3 frames elapsed (need 3)
Readback 332 ready (submitted frame 340, current frame 343)
Checking readback 333: submitted frame 341, current frame 343, 2 frames elapsed (need 3)
Processing 2 completed readbacks
Minichunk batch readback complete for workspace 1 (14 minichunks, 28672 bytes)
Adding minichunk at offset (16, 0, 40) with 512 non-empty voxels
Minichunk 332/512 completed
Adding minichunk at offset (24, 0, 40) with 512 non-empty voxels
Minichunk 333/512 completed
Adding minichunk at offset (32, 0, 40) with 512 non-empty voxels
Minichunk 334/512 completed
Adding minichunk at offset (40, 0, 40) with 512 non-empty voxels
Minichunk 335/512 completed
Adding minichunk at offset (48, 0, 40) with 512 non-empty voxels
Minichunk 336/512 completed
Adding minichunk at offset (56, 0, 40) with 512 non-empty voxels
Minichunk 337/512 completed
Adding minichunk at offset (0, 8, 40) with 512 non-empty voxels
Minichunk 338/512 completed
Adding minichunk at offset (8, 8, 40) with 512 non-empty voxels
Minichunk 339/512 completed
Adding minichunk at offset (16, 8, 40) with 512 non-empty voxels
Minichunk 340/512 completed
Adding minichunk at offset (24, 8, 40) with 512 non-empty voxels
Minichunk 341/512 completed
Adding minichunk at offset (32, 8, 40) with 512 non-empty voxels
Minichunk 342/512 completed
Adding minichunk at offset (40, 8, 40) with 512 non-empty voxels
Minichunk 343/512 completed
Adding minichunk at offset (48, 8, 40) with 512 non-empty voxels
Minichunk 344/512 completed
Adding minichunk at offset (56, 8, 40) with 512 non-empty voxels
Minichunk 345/512 completed
Releasing workspace 1 (was in_use: true)
Available workspaces after release: 1/3
Minichunk batch readback complete for workspace 2 (13 minichunks, 26624 bytes)
Adding minichunk at offset (56, 32, 32) with 512 non-empty voxels
Minichunk 346/512 completed
Adding minichunk at offset (0, 40, 32) with 512 non-empty voxels
Minichunk 347/512 completed
Adding minichunk at offset (8, 40, 32) with 512 non-empty voxels
Minichunk 348/512 completed
Adding minichunk at offset (16, 40, 32) with 512 non-empty voxels
Minichunk 349/512 completed
Adding minichunk at offset (24, 40, 32) with 512 non-empty voxels
Minichunk 350/512 completed
Adding minichunk at offset (32, 40, 32) with 512 non-empty voxels
Minichunk 351/512 completed
Adding minichunk at offset (40, 40, 32) with 512 non-empty voxels
Minichunk 352/512 completed
Adding minichunk at offset (48, 40, 32) with 512 non-empty voxels
Minichunk 353/512 completed
Adding minichunk at offset (56, 40, 32) with 512 non-empty voxels
Minichunk 354/512 completed
Adding minichunk at offset (0, 48, 32) with 512 non-empty voxels
Minichunk 355/512 completed
Adding minichunk at offset (8, 48, 32) with 512 non-empty voxels
Minichunk 356/512 completed
Adding minichunk at offset (16, 48, 32) with 512 non-empty voxels
Minichunk 357/512 completed
Adding minichunk at offset (24, 48, 32) with 512 non-empty voxels
Minichunk 358/512 completed
Releasing workspace 2 (was in_use: true)
Available workspaces after release: 2/3
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 343
Velocity: [0.00, 0.00, 5162.46] speed=5162.46 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -23626.09] | Torque: [159581.172, 385263.000, 122450.969]
  Angular vel: current=[-7157.005, -17278.539, -5491.764] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.041 units: [5.00, 5.00, 245.56] -> [5.00, 5.00, 245.52]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-7155.81, -17275.66, -5490.85] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 6, pending meshes: 0
Checking 6 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 1
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 343, frames_in_flight: 3
Checking readback 333: submitted frame 341, current frame 343, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 6 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(0, 1, -1) with 28 minichunks (available workspaces: 2)
Allocating workspace 1 (current_index: 1)
Available workspaces after allocation: 1/3
Processing 15 minichunks in workspace 1
Overall bounds: [0, 104, -48] to [64, 120, -40]
renderer_buffer_write called - buffer: anyopaque@1f002cf5c68, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5c68, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5c68 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c508, alignment: 0
Returning buffer pointer: 0x1f002d9c508 (aligned: true)
Created staging buffer at: 0x1f002d9c508
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a5a000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(12047580902495096924), dst: vk.Buffer(17645821321130541531)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5768, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5768, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5768 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c0c8, alignment: 0
Returning buffer pointer: 0x1f002d9c0c8 (aligned: true)
Created staging buffer at: 0x1f002d9c0c8
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a2a000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(5227352056842424414), dst: vk.Buffer(14073195781184029143)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5928, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5928, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5928 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c3c8, alignment: 0
Returning buffer pointer: 0x1f002d9c3c8 (aligned: true)
Created staging buffer at: 0x1f002d9c3c8
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a37000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(3326760446324641888), dst: vk.Buffer(16705046187056562649)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf57e8, size: 960, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf57e8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf57e8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c108, alignment: 0
Returning buffer pointer: 0x1f002d9c108 (aligned: true)
Created staging buffer at: 0x1f002d9c108
Staging buffer cast successful
About to map memory for staging buffer - size: 960
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a20000
About to memcpy 960 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(12525008642484736098), dst: vk.Buffer(18334454249699672543)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,1.0e2,-4.8e1] to [6.4e1,1.2e2,-4.0e1]
Buffer handles - SDF: vk.Buffer(14073195781184029143), Params: vk.Buffer(17645821321130541531), Output: vk.Buffer(18233758775804690909)
generateWorldAdaptive called - offset: 0, max_workgroups: 15
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
getBufferDeviceAddress called for buffer: vk.Buffer(16705046187056562649)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545711616
Using actual brush buffer with address: 0x238f80000
Dispatching brush chunk: offset=0, size=15 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=15, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002d9c208, alignment: 0
Returning buffer pointer: 0x1f002d9c208 (aligned: true)
Submitting readback 334 at frame 343 (will be ready at frame 346)
Allocating workspace 2 (current_index: 2)
Available workspaces after allocation: 0/3
Processing 13 minichunks in workspace 2
Overall bounds: [0, 64, -48] to [64, 128, -32]
renderer_buffer_write called - buffer: anyopaque@1f002cf5be8, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5be8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5be8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df56d8, alignment: 0
Returning buffer pointer: 0x1f002df56d8 (aligned: true)
Created staging buffer at: 0x1f002df56d8
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a39000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(6190515446681178215), dst: vk.Buffer(10094846052541661671)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5ba8, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ba8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5ba8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5058, alignment: 0
Returning buffer pointer: 0x1f002df5058 (aligned: true)
Created staging buffer at: 0x1f002df5058
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a49000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(6692110452249333865), dst: vk.Buffer(16700742698545447395)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5ca8, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ca8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5ca8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5158, alignment: 0
Returning buffer pointer: 0x1f002df5158 (aligned: true)
Created staging buffer at: 0x1f002df5158
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a4a000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(11409488125408317547), dst: vk.Buffer(17497165150031970789)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf58a8, size: 832, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf58a8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf58a8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5298, alignment: 0
Returning buffer pointer: 0x1f002df5298 (aligned: true)
Created staging buffer at: 0x1f002df5298
Staging buffer cast successful
About to map memory for staging buffer - size: 832
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a4b000
About to memcpy 832 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(6588109846401257581), dst: vk.Buffer(14063823544068866539)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,6.4e1,-4.8e1] to [6.4e1,1.3e2,-3.2e1]
Buffer handles - SDF: vk.Buffer(16700742698545447395), Params: vk.Buffer(10094846052541661671), Output: vk.Buffer(17114293211007812073)
generateWorldAdaptive called - offset: 0, max_workgroups: 13
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x8x2 workgroups for 64x64x16 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=8, z=2
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
getBufferDeviceAddress called for buffer: vk.Buffer(17497165150031970789)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557245952
Using actual brush buffer with address: 0x239a80000
Dispatching brush chunk: offset=0, size=13 (of 128 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=13, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002df52d8, alignment: 0
Returning buffer pointer: 0x1f002df52d8 (aligned: true)
Submitting readback 335 at frame 343 (will be ready at frame 346)
Successfully queued 28 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 45.5ms (target: 10.0ms), Workgroups: 16 -> 16 (PID: 16)
DeferredReadbackManager: advanced to frame 344
Processing readbacks: 3 pending, completed_frame: 344, frames_in_flight: 3
Checking readback 333: submitted frame 341, current frame 344, 3 frames elapsed (need 3)
Readback 333 ready (submitted frame 341, current frame 344)
Checking readback 334: submitted frame 343, current frame 344, 1 frames elapsed (need 3)
Processing 1 completed readbacks
Minichunk batch readback complete for workspace 0 (15 minichunks, 30720 bytes)
Adding minichunk at offset (0, 32, 24) with 512 non-empty voxels
Minichunk 359/512 completed
Adding minichunk at offset (8, 32, 24) with 512 non-empty voxels
Minichunk 360/512 completed
Adding minichunk at offset (16, 32, 24) with 512 non-empty voxels
Minichunk 361/512 completed
Adding minichunk at offset (24, 32, 24) with 512 non-empty voxels
Minichunk 362/512 completed
Adding minichunk at offset (32, 32, 24) with 512 non-empty voxels
Minichunk 363/512 completed
Adding minichunk at offset (40, 32, 24) with 512 non-empty voxels
Minichunk 364/512 completed
Adding minichunk at offset (48, 32, 24) with 512 non-empty voxels
Minichunk 365/512 completed
Adding minichunk at offset (56, 32, 24) with 512 non-empty voxels
Minichunk 366/512 completed
Adding minichunk at offset (0, 40, 24) with 512 non-empty voxels
Minichunk 367/512 completed
Adding minichunk at offset (8, 40, 24) with 512 non-empty voxels
Minichunk 368/512 completed
Adding minichunk at offset (16, 40, 24) with 512 non-empty voxels
Minichunk 369/512 completed
Adding minichunk at offset (24, 40, 24) with 512 non-empty voxels
Minichunk 370/512 completed
Adding minichunk at offset (32, 40, 24) with 512 non-empty voxels
Minichunk 371/512 completed
Adding minichunk at offset (40, 40, 24) with 512 non-empty voxels
Minichunk 372/512 completed
Adding minichunk at offset (48, 40, 24) with 512 non-empty voxels
Minichunk 373/512 completed
Releasing workspace 0 (was in_use: true)
Available workspaces after release: 1/3
Force processing old readbacks: 2 pending, max age: 3 frames, current frame: 344
Velocity: [0.00, 0.00, 9604.49] speed=9604.49 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -53269.75] | Torque: [223611.969, 539847.125, 171583.531]
  Angular vel: current=[-2517.037, -6076.665, -1931.391] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.042 units: [5.00, 5.00, 245.52] -> [5.00, 5.00, 245.48]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-2516.62, -6075.66, -1931.07] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 6, pending meshes: 0
Checking 6 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing readbacks: 2 pending, completed_frame: 344, frames_in_flight: 3
Checking readback 334: submitted frame 343, current frame 344, 1 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 5 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(0, 1, -1) with 14 minichunks (available workspaces: 1)
Allocating workspace 0 (current_index: 0)
Available workspaces after allocation: 0/3
Processing 14 minichunks in workspace 0
Overall bounds: [0, 72, -32] to [64, 88, -24]
renderer_buffer_write called - buffer: anyopaque@1efff479918, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479918, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479918 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c808, alignment: 0
Returning buffer pointer: 0x1f002d9c808 (aligned: true)
Created staging buffer at: 0x1f002d9c808
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a3b000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(5432805700097020018), dst: vk.Buffer(16655718796899647951)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1efff479658, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479658, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479658 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c288, alignment: 0
Returning buffer pointer: 0x1f002d9c288 (aligned: true)
Created staging buffer at: 0x1f002d9c288
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a35000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(10379304004298477684), dst: vk.Buffer(15589100158980194763)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1efff479818, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479818, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479818 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c448, alignment: 0
Returning buffer pointer: 0x1f002d9c448 (aligned: true)
Created staging buffer at: 0x1f002d9c448
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb18f0000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(7633689329323217014), dst: vk.Buffer(170787141142446541)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5a28, size: 896, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5a28, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5a28 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c488, alignment: 0
Returning buffer pointer: 0x1f002d9c488 (aligned: true)
Created staging buffer at: 0x1f002d9c488
Staging buffer cast successful
About to map memory for staging buffer - size: 896
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b17000
About to memcpy 896 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(4982703023080870008), dst: vk.Buffer(1025278100226703827)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,7.2e1,-3.2e1] to [6.4e1,8.8e1,-2.4e1]
Buffer handles - SDF: vk.Buffer(15589100158980194763), Params: vk.Buffer(16655718796899647951), Output: vk.Buffer(15344826058683711953)
generateWorldAdaptive called - offset: 0, max_workgroups: 14
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
getBufferDeviceAddress called for buffer: vk.Buffer(170787141142446541)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534177280
Using actual brush buffer with address: 0x238480000
Dispatching brush chunk: offset=0, size=14 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=14, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002d9c4c8, alignment: 0
Returning buffer pointer: 0x1f002d9c4c8 (aligned: true)
Submitting readback 336 at frame 344 (will be ready at frame 347)
Successfully queued 14 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 46.6ms (target: 10.0ms), Workgroups: 16 -> 16 (PID: 16)
DeferredReadbackManager: advanced to frame 345
Processing readbacks: 3 pending, completed_frame: 345, frames_in_flight: 3
Checking readback 334: submitted frame 343, current frame 345, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 3 pending, max age: 3 frames, current frame: 345
Velocity: [0.00, 0.00, 3377.77] speed=3377.77 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -29743.79] | Torque: [149902.297, 361896.156, 115024.094]
  Angular vel: current=[-3909.998, -9439.571, -3000.248] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.042 units: [5.00, 5.00, 245.48] -> [5.00, 5.00, 245.44]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-3909.34, -9437.97, -2999.74] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 6, pending meshes: 0
Checking 6 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 0
Command buffer begun in frame_begin
Processing readbacks: 3 pending, completed_frame: 345, frames_in_flight: 3
Checking readback 334: submitted frame 343, current frame 345, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 4 batches waiting, 1 active chunks
No available workspaces, stopping batch processing
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 42.4ms (target: 10.0ms), Workgroups: 15 -> 15 (PID: 4)
DeferredReadbackManager: advanced to frame 346
Processing readbacks: 3 pending, completed_frame: 346, frames_in_flight: 3
Checking readback 334: submitted frame 343, current frame 346, 3 frames elapsed (need 3)
Readback 334 ready (submitted frame 343, current frame 346)
Checking readback 335: submitted frame 343, current frame 346, 3 frames elapsed (need 3)
Readback 335 ready (submitted frame 343, current frame 346)
Checking readback 336: submitted frame 344, current frame 346, 2 frames elapsed (need 3)
Processing 2 completed readbacks
Minichunk batch readback complete for workspace 1 (15 minichunks, 30720 bytes)
Adding minichunk at offset (0, 40, 16) with 512 non-empty voxels
Minichunk 374/512 completed
Adding minichunk at offset (8, 40, 16) with 512 non-empty voxels
Minichunk 375/512 completed
Adding minichunk at offset (16, 40, 16) with 512 non-empty voxels
Minichunk 376/512 completed
Adding minichunk at offset (24, 40, 16) with 512 non-empty voxels
Minichunk 377/512 completed
Adding minichunk at offset (32, 40, 16) with 512 non-empty voxels
Minichunk 378/512 completed
Adding minichunk at offset (40, 40, 16) with 512 non-empty voxels
Minichunk 379/512 completed
Adding minichunk at offset (48, 40, 16) with 512 non-empty voxels
Minichunk 380/512 completed
Adding minichunk at offset (56, 40, 16) with 512 non-empty voxels
Minichunk 381/512 completed
Adding minichunk at offset (0, 48, 16) with 512 non-empty voxels
Minichunk 382/512 completed
Adding minichunk at offset (8, 48, 16) with 512 non-empty voxels
Minichunk 383/512 completed
Adding minichunk at offset (16, 48, 16) with 512 non-empty voxels
Minichunk 384/512 completed
Adding minichunk at offset (24, 48, 16) with 512 non-empty voxels
Minichunk 385/512 completed
Adding minichunk at offset (32, 48, 16) with 512 non-empty voxels
Minichunk 386/512 completed
Adding minichunk at offset (40, 48, 16) with 512 non-empty voxels
Minichunk 387/512 completed
Adding minichunk at offset (48, 48, 16) with 512 non-empty voxels
Minichunk 388/512 completed
Releasing workspace 1 (was in_use: true)
Available workspaces after release: 1/3
Minichunk batch readback complete for workspace 2 (13 minichunks, 26624 bytes)
Adding minichunk at offset (56, 48, 16) with 512 non-empty voxels
Minichunk 389/512 completed
Adding minichunk at offset (0, 56, 16) with 512 non-empty voxels
Minichunk 390/512 completed
Adding minichunk at offset (8, 56, 16) with 512 non-empty voxels
Minichunk 391/512 completed
Adding minichunk at offset (16, 56, 16) with 512 non-empty voxels
Minichunk 392/512 completed
Adding minichunk at offset (24, 56, 16) with 512 non-empty voxels
Minichunk 393/512 completed
Adding minichunk at offset (32, 56, 16) with 512 non-empty voxels
Minichunk 394/512 completed
Adding minichunk at offset (40, 56, 16) with 512 non-empty voxels
Minichunk 395/512 completed
Adding minichunk at offset (48, 56, 16) with 512 non-empty voxels
Minichunk 396/512 completed
Adding minichunk at offset (56, 56, 16) with 512 non-empty voxels
Minichunk 397/512 completed
Adding minichunk at offset (0, 0, 24) with 512 non-empty voxels
Minichunk 398/512 completed
Adding minichunk at offset (8, 0, 24) with 512 non-empty voxels
Minichunk 399/512 completed
Adding minichunk at offset (16, 0, 24) with 512 non-empty voxels
Minichunk 400/512 completed
Adding minichunk at offset (24, 0, 24) with 512 non-empty voxels
Minichunk 401/512 completed
Releasing workspace 2 (was in_use: true)
Available workspaces after release: 2/3
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 346
Velocity: [0.00, 0.00, 5247.03] speed=5247.03 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -30499.38] | Torque: [180068.344, 434723.406, 138171.312]
  Angular vel: current=[-6645.103, -16042.699, -5098.967] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.041 units: [5.00, 5.00, 245.44] -> [5.00, 5.00, 245.40]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-6643.98, -16039.98, -5098.10] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 6, pending meshes: 0
Checking 6 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 1
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 346, frames_in_flight: 3
Checking readback 336: submitted frame 344, current frame 346, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 4 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(0, 1, -1) with 13 minichunks (available workspaces: 2)
Allocating workspace 1 (current_index: 1)
Available workspaces after allocation: 1/3
Processing 13 minichunks in workspace 1
Overall bounds: [0, 104, -40] to [64, 128, -32]
renderer_buffer_write called - buffer: anyopaque@1f002cf5c68, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5c68, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5c68 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c208, alignment: 0
Returning buffer pointer: 0x1f002d9c208 (aligned: true)
Created staging buffer at: 0x1f002d9c208
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a65000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(7115048594989650045), dst: vk.Buffer(17645821321130541531)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5768, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5768, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5768 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c548, alignment: 0
Returning buffer pointer: 0x1f002d9c548 (aligned: true)
Created staging buffer at: 0x1f002d9c548
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a17000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(8968013759838687359), dst: vk.Buffer(14073195781184029143)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5928, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5928, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5928 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c2c8, alignment: 0
Returning buffer pointer: 0x1f002d9c2c8 (aligned: true)
Created staging buffer at: 0x1f002d9c2c8
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b13000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(8885069901174149249), dst: vk.Buffer(16705046187056562649)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf57e8, size: 832, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf57e8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf57e8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c308, alignment: 0
Returning buffer pointer: 0x1f002d9c308 (aligned: true)
Created staging buffer at: 0x1f002d9c308
Staging buffer cast successful
About to map memory for staging buffer - size: 832
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a66000
About to memcpy 832 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(8566354465630720131), dst: vk.Buffer(18334454249699672543)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,1.0e2,-4.0e1] to [6.4e1,1.3e2,-3.2e1]
Buffer handles - SDF: vk.Buffer(14073195781184029143), Params: vk.Buffer(17645821321130541531), Output: vk.Buffer(18233758775804690909)
generateWorldAdaptive called - offset: 0, max_workgroups: 13
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x3x1 workgroups for 64x24x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=3, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
getBufferDeviceAddress called for buffer: vk.Buffer(16705046187056562649)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545711616
Using actual brush buffer with address: 0x238f80000
Dispatching brush chunk: offset=0, size=13 (of 24 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=13, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002cf59e8, alignment: 0
Returning buffer pointer: 0x1f002cf59e8 (aligned: true)
Submitting readback 337 at frame 346 (will be ready at frame 349)
Successfully queued 13 minichunks from this batch
Processing pending minichunk batch for chunk ChunkId(0, 1, -1) with 28 minichunks (available workspaces: 1)
Allocating workspace 2 (current_index: 2)
Available workspaces after allocation: 0/3
Processing 15 minichunks in workspace 2
Overall bounds: [0, 72, -48] to [64, 96, -40]
renderer_buffer_write called - buffer: anyopaque@1f002cf5be8, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5be8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5be8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002cf5a68, alignment: 0
Returning buffer pointer: 0x1f002cf5a68 (aligned: true)
Created staging buffer at: 0x1f002cf5a68
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b18000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(1074157989151117448), dst: vk.Buffer(10094846052541661671)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5ba8, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ba8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5ba8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002cf5668, alignment: 0
Returning buffer pointer: 0x1f002cf5668 (aligned: true)
Created staging buffer at: 0x1f002cf5668
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a0e000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(7607176805442654346), dst: vk.Buffer(16700742698545447395)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5ca8, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ca8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5ca8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1efff479b58, alignment: 0
Returning buffer pointer: 0x1efff479b58 (aligned: true)
Created staging buffer at: 0x1efff479b58
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b14000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(4684984961093079180), dst: vk.Buffer(17497165150031970789)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf58a8, size: 960, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf58a8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf58a8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1efff479858, alignment: 0
Returning buffer pointer: 0x1efff479858 (aligned: true)
Created staging buffer at: 0x1efff479858
Staging buffer cast successful
About to map memory for staging buffer - size: 960
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a18000
About to memcpy 960 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(7380831341748686990), dst: vk.Buffer(14063823544068866539)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,7.2e1,-4.8e1] to [6.4e1,9.6e1,-4.0e1]
Buffer handles - SDF: vk.Buffer(16700742698545447395), Params: vk.Buffer(10094846052541661671), Output: vk.Buffer(17114293211007812073)
generateWorldAdaptive called - offset: 0, max_workgroups: 15
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x3x1 workgroups for 64x24x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=3, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
getBufferDeviceAddress called for buffer: vk.Buffer(17497165150031970789)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557245952
Using actual brush buffer with address: 0x239a80000
Dispatching brush chunk: offset=0, size=15 (of 24 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=15, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1efff479bd8, alignment: 0
Returning buffer pointer: 0x1efff479bd8 (aligned: true)
Submitting readback 338 at frame 346 (will be ready at frame 349)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 1: No available workspace in ring buffer
Re-queuing 13 remaining minichunks from batch
Successfully queued 15 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 47.0ms (target: 10.0ms), Workgroups: 16 -> 16 (PID: 16)
DeferredReadbackManager: advanced to frame 347
Processing readbacks: 3 pending, completed_frame: 347, frames_in_flight: 3
Checking readback 336: submitted frame 344, current frame 347, 3 frames elapsed (need 3)
Readback 336 ready (submitted frame 344, current frame 347)
Checking readback 337: submitted frame 346, current frame 347, 1 frames elapsed (need 3)
Processing 1 completed readbacks
Minichunk batch readback complete for workspace 0 (14 minichunks, 28672 bytes)
Adding minichunk at offset (16, 8, 32) with 512 non-empty voxels
Minichunk 402/512 completed
Adding minichunk at offset (24, 8, 32) with 512 non-empty voxels
Minichunk 403/512 completed
Adding minichunk at offset (32, 8, 32) with 512 non-empty voxels
Minichunk 404/512 completed
Adding minichunk at offset (40, 8, 32) with 512 non-empty voxels
Minichunk 405/512 completed
Adding minichunk at offset (48, 8, 32) with 512 non-empty voxels
Minichunk 406/512 completed
Adding minichunk at offset (56, 8, 32) with 512 non-empty voxels
Minichunk 407/512 completed
Adding minichunk at offset (0, 16, 32) with 512 non-empty voxels
Minichunk 408/512 completed
Adding minichunk at offset (8, 16, 32) with 512 non-empty voxels
Minichunk 409/512 completed
Adding minichunk at offset (16, 16, 32) with 512 non-empty voxels
Minichunk 410/512 completed
Adding minichunk at offset (24, 16, 32) with 512 non-empty voxels
Minichunk 411/512 completed
Adding minichunk at offset (32, 16, 32) with 512 non-empty voxels
Minichunk 412/512 completed
Adding minichunk at offset (40, 16, 32) with 512 non-empty voxels
Minichunk 413/512 completed
Adding minichunk at offset (48, 16, 32) with 512 non-empty voxels
Minichunk 414/512 completed
Adding minichunk at offset (56, 16, 32) with 512 non-empty voxels
Minichunk 415/512 completed
Releasing workspace 0 (was in_use: true)
Available workspaces after release: 1/3
Force processing old readbacks: 2 pending, max age: 3 frames, current frame: 347
Velocity: [0.00, 0.00, 8917.39] speed=8917.39 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -55080.80] | Torque: [233818.188, 564487.062, 179415.016]
  Angular vel: current=[-2862.725, -6911.229, -2196.646] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.042 units: [5.00, 5.00, 245.40] -> [5.00, 5.00, 245.35]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-2862.24, -6910.07, -2196.28] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 6, pending meshes: 0
Checking 6 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing readbacks: 2 pending, completed_frame: 347, frames_in_flight: 3
Checking readback 337: submitted frame 346, current frame 347, 1 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 3 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(0, 1, -1) with 28 minichunks (available workspaces: 1)
Allocating workspace 0 (current_index: 0)
Available workspaces after allocation: 0/3
Processing 16 minichunks in workspace 0
Overall bounds: [0, 64, -64] to [64, 128, -48]
renderer_buffer_write called - buffer: anyopaque@1efff479918, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479918, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479918 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d842b8, alignment: 0
Returning buffer pointer: 0x1f002d842b8 (aligned: true)
Created staging buffer at: 0x1f002d842b8
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a4c000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(11390269761666420883), dst: vk.Buffer(16655718796899647951)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1efff479658, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479658, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479658 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d83ef8, alignment: 0
Returning buffer pointer: 0x1f002d83ef8 (aligned: true)
Created staging buffer at: 0x1f002d83ef8
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a67000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(6028226430909812885), dst: vk.Buffer(15589100158980194763)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1efff479818, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479818, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479818 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d842f8, alignment: 0
Returning buffer pointer: 0x1f002d842f8 (aligned: true)
Created staging buffer at: 0x1f002d842f8
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b19000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(6108976763876937879), dst: vk.Buffer(170787141142446541)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5a28, size: 1024, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5a28, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5a28 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d83f78, alignment: 0
Returning buffer pointer: 0x1f002d83f78 (aligned: true)
Created staging buffer at: 0x1f002d83f78
Staging buffer cast successful
About to map memory for staging buffer - size: 1024
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a38000
About to memcpy 1024 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(9961386231650586777), dst: vk.Buffer(1025278100226703827)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,6.4e1,-6.4e1] to [6.4e1,1.3e2,-4.8e1]
Buffer handles - SDF: vk.Buffer(15589100158980194763), Params: vk.Buffer(16655718796899647951), Output: vk.Buffer(15344826058683711953)
generateWorldAdaptive called - offset: 0, max_workgroups: 16
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x8x2 workgroups for 64x64x16 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=8, z=2
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
getBufferDeviceAddress called for buffer: vk.Buffer(170787141142446541)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534177280
Using actual brush buffer with address: 0x238480000
Dispatching brush chunk: offset=0, size=16 (of 128 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=16, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002d83d38, alignment: 0
Returning buffer pointer: 0x1f002d83d38 (aligned: true)
Submitting readback 339 at frame 347 (will be ready at frame 350)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 1: No available workspace in ring buffer
Re-queuing 12 remaining minichunks from batch
Successfully queued 16 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 45.9ms (target: 10.0ms), Workgroups: 15 -> 15 (PID: 13)
DeferredReadbackManager: advanced to frame 348
Processing readbacks: 3 pending, completed_frame: 348, frames_in_flight: 3
Checking readback 337: submitted frame 346, current frame 348, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 3 pending, max age: 3 frames, current frame: 348
Velocity: [0.00, 0.00, 3841.61] speed=3841.61 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -31004.58] | Torque: [162614.469, 392586.125, 124778.492]
  Angular vel: current=[-4711.407, -11374.346, -3615.191] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.042 units: [5.00, 5.00, 245.35] -> [5.00, 5.00, 245.31]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-4710.61, -11372.41, -3614.58] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 6, pending meshes: 0
Checking 6 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 0
Command buffer begun in frame_begin
Processing readbacks: 3 pending, completed_frame: 348, frames_in_flight: 3
Checking readback 337: submitted frame 346, current frame 348, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 3 batches waiting, 1 active chunks
No available workspaces, stopping batch processing
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 41.4ms (target: 10.0ms), Workgroups: 14 -> 14 (PID: 4)
DeferredReadbackManager: advanced to frame 349
Processing readbacks: 3 pending, completed_frame: 349, frames_in_flight: 3
Checking readback 337: submitted frame 346, current frame 349, 3 frames elapsed (need 3)
Readback 337 ready (submitted frame 346, current frame 349)
Checking readback 338: submitted frame 346, current frame 349, 3 frames elapsed (need 3)
Readback 338 ready (submitted frame 346, current frame 349)
Checking readback 339: submitted frame 347, current frame 349, 2 frames elapsed (need 3)
Processing 2 completed readbacks
Minichunk batch readback complete for workspace 1 (13 minichunks, 26624 bytes)
Adding minichunk at offset (56, 40, 24) with 512 non-empty voxels
Minichunk 416/512 completed
Adding minichunk at offset (0, 48, 24) with 512 non-empty voxels
Minichunk 417/512 completed
Adding minichunk at offset (8, 48, 24) with 512 non-empty voxels
Minichunk 418/512 completed
Adding minichunk at offset (16, 48, 24) with 512 non-empty voxels
Minichunk 419/512 completed
Adding minichunk at offset (24, 48, 24) with 512 non-empty voxels
Minichunk 420/512 completed
Adding minichunk at offset (32, 48, 24) with 512 non-empty voxels
Minichunk 421/512 completed
Adding minichunk at offset (40, 48, 24) with 512 non-empty voxels
Minichunk 422/512 completed
Adding minichunk at offset (48, 48, 24) with 512 non-empty voxels
Minichunk 423/512 completed
Adding minichunk at offset (56, 48, 24) with 512 non-empty voxels
Minichunk 424/512 completed
Adding minichunk at offset (0, 56, 24) with 512 non-empty voxels
Minichunk 425/512 completed
Adding minichunk at offset (8, 56, 24) with 512 non-empty voxels
Minichunk 426/512 completed
Adding minichunk at offset (16, 56, 24) with 512 non-empty voxels
Minichunk 427/512 completed
Adding minichunk at offset (24, 56, 24) with 512 non-empty voxels
Minichunk 428/512 completed
Releasing workspace 1 (was in_use: true)
Available workspaces after release: 1/3
Minichunk batch readback complete for workspace 2 (15 minichunks, 30720 bytes)
Adding minichunk at offset (32, 8, 16) with 512 non-empty voxels
Minichunk 429/512 completed
Adding minichunk at offset (40, 8, 16) with 512 non-empty voxels
Minichunk 430/512 completed
Adding minichunk at offset (48, 8, 16) with 512 non-empty voxels
Minichunk 431/512 completed
Adding minichunk at offset (56, 8, 16) with 512 non-empty voxels
Minichunk 432/512 completed
Adding minichunk at offset (0, 16, 16) with 512 non-empty voxels
Minichunk 433/512 completed
Adding minichunk at offset (8, 16, 16) with 512 non-empty voxels
Minichunk 434/512 completed
Adding minichunk at offset (16, 16, 16) with 512 non-empty voxels
Minichunk 435/512 completed
Adding minichunk at offset (24, 16, 16) with 512 non-empty voxels
Minichunk 436/512 completed
Adding minichunk at offset (32, 16, 16) with 512 non-empty voxels
Minichunk 437/512 completed
Adding minichunk at offset (40, 16, 16) with 512 non-empty voxels
Minichunk 438/512 completed
Adding minichunk at offset (48, 16, 16) with 512 non-empty voxels
Minichunk 439/512 completed
Adding minichunk at offset (56, 16, 16) with 512 non-empty voxels
Minichunk 440/512 completed
Adding minichunk at offset (0, 24, 16) with 512 non-empty voxels
Minichunk 441/512 completed
Adding minichunk at offset (8, 24, 16) with 512 non-empty voxels
Minichunk 442/512 completed
Adding minichunk at offset (16, 24, 16) with 512 non-empty voxels
Minichunk 443/512 completed
Releasing workspace 2 (was in_use: true)
Available workspaces after release: 2/3
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 349
Velocity: [0.00, 0.00, 6322.41] speed=6322.41 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -37079.15] | Torque: [210071.953, 507158.688, 161193.953]
  Angular vel: current=[-7194.169, -17368.262, -5520.281] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.041 units: [5.00, 5.00, 245.31] -> [5.00, 5.00, 245.27]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-7192.95, -17365.32, -5519.34] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 6, pending meshes: 0
Checking 6 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 1
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 349, frames_in_flight: 3
Checking readback 339: submitted frame 347, current frame 349, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 3 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(0, 1, -1) with 28 minichunks (available workspaces: 2)
Allocating workspace 1 (current_index: 1)
Available workspaces after allocation: 1/3
Processing 14 minichunks in workspace 1
Overall bounds: [0, 112, -56] to [64, 128, -48]
renderer_buffer_write called - buffer: anyopaque@1f002cf5c68, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5c68, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5c68 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d83cb8, alignment: 0
Returning buffer pointer: 0x1f002d83cb8 (aligned: true)
Created staging buffer at: 0x1f002d83cb8
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a28000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(3293690435096023198), dst: vk.Buffer(17645821321130541531)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5768, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5768, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5768 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c188, alignment: 0
Returning buffer pointer: 0x1f002d9c188 (aligned: true)
Created staging buffer at: 0x1f002d9c188
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a12000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(4711543664462008480), dst: vk.Buffer(14073195781184029143)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5928, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5928, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5928 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c1c8, alignment: 0
Returning buffer pointer: 0x1f002d9c1c8 (aligned: true)
Created staging buffer at: 0x1f002d9c1c8
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a36000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(13297728921811292322), dst: vk.Buffer(16705046187056562649)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf57e8, size: 896, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf57e8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf57e8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c248, alignment: 0
Returning buffer pointer: 0x1f002d9c248 (aligned: true)
Created staging buffer at: 0x1f002d9c248
Staging buffer cast successful
About to map memory for staging buffer - size: 896
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a21000
About to memcpy 896 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(3607875882733015204), dst: vk.Buffer(18334454249699672543)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,1.1e2,-5.6e1] to [6.4e1,1.3e2,-4.8e1]
Buffer handles - SDF: vk.Buffer(14073195781184029143), Params: vk.Buffer(17645821321130541531), Output: vk.Buffer(18233758775804690909)
generateWorldAdaptive called - offset: 0, max_workgroups: 14
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
getBufferDeviceAddress called for buffer: vk.Buffer(16705046187056562649)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545711616
Using actual brush buffer with address: 0x238f80000
Dispatching brush chunk: offset=0, size=14 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=14, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002d9c7c8, alignment: 0
Returning buffer pointer: 0x1f002d9c7c8 (aligned: true)
Submitting readback 340 at frame 349 (will be ready at frame 352)
Allocating workspace 2 (current_index: 2)
Available workspaces after allocation: 0/3
Processing 14 minichunks in workspace 2
Overall bounds: [0, 64, -56] to [64, 128, -40]
renderer_buffer_write called - buffer: anyopaque@1f002cf5be8, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5be8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5be8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c4c8, alignment: 0
Returning buffer pointer: 0x1f002d9c4c8 (aligned: true)
Created staging buffer at: 0x1f002d9c4c8
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a50000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(12936982455272870057), dst: vk.Buffer(10094846052541661671)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5ba8, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ba8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5ba8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c588, alignment: 0
Returning buffer pointer: 0x1f002d9c588 (aligned: true)
Created staging buffer at: 0x1f002d9c588
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a4d000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(13197489745241837739), dst: vk.Buffer(16700742698545447395)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5ca8, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ca8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5ca8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbc48, alignment: 0
Returning buffer pointer: 0x1f002dbbc48 (aligned: true)
Created staging buffer at: 0x1f002dbbc48
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a68000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(315085947660144813), dst: vk.Buffer(17497165150031970789)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf58a8, size: 896, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf58a8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf58a8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbe08, alignment: 0
Returning buffer pointer: 0x1f002dbbe08 (aligned: true)
Created staging buffer at: 0x1f002dbbe08
Staging buffer cast successful
About to map memory for staging buffer - size: 896
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b1a000
About to memcpy 896 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(11694048331746513071), dst: vk.Buffer(14063823544068866539)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,6.4e1,-5.6e1] to [6.4e1,1.3e2,-4.0e1]
Buffer handles - SDF: vk.Buffer(16700742698545447395), Params: vk.Buffer(10094846052541661671), Output: vk.Buffer(17114293211007812073)
generateWorldAdaptive called - offset: 0, max_workgroups: 14
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x8x2 workgroups for 64x64x16 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=8, z=2
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
getBufferDeviceAddress called for buffer: vk.Buffer(17497165150031970789)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557245952
Using actual brush buffer with address: 0x239a80000
Dispatching brush chunk: offset=0, size=14 (of 128 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=14, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002dbb948, alignment: 0
Returning buffer pointer: 0x1f002dbb948 (aligned: true)
Submitting readback 341 at frame 349 (will be ready at frame 352)
Successfully queued 28 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 44.8ms (target: 10.0ms), Workgroups: 15 -> 15 (PID: 16)
DeferredReadbackManager: advanced to frame 350
Processing readbacks: 3 pending, completed_frame: 350, frames_in_flight: 3
Checking readback 339: submitted frame 347, current frame 350, 3 frames elapsed (need 3)
Readback 339 ready (submitted frame 347, current frame 350)
Checking readback 340: submitted frame 349, current frame 350, 1 frames elapsed (need 3)
Processing 1 completed readbacks
Minichunk batch readback complete for workspace 0 (16 minichunks, 32768 bytes)
Adding minichunk at offset (0, 56, 0) with 512 non-empty voxels
Minichunk 444/512 completed
Adding minichunk at offset (8, 56, 0) with 512 non-empty voxels
Minichunk 445/512 completed
Adding minichunk at offset (16, 56, 0) with 512 non-empty voxels
Minichunk 446/512 completed
Adding minichunk at offset (24, 56, 0) with 512 non-empty voxels
Minichunk 447/512 completed
Adding minichunk at offset (32, 56, 0) with 512 non-empty voxels
Minichunk 448/512 completed
Adding minichunk at offset (40, 56, 0) with 512 non-empty voxels
Minichunk 449/512 completed
Adding minichunk at offset (48, 56, 0) with 512 non-empty voxels
Minichunk 450/512 completed
Adding minichunk at offset (56, 56, 0) with 512 non-empty voxels
Minichunk 451/512 completed
Adding minichunk at offset (0, 0, 8) with 512 non-empty voxels
Minichunk 452/512 completed
Adding minichunk at offset (8, 0, 8) with 512 non-empty voxels
Minichunk 453/512 completed
Adding minichunk at offset (16, 0, 8) with 512 non-empty voxels
Minichunk 454/512 completed
Adding minichunk at offset (24, 0, 8) with 512 non-empty voxels
Minichunk 455/512 completed
Adding minichunk at offset (32, 0, 8) with 512 non-empty voxels
Minichunk 456/512 completed
Adding minichunk at offset (40, 0, 8) with 512 non-empty voxels
Minichunk 457/512 completed
Adding minichunk at offset (48, 0, 8) with 512 non-empty voxels
Minichunk 458/512 completed
Adding minichunk at offset (56, 0, 8) with 512 non-empty voxels
Minichunk 459/512 completed
Releasing workspace 0 (was in_use: true)
Available workspaces after release: 1/3
Force processing old readbacks: 2 pending, max age: 3 frames, current frame: 350
Velocity: [0.00, 0.00, 9654.10] speed=9654.10 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -60820.66] | Torque: [256806.141, 619984.875, 197054.297]
  Angular vel: current=[-3023.008, -7298.188, -2319.636] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.042 units: [5.00, 5.00, 245.27] -> [5.00, 5.00, 245.23]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-3022.50, -7296.96, -2319.25] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 6, pending meshes: 0
Checking 6 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing readbacks: 2 pending, completed_frame: 350, frames_in_flight: 3
Checking readback 340: submitted frame 349, current frame 350, 1 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 2 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(0, 1, -1) with 13 minichunks (available workspaces: 1)
Allocating workspace 0 (current_index: 0)
Available workspaces after allocation: 0/3
Processing 13 minichunks in workspace 0
Overall bounds: [0, 88, -48] to [64, 104, -40]
renderer_buffer_write called - buffer: anyopaque@1efff479918, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479918, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479918 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbec8, alignment: 0
Returning buffer pointer: 0x1f002dbbec8 (aligned: true)
Created staging buffer at: 0x1f002dbbec8
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a3c000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(14213765044260311220), dst: vk.Buffer(16655718796899647951)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1efff479658, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479658, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479658 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbf48, alignment: 0
Returning buffer pointer: 0x1f002dbbf48 (aligned: true)
Created staging buffer at: 0x1f002dbbf48
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a4e000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(1632715393619464374), dst: vk.Buffer(15589100158980194763)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1efff479818, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479818, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479818 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c148, alignment: 0
Returning buffer pointer: 0x1f002d9c148 (aligned: true)
Created staging buffer at: 0x1f002d9c148
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a5b000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(10660683323497517240), dst: vk.Buffer(170787141142446541)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5a28, size: 832, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5a28, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5a28 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c5c8, alignment: 0
Returning buffer pointer: 0x1f002d9c5c8 (aligned: true)
Created staging buffer at: 0x1f002d9c5c8
Staging buffer cast successful
About to map memory for staging buffer - size: 832
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a5c000
About to memcpy 832 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(16049748252018348218), dst: vk.Buffer(1025278100226703827)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,8.8e1,-4.8e1] to [6.4e1,1.0e2,-4.0e1]
Buffer handles - SDF: vk.Buffer(15589100158980194763), Params: vk.Buffer(16655718796899647951), Output: vk.Buffer(15344826058683711953)
generateWorldAdaptive called - offset: 0, max_workgroups: 13
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
getBufferDeviceAddress called for buffer: vk.Buffer(170787141142446541)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534177280
Using actual brush buffer with address: 0x238480000
Dispatching brush chunk: offset=0, size=13 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=13, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002d9c608, alignment: 0
Returning buffer pointer: 0x1f002d9c608 (aligned: true)
Submitting readback 342 at frame 350 (will be ready at frame 353)
Successfully queued 13 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 44.3ms (target: 10.0ms), Workgroups: 15 -> 15 (PID: 15)
DeferredReadbackManager: advanced to frame 351
Processing readbacks: 3 pending, completed_frame: 351, frames_in_flight: 3
Checking readback 340: submitted frame 349, current frame 351, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 3 pending, max age: 3 frames, current frame: 351
[WINDOW] WM_ACTIVATE: is_active=false
Velocity: [0.00, 0.00, 4056.66] speed=4056.66 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -33526.16] | Torque: [169272.688, 408660.469, 129887.516]
  Angular vel: current=[-4437.725, -10713.617, -3405.187] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.042 units: [5.00, 5.00, 245.23] -> [5.00, 5.00, 245.19]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-4436.97, -10711.79, -3404.61] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 6, pending meshes: 0
Checking 6 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true

=== Camera State ===
Position: [5.00, 5.00, 245.19]
Rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°]
Mesh Generator: SimpleCube
==================
Controls:
  WASD/Left Stick: Move
  Mouse/Right Stick: Look
  Left Click/RT: Place voxel
  Right Click/LT: Remove voxel
  B/Circle: Toggle mesh generator
  Start/Menu: Save/Load world

Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 0
Command buffer begun in frame_begin
Processing readbacks: 3 pending, completed_frame: 351, frames_in_flight: 3
Checking readback 340: submitted frame 349, current frame 351, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 1 batches waiting, 1 active chunks
No available workspaces, stopping batch processing
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 41.1ms (target: 10.0ms), Workgroups: 14 -> 14 (PID: 4)
DeferredReadbackManager: advanced to frame 352
Processing readbacks: 3 pending, completed_frame: 352, frames_in_flight: 3
Checking readback 340: submitted frame 349, current frame 352, 3 frames elapsed (need 3)
Readback 340 ready (submitted frame 349, current frame 352)
Checking readback 341: submitted frame 349, current frame 352, 3 frames elapsed (need 3)
Readback 341 ready (submitted frame 349, current frame 352)
Checking readback 342: submitted frame 350, current frame 352, 2 frames elapsed (need 3)
Processing 2 completed readbacks
Minichunk batch readback complete for workspace 1 (14 minichunks, 28672 bytes)
Adding minichunk at offset (0, 48, 8) with 512 non-empty voxels
Minichunk 460/512 completed
Adding minichunk at offset (8, 48, 8) with 512 non-empty voxels
Minichunk 461/512 completed
Adding minichunk at offset (16, 48, 8) with 512 non-empty voxels
Minichunk 462/512 completed
Adding minichunk at offset (24, 48, 8) with 512 non-empty voxels
Minichunk 463/512 completed
Adding minichunk at offset (32, 48, 8) with 512 non-empty voxels
Minichunk 464/512 completed
Adding minichunk at offset (40, 48, 8) with 512 non-empty voxels
Minichunk 465/512 completed
Adding minichunk at offset (48, 48, 8) with 512 non-empty voxels
Minichunk 466/512 completed
Adding minichunk at offset (56, 48, 8) with 512 non-empty voxels
Minichunk 467/512 completed
Adding minichunk at offset (0, 56, 8) with 512 non-empty voxels
Minichunk 468/512 completed
Adding minichunk at offset (8, 56, 8) with 512 non-empty voxels
Minichunk 469/512 completed
Adding minichunk at offset (16, 56, 8) with 512 non-empty voxels
Minichunk 470/512 completed
Adding minichunk at offset (24, 56, 8) with 512 non-empty voxels
Minichunk 471/512 completed
Adding minichunk at offset (32, 56, 8) with 512 non-empty voxels
Minichunk 472/512 completed
Adding minichunk at offset (40, 56, 8) with 512 non-empty voxels
Minichunk 473/512 completed
Releasing workspace 1 (was in_use: true)
Available workspaces after release: 1/3
Minichunk batch readback complete for workspace 2 (14 minichunks, 28672 bytes)
Adding minichunk at offset (48, 56, 8) with 512 non-empty voxels
Minichunk 474/512 completed
Adding minichunk at offset (56, 56, 8) with 512 non-empty voxels
Minichunk 475/512 completed
Adding minichunk at offset (0, 0, 16) with 512 non-empty voxels
Minichunk 476/512 completed
Adding minichunk at offset (8, 0, 16) with 512 non-empty voxels
Minichunk 477/512 completed
Adding minichunk at offset (16, 0, 16) with 512 non-empty voxels
Minichunk 478/512 completed
Adding minichunk at offset (24, 0, 16) with 512 non-empty voxels
Minichunk 479/512 completed
Adding minichunk at offset (32, 0, 16) with 512 non-empty voxels
Minichunk 480/512 completed
Adding minichunk at offset (40, 0, 16) with 512 non-empty voxels
Minichunk 481/512 completed
Adding minichunk at offset (48, 0, 16) with 512 non-empty voxels
Minichunk 482/512 completed
Adding minichunk at offset (56, 0, 16) with 512 non-empty voxels
Minichunk 483/512 completed
Adding minichunk at offset (0, 8, 16) with 512 non-empty voxels
Minichunk 484/512 completed
Adding minichunk at offset (8, 8, 16) with 512 non-empty voxels
Minichunk 485/512 completed
Adding minichunk at offset (16, 8, 16) with 512 non-empty voxels
Minichunk 486/512 completed
Adding minichunk at offset (24, 8, 16) with 512 non-empty voxels
Minichunk 487/512 completed
Releasing workspace 2 (was in_use: true)
Available workspaces after release: 2/3
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 352
Velocity: [0.00, 0.00, 5955.08] speed=5955.08 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -46478.23] | Torque: [226601.875, 547065.438, 173877.781]
  Angular vel: current=[-5345.488, -12905.149, -4101.737] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.041 units: [5.00, 5.00, 245.19] -> [5.00, 5.00, 245.15]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-5344.58, -12902.96, -4101.04] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 6, pending meshes: 0
Checking 6 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 1
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 352, frames_in_flight: 3
Checking readback 342: submitted frame 350, current frame 352, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 1 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(0, 1, -1) with 12 minichunks (available workspaces: 2)
Allocating workspace 1 (current_index: 1)
Available workspaces after allocation: 1/3
Processing 12 minichunks in workspace 1
Overall bounds: [0, 72, -56] to [64, 88, -48]
renderer_buffer_write called - buffer: anyopaque@1f002cf5c68, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5c68, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5c68 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c388, alignment: 0
Returning buffer pointer: 0x1f002d9c388 (aligned: true)
Created staging buffer at: 0x1f002d9c388
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a2b000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(15493653753596219583), dst: vk.Buffer(17645821321130541531)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5768, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5768, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5768 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c7c8, alignment: 0
Returning buffer pointer: 0x1f002d9c7c8 (aligned: true)
Created staging buffer at: 0x1f002d9c7c8
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b15000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(9403166377251967169), dst: vk.Buffer(14073195781184029143)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5928, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5928, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5928 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c6c8, alignment: 0
Returning buffer pointer: 0x1f002d9c6c8 (aligned: true)
Created staging buffer at: 0x1f002d9c6c8
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a09000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(17016851192019423427), dst: vk.Buffer(16705046187056562649)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf57e8, size: 768, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf57e8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf57e8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c748, alignment: 0
Returning buffer pointer: 0x1f002d9c748 (aligned: true)
Created staging buffer at: 0x1f002d9c748
Staging buffer cast successful
About to map memory for staging buffer - size: 768
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a0a000
About to memcpy 768 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(14901916386736476357), dst: vk.Buffer(18334454249699672543)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,7.2e1,-5.6e1] to [6.4e1,8.8e1,-4.8e1]
Buffer handles - SDF: vk.Buffer(14073195781184029143), Params: vk.Buffer(17645821321130541531), Output: vk.Buffer(18233758775804690909)
generateWorldAdaptive called - offset: 0, max_workgroups: 12
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
getBufferDeviceAddress called for buffer: vk.Buffer(16705046187056562649)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545711616
Using actual brush buffer with address: 0x238f80000
Dispatching brush chunk: offset=0, size=12 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=12, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002dbbac8, alignment: 0
Returning buffer pointer: 0x1f002dbbac8 (aligned: true)
Submitting readback 343 at frame 352 (will be ready at frame 355)
Successfully queued 12 minichunks from this batch
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 42.2ms (target: 10.0ms), Workgroups: 15 -> 15 (PID: 16)
DeferredReadbackManager: advanced to frame 353
Processing readbacks: 2 pending, completed_frame: 353, frames_in_flight: 3
Checking readback 342: submitted frame 350, current frame 353, 3 frames elapsed (need 3)
Readback 342 ready (submitted frame 350, current frame 353)
Checking readback 343: submitted frame 352, current frame 353, 1 frames elapsed (need 3)
Processing 1 completed readbacks
Minichunk batch readback complete for workspace 0 (13 minichunks, 26624 bytes)
Adding minichunk at offset (24, 24, 16) with 512 non-empty voxels
Minichunk 488/512 completed
Adding minichunk at offset (32, 24, 16) with 512 non-empty voxels
Minichunk 489/512 completed
Adding minichunk at offset (40, 24, 16) with 512 non-empty voxels
Minichunk 490/512 completed
Adding minichunk at offset (48, 24, 16) with 512 non-empty voxels
Minichunk 491/512 completed
Adding minichunk at offset (56, 24, 16) with 512 non-empty voxels
Minichunk 492/512 completed
Adding minichunk at offset (0, 32, 16) with 512 non-empty voxels
Minichunk 493/512 completed
Adding minichunk at offset (8, 32, 16) with 512 non-empty voxels
Minichunk 494/512 completed
Adding minichunk at offset (16, 32, 16) with 512 non-empty voxels
Minichunk 495/512 completed
Adding minichunk at offset (24, 32, 16) with 512 non-empty voxels
Minichunk 496/512 completed
Adding minichunk at offset (32, 32, 16) with 512 non-empty voxels
Minichunk 497/512 completed
Adding minichunk at offset (40, 32, 16) with 512 non-empty voxels
Minichunk 498/512 completed
Adding minichunk at offset (48, 32, 16) with 512 non-empty voxels
Minichunk 499/512 completed
Adding minichunk at offset (56, 32, 16) with 512 non-empty voxels
Minichunk 500/512 completed
Releasing workspace 0 (was in_use: true)
Available workspaces after release: 2/3
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 353
Velocity: [0.00, 0.00, 7173.21] speed=7173.21 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -54816.07] | Torque: [243708.438, 588364.188, 187004.062]
  Angular vel: current=[-3949.924, -9535.960, -3030.883] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.041 units: [5.00, 5.00, 245.15] -> [5.00, 5.00, 245.10]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-3949.26, -9534.35, -3030.37] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 6, pending meshes: 0
Checking 6 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 353, frames_in_flight: 3
Checking readback 343: submitted frame 352, current frame 353, 1 frames elapsed (need 3)
Processing 0 completed readbacks
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 38.6ms (target: 10.0ms), Workgroups: 14 -> 14 (PID: 4)
DeferredReadbackManager: advanced to frame 354
Processing readbacks: 1 pending, completed_frame: 354, frames_in_flight: 3
Checking readback 343: submitted frame 352, current frame 354, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 354
Velocity: [0.00, 0.00, 5300.46] speed=5300.46 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -6324.32] | Torque: [107413.031, 259317.938, 82420.922]
  Angular vel: current=[-8385.420, -20244.195, -6434.360] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.041 units: [5.00, 5.00, 245.10] -> [5.00, 5.00, 245.06]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-8384.00, -20240.78, -6433.27] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 6, pending meshes: 0
Checking 6 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 0
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 354, frames_in_flight: 3
Checking readback 343: submitted frame 352, current frame 354, 2 frames elapsed (need 3)
Processing 0 completed readbacks
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 34.3ms (target: 10.0ms), Workgroups: 13 -> 13 (PID: 4)
DeferredReadbackManager: advanced to frame 355
Processing readbacks: 1 pending, completed_frame: 355, frames_in_flight: 3
Checking readback 343: submitted frame 352, current frame 355, 3 frames elapsed (need 3)
Readback 343 ready (submitted frame 352, current frame 355)
Processing 1 completed readbacks
Minichunk batch readback complete for workspace 1 (12 minichunks, 24576 bytes)
Adding minichunk at offset (0, 8, 8) with 512 non-empty voxels
Minichunk 501/512 completed
Adding minichunk at offset (8, 8, 8) with 512 non-empty voxels
Minichunk 502/512 completed
Adding minichunk at offset (16, 8, 8) with 512 non-empty voxels
Minichunk 503/512 completed
Adding minichunk at offset (24, 8, 8) with 512 non-empty voxels
Minichunk 504/512 completed
Adding minichunk at offset (32, 8, 8) with 512 non-empty voxels
Minichunk 505/512 completed
Adding minichunk at offset (40, 8, 8) with 512 non-empty voxels
Minichunk 506/512 completed
Adding minichunk at offset (48, 8, 8) with 512 non-empty voxels
Minichunk 507/512 completed
Adding minichunk at offset (56, 8, 8) with 512 non-empty voxels
Minichunk 508/512 completed
Adding minichunk at offset (0, 16, 8) with 512 non-empty voxels
Minichunk 509/512 completed
Adding minichunk at offset (8, 16, 8) with 512 non-empty voxels
Minichunk 510/512 completed
Adding minichunk at offset (16, 16, 8) with 512 non-empty voxels
Minichunk 511/512 completed
Adding minichunk at offset (24, 16, 8) with 512 non-empty voxels
Minichunk 512/512 completed
Chunk ChunkId(0, 1, -1) complete! All 512 minichunks processed
GPU generation completed successfully
Releasing workspace 1 (was in_use: true)
GPU generation completed successfully. Voxel count: 262144
Available workspaces after release: 3/3
Velocity: [0.00, 0.00, 11252.50] speed=11252.50 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -96563.84] | Torque: [431581.125, 1041928.938, 331163.875]
  Angular vel: current=[-7184.442, -17344.779, -5512.817] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
Non-empty voxels: 262144
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457)GPU pipeline worker: Processing request 9 with priority 7
, size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
GPU generation thread spawned for bounds: [0.0,64.0,64.0] to [64.0,128.0,128.0]
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: GPU generation: starting for 262144 voxels
gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: GPU generation: waiting for result...
vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390queue_generation_blocking returned: true

Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0xAsync generation completed for chunk ChunkId(0, 1, -1)
29475600000001c1
Pipeline bound successfully
Sending result for chunk ChunkId(0, 1, -1) through channel
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayoutResult sent successfully for chunk ChunkId(0, 1, -1)
(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.041 units: [5.00, 5.00, 245.06] -> [5.00, 5.00, 245.02]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-7183.24, -17341.87, -5511.89] target: [0.00, 0.00, 0.00]
Received generation result 1 for region RegionId(0, 0, -1)
Processing single chunk workspace for chunk ChunkId(0, 1, -1)
Chunk ChunkId(0, 1, -1) has 262144 non-empty voxels out of 262144
First few non-empty voxels in chunk ChunkId(0, 1, -1):
  Voxel at (0,0,0): type 3735928559
  Voxel at (1,0,0): type 3735928559
  Voxel at (2,0,0): type 3735928559
  Voxel at (3,0,0): type 3735928559
  Voxel at (4,0,0): type 3735928559
  Voxel at (5,0,0): type 3735928559
  Voxel at (6,0,0): type 3735928559
  Voxel at (7,0,0): type 3735928559
  Voxel at (8,0,0): type 3735928559
  Voxel at (9,0,0): type 3735928559
Extracted 1 chunks from region RegionId(0, 0, -1)
  Chunk ChunkId(0, 1, -1): palette size 1, 32768 bytes compressed
Adding chunk ChunkId(0, 1, -1) to active_chunks (total: 7)
Decompressed 262144 voxels for chunk ChunkId(0, 1, -1), 262144 non-empty
  First 10 voxels: [Voxel(3735928559), Voxel(3735928559), Voxel(3735928559), Voxel(3735928559), Voxel(3735928559), Voxel(3735928559), Voxel(3735928559), Voxel(3735928559), Voxel(3735928559), Voxel(3735928559)]
Successfully sent chunk ChunkId(0, 1, -1) to mesh generation
Creating generation params for region RegionId(0, 0, -1)
Region RegionId(0, 0, -1) world bounds: min=[0,0,-256] max=[256,256,0]
Creating plane SDF with normal [0, 0, 1] and distance 0

Region Loading Status:
  Camera region: RegionId(0, 0, 0)
  View distance: 1 regions
  Loaded regions: 2
  Pending generations: 1
  Active chunks: 7
get_chunks_for_rendering called - active chunks: 7, pending meshes: 0
Checking 7 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 1
Command buffer begun in frame_begin
Processing 0 completed readbacks
Main thread: Execute GPU worldgen for bounds [0.0,64.0,64.0] to [64.0,128.0,128.0]
Processing chunk ChunkId(0, 1, 1) as minichunks
Creating ChunkAccumulator: 262144 voxels, 512 minichunks (8 per axis)
Queuing 512 minichunks for chunk ChunkId(0, 1, 1)
Processing 512 minichunks in 20 batches of up to 26 each (frames_in_flight: 3)
PID controller: Processing 13 minichunks per workspace (workgroup budget: 13)
Allocating workspace 2 (current_index: 2)
Available workspaces after allocation: 2/3
Processing 13 minichunks in workspace 2
Overall bounds: [0, 64, 64] to [64, 80, 72]
renderer_buffer_write called - buffer: anyopaque@1f002cf5be8, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5be8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5be8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbe88, alignment: 0
Returning buffer pointer: 0x1f002dbbe88 (aligned: true)
Created staging buffer at: 0x1f002dbbe88
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b16000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(17651393646060114122), dst: vk.Buffer(10094846052541661671)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5ba8, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ba8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5ba8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbb948, alignment: 0
Returning buffer pointer: 0x1f002dbb948 (aligned: true)
Created staging buffer at: 0x1f002dbb948
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a3a000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(17567467923511972044), dst: vk.Buffer(16700742698545447395)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5ca8, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ca8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5ca8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbba08, alignment: 0
Returning buffer pointer: 0x1f002dbba08 (aligned: true)
Created staging buffer at: 0x1f002dbba08
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b0f000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(17898357151798137038), dst: vk.Buffer(17497165150031970789)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf58a8, size: 832, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf58a8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf58a8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbc08, alignment: 0
Returning buffer pointer: 0x1f002dbbc08 (aligned: true)
Created staging buffer at: 0x1f002dbbc08
Staging buffer cast successful
About to map memory for staging buffer - size: 832
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a2c000
About to memcpy 832 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(16220192345532928208), dst: vk.Buffer(14063823544068866539)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,6.4e1,6.4e1] to [6.4e1,8.0e1,7.2e1]
Buffer handles - SDF: vk.Buffer(16700742698545447395), Params: vk.Buffer(10094846052541661671), Output: vk.Buffer(17114293211007812073)
generateWorldAdaptive called - offset: 0, max_workgroups: 13
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
getBufferDeviceAddress called for buffer: vk.Buffer(17497165150031970789)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557245952
Using actual brush buffer with address: 0x239a80000
Dispatching brush chunk: offset=0, size=13 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=13, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002dbb988, alignment: 0
Returning buffer pointer: 0x1f002dbb988 (aligned: true)
Submitting readback 344 at frame 355 (will be ready at frame 358)
Allocating workspace 0 (current_index: 0)
Available workspaces after allocation: 1/3
Processing 13 minichunks in workspace 0
Overall bounds: [0, 72, 64] to [64, 96, 72]
renderer_buffer_write called - buffer: anyopaque@1efff479918, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479918, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479918 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbac8, alignment: 0
Returning buffer pointer: 0x1f002dbbac8 (aligned: true)
Created staging buffer at: 0x1f002dbbac8
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a33000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(40584073692844245), dst: vk.Buffer(16655718796899647951)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1efff479658, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479658, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479658 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbba48, alignment: 0
Returning buffer pointer: 0x1f002dbba48 (aligned: true)
Created staging buffer at: 0x1f002dbba48
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a34000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(16863373662433054935), dst: vk.Buffer(15589100158980194763)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1efff479818, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479818, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479818 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbb08, alignment: 0
Returning buffer pointer: 0x1f002dbbb08 (aligned: true)
Created staging buffer at: 0x1f002dbbb08
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a4f000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(14767209719659499737), dst: vk.Buffer(170787141142446541)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5a28, size: 832, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5a28, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5a28 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1efff479a58, alignment: 0
Returning buffer pointer: 0x1efff479a58 (aligned: true)
Created staging buffer at: 0x1efff479a58
Staging buffer cast successful
About to map memory for staging buffer - size: 832
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a1b000
About to memcpy 832 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(1384039948276994267), dst: vk.Buffer(1025278100226703827)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,7.2e1,6.4e1] to [6.4e1,9.6e1,7.2e1]
Buffer handles - SDF: vk.Buffer(15589100158980194763), Params: vk.Buffer(16655718796899647951), Output: vk.Buffer(15344826058683711953)
generateWorldAdaptive called - offset: 0, max_workgroups: 13
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x3x1 workgroups for 64x24x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=3, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
getBufferDeviceAddress called for buffer: vk.Buffer(170787141142446541)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534177280
Using actual brush buffer with address: 0x238480000
Dispatching brush chunk: offset=0, size=13 (of 24 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=13, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1efff479bd8, alignment: 0
Returning buffer pointer: 0x1efff479bd8 (aligned: true)
Submitting readback 345 at frame 355 (will be ready at frame 358)
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 65.0ms (target: 10.0ms), Workgroups: 14 -> 14 (PID: 16)
DeferredReadbackManager: advanced to frame 356
Processing readbacks: 2 pending, completed_frame: 356, frames_in_flight: 3
Checking readback 344: submitted frame 355, current frame 356, 1 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 2 pending, max age: 3 frames, current frame: 356
Velocity: [0.00, 0.00, 9640.88] speed=9640.88 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -40928.91] | Torque: [170359.422, 411284.062, 130721.406]
  Angular vel: current=[-1788.360, -4317.484, -1372.257] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.044 units: [5.00, 5.00, 245.02] -> [5.00, 5.00, 244.98]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-1788.06, -4316.76, -1372.03] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 7, pending meshes: 0
Checking 7 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing readbacks: 2 pending, completed_frame: 356, frames_in_flight: 3
Checking readback 344: submitted frame 355, current frame 356, 1 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 19 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(0, 1, 1) with 26 minichunks (available workspaces: 1)
Allocating workspace 1 (current_index: 1)
Available workspaces after allocation: 0/3
Processing 14 minichunks in workspace 1
Overall bounds: [0, 88, 64] to [64, 104, 72]
renderer_buffer_write called - buffer: anyopaque@1f002cf5c68, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5c68, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5c68 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1efff479c18, alignment: 0
Returning buffer pointer: 0x1efff479c18 (aligned: true)
Created staging buffer at: 0x1efff479c18
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a1c000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(10641585906034675936), dst: vk.Buffer(17645821321130541531)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5768, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5768, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5768 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1efff479c58, alignment: 0
Returning buffer pointer: 0x1efff479c58 (aligned: true)
Created staging buffer at: 0x1efff479c58
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a69000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(16015152118650376418), dst: vk.Buffer(14073195781184029143)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5928, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5928, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5928 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1efff479cd8, alignment: 0
Returning buffer pointer: 0x1efff479cd8 (aligned: true)
Created staging buffer at: 0x1efff479cd8
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a25000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(2394514223947321572), dst: vk.Buffer(16705046187056562649)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf57e8, size: 896, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf57e8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf57e8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbd88, alignment: 0
Returning buffer pointer: 0x1f002dbbd88 (aligned: true)
Created staging buffer at: 0x1f002dbbd88
Staging buffer cast successful
About to map memory for staging buffer - size: 896
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a26000
About to memcpy 896 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(11091596224074092774), dst: vk.Buffer(18334454249699672543)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,8.8e1,6.4e1] to [6.4e1,1.0e2,7.2e1]
Buffer handles - SDF: vk.Buffer(14073195781184029143), Params: vk.Buffer(17645821321130541531), Output: vk.Buffer(18233758775804690909)
generateWorldAdaptive called - offset: 0, max_workgroups: 14
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
getBufferDeviceAddress called for buffer: vk.Buffer(16705046187056562649)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545711616
Using actual brush buffer with address: 0x238f80000
Dispatching brush chunk: offset=0, size=14 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=14, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002dbbb48, alignment: 0
Returning buffer pointer: 0x1f002dbbb48 (aligned: true)
Submitting readback 346 at frame 356 (will be ready at frame 359)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 1: No available workspace in ring buffer
Re-queuing 12 remaining minichunks from batch
Successfully queued 14 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 62.8ms (target: 10.0ms), Workgroups: 15 -> 15 (PID: 16)
DeferredReadbackManager: advanced to frame 357
Processing readbacks: 3 pending, completed_frame: 357, frames_in_flight: 3
Checking readback 344: submitted frame 355, current frame 357, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 3 pending, max age: 3 frames, current frame: 357
Velocity: [0.00, 0.00, 2399.79] speed=2399.79 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -22555.71] | Torque: [125358.055, 302641.125, 96190.641]
  Angular vel: current=[-4132.929, -9977.774, -3171.309] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 244.98] -> [5.00, 5.00, 244.94]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-4132.20, -9976.00, -3170.75] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 7, pending meshes: 0
Checking 7 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 0
Command buffer begun in frame_begin
Processing readbacks: 3 pending, completed_frame: 357, frames_in_flight: 3
Checking readback 344: submitted frame 355, current frame 357, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 19 batches waiting, 1 active chunks
No available workspaces, stopping batch processing
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 56.8ms (target: 10.0ms), Workgroups: 14 -> 14 (PID: 4)
DeferredReadbackManager: advanced to frame 358
Processing readbacks: 3 pending, completed_frame: 358, frames_in_flight: 3
Checking readback 344: submitted frame 355, current frame 358, 3 frames elapsed (need 3)
Readback 344 ready (submitted frame 355, current frame 358)
Checking readback 345: submitted frame 355, current frame 358, 3 frames elapsed (need 3)
Readback 345 ready (submitted frame 355, current frame 358)
Checking readback 346: submitted frame 356, current frame 358, 2 frames elapsed (need 3)
Processing 2 completed readbacks
Minichunk batch readback complete for workspace 2 (13 minichunks, 26624 bytes)
Adding minichunk at offset (0, 0, 0) with 512 non-empty voxels
Minichunk 1/512 completed
Adding minichunk at offset (8, 0, 0) with 512 non-empty voxels
Minichunk 2/512 completed
Adding minichunk at offset (16, 0, 0) with 512 non-empty voxels
Minichunk 3/512 completed
Adding minichunk at offset (24, 0, 0) with 512 non-empty voxels
Minichunk 4/512 completed
Adding minichunk at offset (32, 0, 0) with 512 non-empty voxels
Minichunk 5/512 completed
Adding minichunk at offset (40, 0, 0) with 512 non-empty voxels
Minichunk 6/512 completed
Adding minichunk at offset (48, 0, 0) with 512 non-empty voxels
Minichunk 7/512 completed
Adding minichunk at offset (56, 0, 0) with 512 non-empty voxels
Minichunk 8/512 completed
Adding minichunk at offset (0, 8, 0) with 512 non-empty voxels
Minichunk 9/512 completed
Adding minichunk at offset (8, 8, 0) with 512 non-empty voxels
Minichunk 10/512 completed
Adding minichunk at offset (16, 8, 0) with 512 non-empty voxels
Minichunk 11/512 completed
Adding minichunk at offset (24, 8, 0) with 512 non-empty voxels
Minichunk 12/512 completed
Adding minichunk at offset (32, 8, 0) with 512 non-empty voxels
Minichunk 13/512 completed
Releasing workspace 2 (was in_use: true)
Available workspaces after release: 1/3
Minichunk batch readback complete for workspace 0 (13 minichunks, 26624 bytes)
Adding minichunk at offset (40, 8, 0) with 512 non-empty voxels
Minichunk 14/512 completed
Adding minichunk at offset (48, 8, 0) with 512 non-empty voxels
Minichunk 15/512 completed
Adding minichunk at offset (56, 8, 0) with 512 non-empty voxels
Minichunk 16/512 completed
Adding minichunk at offset (0, 16, 0) with 512 non-empty voxels
Minichunk 17/512 completed
Adding minichunk at offset (8, 16, 0) with 512 non-empty voxels
Minichunk 18/512 completed
Adding minichunk at offset (16, 16, 0) with 512 non-empty voxels
Minichunk 19/512 completed
Adding minichunk at offset (24, 16, 0) with 512 non-empty voxels
Minichunk 20/512 completed
Adding minichunk at offset (32, 16, 0) with 512 non-empty voxels
Minichunk 21/512 completed
Adding minichunk at offset (40, 16, 0) with 512 non-empty voxels
Minichunk 22/512 completed
Adding minichunk at offset (48, 16, 0) with 512 non-empty voxels
Minichunk 23/512 completed
Adding minichunk at offset (56, 16, 0) with 512 non-empty voxels
Minichunk 24/512 completed
Adding minichunk at offset (0, 24, 0) with 512 non-empty voxels
Minichunk 25/512 completed
Adding minichunk at offset (8, 24, 0) with 512 non-empty voxels
Minichunk 26/512 completed
Releasing workspace 0 (was in_use: true)
Available workspaces after release: 2/3
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 358
Velocity: [0.00, 0.00, 5545.87] speed=5545.87 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -35343.50] | Torque: [196446.250, 474263.188, 150738.531]
  Angular vel: current=[-6477.641, -15638.411, -4970.470] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 244.94] -> [5.00, 5.00, 244.89]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-6476.49, -15635.64, -4969.59] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 7, pending meshes: 0
Checking 7 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 1
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 358, frames_in_flight: 3
Checking readback 346: submitted frame 356, current frame 358, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 19 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(0, 1, 1) with 26 minichunks (available workspaces: 2)
Allocating workspace 2 (current_index: 2)
Available workspaces after allocation: 1/3
Processing 14 minichunks in workspace 2
Overall bounds: [0, 72, 72] to [64, 96, 80]
renderer_buffer_write called - buffer: anyopaque@1f002cf5be8, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5be8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5be8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbd48, alignment: 0
Returning buffer pointer: 0x1f002dbbd48 (aligned: true)
Created staging buffer at: 0x1f002dbbd48
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a2d000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(3018864205198528747), dst: vk.Buffer(10094846052541661671)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5ba8, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ba8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5ba8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbb988, alignment: 0
Returning buffer pointer: 0x1f002dbb988 (aligned: true)
Created staging buffer at: 0x1f002dbb988
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a08000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(14883577632296800493), dst: vk.Buffer(16700742698545447395)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5ca8, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ca8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5ca8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbbc8, alignment: 0
Returning buffer pointer: 0x1f002dbbbc8 (aligned: true)
Created staging buffer at: 0x1f002dbbbc8
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb18f7000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(10022714791224676591), dst: vk.Buffer(17497165150031970789)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf58a8, size: 896, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf58a8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf58a8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbb9c8, alignment: 0
Returning buffer pointer: 0x1f002dbb9c8 (aligned: true)
Created staging buffer at: 0x1f002dbb9c8
Staging buffer cast successful
About to map memory for staging buffer - size: 896
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a2e000
About to memcpy 896 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(2618966328618258673), dst: vk.Buffer(14063823544068866539)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,7.2e1,7.2e1] to [6.4e1,9.6e1,8.0e1]
Buffer handles - SDF: vk.Buffer(16700742698545447395), Params: vk.Buffer(10094846052541661671), Output: vk.Buffer(17114293211007812073)
generateWorldAdaptive called - offset: 0, max_workgroups: 14
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x3x1 workgroups for 64x24x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=3, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
getBufferDeviceAddress called for buffer: vk.Buffer(17497165150031970789)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557245952
Using actual brush buffer with address: 0x239a80000
Dispatching brush chunk: offset=0, size=14 (of 24 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=14, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002df51d8, alignment: 0
Returning buffer pointer: 0x1f002df51d8 (aligned: true)
Submitting readback 347 at frame 358 (will be ready at frame 361)
Allocating workspace 0 (current_index: 0)
Available workspaces after allocation: 0/3
Processing 12 minichunks in workspace 0
Overall bounds: [0, 88, 72] to [64, 104, 80]
renderer_buffer_write called - buffer: anyopaque@1efff479918, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479918, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479918 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df52d8, alignment: 0
Returning buffer pointer: 0x1f002df52d8 (aligned: true)
Created staging buffer at: 0x1f002df52d8
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a51000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(13556071273385169142), dst: vk.Buffer(16655718796899647951)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1efff479658, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479658, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479658 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5318, alignment: 0
Returning buffer pointer: 0x1f002df5318 (aligned: true)
Created staging buffer at: 0x1f002df5318
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a44000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(11734860004346302712), dst: vk.Buffer(15589100158980194763)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1efff479818, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479818, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479818 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5558, alignment: 0
Returning buffer pointer: 0x1f002df5558 (aligned: true)
Created staging buffer at: 0x1f002df5558
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b1d000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(4164680665666687226), dst: vk.Buffer(170787141142446541)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5a28, size: 768, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5a28, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5a28 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5598, alignment: 0
Returning buffer pointer: 0x1f002df5598 (aligned: true)
Created staging buffer at: 0x1f002df5598
Staging buffer cast successful
About to map memory for staging buffer - size: 768
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a52000
About to memcpy 768 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(12691844138836955388), dst: vk.Buffer(1025278100226703827)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,8.8e1,7.2e1] to [6.4e1,1.0e2,8.0e1]
Buffer handles - SDF: vk.Buffer(15589100158980194763), Params: vk.Buffer(16655718796899647951), Output: vk.Buffer(15344826058683711953)
generateWorldAdaptive called - offset: 0, max_workgroups: 12
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
getBufferDeviceAddress called for buffer: vk.Buffer(170787141142446541)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534177280
Using actual brush buffer with address: 0x238480000
Dispatching brush chunk: offset=0, size=12 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=12, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002df53d8, alignment: 0
Returning buffer pointer: 0x1f002df53d8 (aligned: true)
Submitting readback 348 at frame 358 (will be ready at frame 361)
Successfully queued 26 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 58.7ms (target: 10.0ms), Workgroups: 15 -> 15 (PID: 16)
DeferredReadbackManager: advanced to frame 359
Processing readbacks: 3 pending, completed_frame: 359, frames_in_flight: 3
Checking readback 346: submitted frame 356, current frame 359, 3 frames elapsed (need 3)
Readback 346 ready (submitted frame 356, current frame 359)
Checking readback 347: submitted frame 358, current frame 359, 1 frames elapsed (need 3)
Processing 1 completed readbacks
Minichunk batch readback complete for workspace 1 (14 minichunks, 28672 bytes)
Adding minichunk at offset (16, 24, 0) with 512 non-empty voxels
Minichunk 27/512 completed
Adding minichunk at offset (24, 24, 0) with 512 non-empty voxels
Minichunk 28/512 completed
Adding minichunk at offset (32, 24, 0) with 512 non-empty voxels
Minichunk 29/512 completed
Adding minichunk at offset (40, 24, 0) with 512 non-empty voxels
Minichunk 30/512 completed
Adding minichunk at offset (48, 24, 0) with 512 non-empty voxels
Minichunk 31/512 completed
Adding minichunk at offset (56, 24, 0) with 512 non-empty voxels
Minichunk 32/512 completed
Adding minichunk at offset (0, 32, 0) with 512 non-empty voxels
Minichunk 33/512 completed
Adding minichunk at offset (8, 32, 0) with 512 non-empty voxels
Minichunk 34/512 completed
Adding minichunk at offset (16, 32, 0) with 512 non-empty voxels
Minichunk 35/512 completed
Adding minichunk at offset (24, 32, 0) with 512 non-empty voxels
Minichunk 36/512 completed
Adding minichunk at offset (32, 32, 0) with 512 non-empty voxels
Minichunk 37/512 completed
Adding minichunk at offset (40, 32, 0) with 512 non-empty voxels
Minichunk 38/512 completed
Adding minichunk at offset (48, 32, 0) with 512 non-empty voxels
Minichunk 39/512 completed
Adding minichunk at offset (56, 32, 0) with 512 non-empty voxels
Minichunk 40/512 completed
Releasing workspace 1 (was in_use: true)
Available workspaces after release: 1/3
Force processing old readbacks: 2 pending, max age: 3 frames, current frame: 359
Velocity: [0.00, 0.00, 8692.15] speed=8692.15 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -57336.18] | Torque: [245016.844, 591523.062, 188008.062]
  Angular vel: current=[-3141.306, -7583.785, -2410.409] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 244.89] -> [5.00, 5.00, 244.85]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-3140.75, -7582.45, -2409.99] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 7, pending meshes: 0
Checking 7 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing readbacks: 2 pending, completed_frame: 359, frames_in_flight: 3
Checking readback 347: submitted frame 358, current frame 359, 1 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 18 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(0, 1, 1) with 26 minichunks (available workspaces: 1)
Allocating workspace 1 (current_index: 1)
Available workspaces after allocation: 0/3
Processing 15 minichunks in workspace 1
Overall bounds: [0, 64, 80] to [64, 128, 96]
renderer_buffer_write called - buffer: anyopaque@1f002cf5c68, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5c68, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5c68 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5398, alignment: 0
Returning buffer pointer: 0x1f002df5398 (aligned: true)
Created staging buffer at: 0x1f002df5398
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a45000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(5812599006563406081), dst: vk.Buffer(17645821321130541531)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5768, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5768, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5768 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5118, alignment: 0
Returning buffer pointer: 0x1f002df5118 (aligned: true)
Created staging buffer at: 0x1f002df5118
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a47000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(824231299576238339), dst: vk.Buffer(14073195781184029143)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5928, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5928, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5928 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5758, alignment: 0
Returning buffer pointer: 0x1f002df5758 (aligned: true)
Created staging buffer at: 0x1f002df5758
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a29000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(12087657001815904517), dst: vk.Buffer(16705046187056562649)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf57e8, size: 960, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf57e8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf57e8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5518, alignment: 0
Returning buffer pointer: 0x1f002df5518 (aligned: true)
Created staging buffer at: 0x1f002df5518
Staging buffer cast successful
About to map memory for staging buffer - size: 960
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a0b000
About to memcpy 960 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(4964178451176100103), dst: vk.Buffer(18334454249699672543)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,6.4e1,8.0e1] to [6.4e1,1.3e2,9.6e1]
Buffer handles - SDF: vk.Buffer(14073195781184029143), Params: vk.Buffer(17645821321130541531), Output: vk.Buffer(18233758775804690909)
generateWorldAdaptive called - offset: 0, max_workgroups: 15
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x8x2 workgroups for 64x64x16 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=8, z=2
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
getBufferDeviceAddress called for buffer: vk.Buffer(16705046187056562649)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545711616
Using actual brush buffer with address: 0x238f80000
Dispatching brush chunk: offset=0, size=15 (of 128 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=15, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002df5418, alignment: 0
Returning buffer pointer: 0x1f002df5418 (aligned: true)
Submitting readback 349 at frame 359 (will be ready at frame 362)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 1: No available workspace in ring buffer
Re-queuing 11 remaining minichunks from batch
Successfully queued 15 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 56.5ms (target: 10.0ms), Workgroups: 14 -> 14 (PID: 14)
DeferredReadbackManager: advanced to frame 360
Processing readbacks: 3 pending, completed_frame: 360, frames_in_flight: 3
Checking readback 347: submitted frame 358, current frame 360, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 3 pending, max age: 3 frames, current frame: 360
Velocity: [0.00, 0.00, 4215.21] speed=4215.21 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -34704.05] | Torque: [173581.406, 419062.594, 133193.703]
  Angular vel: current=[-4429.272, -10693.209, -3398.700] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 244.85] -> [5.00, 5.00, 244.81]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-4428.49, -10691.32, -3398.10] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 7, pending meshes: 0
Checking 7 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 0
Command buffer begun in frame_begin
Processing readbacks: 3 pending, completed_frame: 360, frames_in_flight: 3
Checking readback 347: submitted frame 358, current frame 360, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 18 batches waiting, 1 active chunks
No available workspaces, stopping batch processing
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 50.1ms (target: 10.0ms), Workgroups: 13 -> 13 (PID: 4)
DeferredReadbackManager: advanced to frame 361
Processing readbacks: 3 pending, completed_frame: 361, frames_in_flight: 3
Checking readback 347: submitted frame 358, current frame 361, 3 frames elapsed (need 3)
Readback 347 ready (submitted frame 358, current frame 361)
Checking readback 348: submitted frame 358, current frame 361, 3 frames elapsed (need 3)
Readback 348 ready (submitted frame 358, current frame 361)
Checking readback 349: submitted frame 359, current frame 361, 2 frames elapsed (need 3)
Processing 2 completed readbacks
Minichunk batch readback complete for workspace 2 (14 minichunks, 28672 bytes)
Adding minichunk at offset (48, 8, 8) with 512 non-empty voxels
Minichunk 41/512 completed
Adding minichunk at offset (56, 8, 8) with 512 non-empty voxels
Minichunk 42/512 completed
Adding minichunk at offset (0, 16, 8) with 512 non-empty voxels
Minichunk 43/512 completed
Adding minichunk at offset (8, 16, 8) with 512 non-empty voxels
Minichunk 44/512 completed
Adding minichunk at offset (16, 16, 8) with 512 non-empty voxels
Minichunk 45/512 completed
Adding minichunk at offset (24, 16, 8) with 512 non-empty voxels
Minichunk 46/512 completed
Adding minichunk at offset (32, 16, 8) with 512 non-empty voxels
Minichunk 47/512 completed
Adding minichunk at offset (40, 16, 8) with 512 non-empty voxels
Minichunk 48/512 completed
Adding minichunk at offset (48, 16, 8) with 512 non-empty voxels
Minichunk 49/512 completed
Adding minichunk at offset (56, 16, 8) with 512 non-empty voxels
Minichunk 50/512 completed
Adding minichunk at offset (0, 24, 8) with 512 non-empty voxels
Minichunk 51/512 completed
Adding minichunk at offset (8, 24, 8) with 512 non-empty voxels
Minichunk 52/512 completed
Adding minichunk at offset (16, 24, 8) with 512 non-empty voxels
Minichunk 53/512 completed
Adding minichunk at offset (24, 24, 8) with 512 non-empty voxels
Minichunk 54/512 completed
Releasing workspace 2 (was in_use: true)
Available workspaces after release: 1/3
Minichunk batch readback complete for workspace 0 (12 minichunks, 24576 bytes)
Adding minichunk at offset (32, 24, 8) with 512 non-empty voxels
Minichunk 55/512 completed
Adding minichunk at offset (40, 24, 8) with 512 non-empty voxels
Minichunk 56/512 completed
Adding minichunk at offset (48, 24, 8) with 512 non-empty voxels
Minichunk 57/512 completed
Adding minichunk at offset (56, 24, 8) with 512 non-empty voxels
Minichunk 58/512 completed
Adding minichunk at offset (0, 32, 8) with 512 non-empty voxels
Minichunk 59/512 completed
Adding minichunk at offset (8, 32, 8) with 512 non-empty voxels
Minichunk 60/512 completed
Adding minichunk at offset (16, 32, 8) with 512 non-empty voxels
Minichunk 61/512 completed
Adding minichunk at offset (24, 32, 8) with 512 non-empty voxels
Minichunk 62/512 completed
Adding minichunk at offset (32, 32, 8) with 512 non-empty voxels
Minichunk 63/512 completed
Adding minichunk at offset (40, 32, 8) with 512 non-empty voxels
Minichunk 64/512 completed
Adding minichunk at offset (48, 32, 8) with 512 non-empty voxels
Minichunk 65/512 completed
Adding minichunk at offset (56, 32, 8) with 512 non-empty voxels
Minichunk 66/512 completed
Releasing workspace 0 (was in_use: true)
Available workspaces after release: 2/3
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 361
Velocity: [0.00, 0.00, 5943.46] speed=5943.46 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -32296.50] | Torque: [192367.172, 464415.406, 147608.562]
  Angular vel: current=[-7204.771, -17393.855, -5528.415] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 244.81] -> [5.00, 5.00, 244.76]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-7203.50, -17390.79, -5527.44] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 7, pending meshes: 0
Checking 7 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 1
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 361, frames_in_flight: 3
Checking readback 349: submitted frame 359, current frame 361, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 18 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(0, 1, 1) with 26 minichunks (available workspaces: 2)
Allocating workspace 2 (current_index: 2)
Available workspaces after allocation: 1/3
Processing 13 minichunks in workspace 2
Overall bounds: [0, 64, 112] to [64, 88, 120]
renderer_buffer_write called - buffer: anyopaque@1f002cf5be8, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5be8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5be8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5718, alignment: 0
Returning buffer pointer: 0x1f002df5718 (aligned: true)
Created staging buffer at: 0x1f002df5718
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b12000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(2088803811937227020), dst: vk.Buffer(10094846052541661671)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5ba8, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ba8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5ba8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df51d8, alignment: 0
Returning buffer pointer: 0x1f002df51d8 (aligned: true)
Created staging buffer at: 0x1f002df51d8
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a53000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(10748541999138214158), dst: vk.Buffer(16700742698545447395)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5ca8, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ca8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5ca8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbb48, alignment: 0
Returning buffer pointer: 0x1f002dbbb48 (aligned: true)
Created staging buffer at: 0x1f002dbbb48
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b0c000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(6216075793492087056), dst: vk.Buffer(17497165150031970789)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf58a8, size: 832, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf58a8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf58a8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbb88, alignment: 0
Returning buffer pointer: 0x1f002dbbb88 (aligned: true)
Created staging buffer at: 0x1f002dbbb88
Staging buffer cast successful
About to map memory for staging buffer - size: 832
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a0c000
About to memcpy 832 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(7519483056546124050), dst: vk.Buffer(14063823544068866539)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,6.4e1,1.1e2] to [6.4e1,8.8e1,1.2e2]
Buffer handles - SDF: vk.Buffer(16700742698545447395), Params: vk.Buffer(10094846052541661671), Output: vk.Buffer(17114293211007812073)
generateWorldAdaptive called - offset: 0, max_workgroups: 13
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x3x1 workgroups for 64x24x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=3, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
getBufferDeviceAddress called for buffer: vk.Buffer(17497165150031970789)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557245952
Using actual brush buffer with address: 0x239a80000
Dispatching brush chunk: offset=0, size=13 (of 24 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=13, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002dbbc88, alignment: 0
Returning buffer pointer: 0x1f002dbbc88 (aligned: true)
Submitting readback 350 at frame 361 (will be ready at frame 364)
Allocating workspace 0 (current_index: 0)
Available workspaces after allocation: 0/3
Processing 13 minichunks in workspace 0
Overall bounds: [0, 80, 112] to [64, 96, 120]
renderer_buffer_write called - buffer: anyopaque@1efff479918, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479918, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479918 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbfc8, alignment: 0
Returning buffer pointer: 0x1f002dbbfc8 (aligned: true)
Created staging buffer at: 0x1f002dbbfc8
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a22000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(10039366894827344151), dst: vk.Buffer(16655718796899647951)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1efff479658, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479658, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479658 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbdc8, alignment: 0
Returning buffer pointer: 0x1f002dbbdc8 (aligned: true)
Created staging buffer at: 0x1f002dbbdc8
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a23000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(7465957730994360601), dst: vk.Buffer(15589100158980194763)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1efff479818, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479818, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479818 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbf88, alignment: 0
Returning buffer pointer: 0x1f002dbbf88 (aligned: true)
Created staging buffer at: 0x1f002dbbf88
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a24000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(8793237590510670107), dst: vk.Buffer(170787141142446541)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5a28, size: 832, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5a28, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5a28 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbcc8, alignment: 0
Returning buffer pointer: 0x1f002dbbcc8 (aligned: true)
Created staging buffer at: 0x1f002dbbcc8
Staging buffer cast successful
About to map memory for staging buffer - size: 832
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a19000
About to memcpy 832 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(9057061007549010205), dst: vk.Buffer(1025278100226703827)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,8.0e1,1.1e2] to [6.4e1,9.6e1,1.2e2]
Buffer handles - SDF: vk.Buffer(15589100158980194763), Params: vk.Buffer(16655718796899647951), Output: vk.Buffer(15344826058683711953)
generateWorldAdaptive called - offset: 0, max_workgroups: 13
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
getBufferDeviceAddress called for buffer: vk.Buffer(170787141142446541)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534177280
Using actual brush buffer with address: 0x238480000
Dispatching brush chunk: offset=0, size=13 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=13, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002dbb888, alignment: 0
Returning buffer pointer: 0x1f002dbb888 (aligned: true)
Submitting readback 351 at frame 361 (will be ready at frame 364)
Successfully queued 26 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 52.5ms (target: 10.0ms), Workgroups: 14 -> 14 (PID: 16)
DeferredReadbackManager: advanced to frame 362
Processing readbacks: 3 pending, completed_frame: 362, frames_in_flight: 3
Checking readback 349: submitted frame 359, current frame 362, 3 frames elapsed (need 3)
Readback 349 ready (submitted frame 359, current frame 362)
Checking readback 350: submitted frame 361, current frame 362, 1 frames elapsed (need 3)
Processing 1 completed readbacks
Minichunk batch readback complete for workspace 1 (15 minichunks, 30720 bytes)
Adding minichunk at offset (48, 48, 16) with 512 non-empty voxels
Minichunk 67/512 completed
Adding minichunk at offset (56, 48, 16) with 512 non-empty voxels
Minichunk 68/512 completed
Adding minichunk at offset (0, 56, 16) with 512 non-empty voxels
Minichunk 69/512 completed
Adding minichunk at offset (8, 56, 16) with 512 non-empty voxels
Minichunk 70/512 completed
Adding minichunk at offset (16, 56, 16) with 512 non-empty voxels
Minichunk 71/512 completed
Adding minichunk at offset (24, 56, 16) with 512 non-empty voxels
Minichunk 72/512 completed
Adding minichunk at offset (32, 56, 16) with 512 non-empty voxels
Minichunk 73/512 completed
Adding minichunk at offset (40, 56, 16) with 512 non-empty voxels
Minichunk 74/512 completed
Adding minichunk at offset (48, 56, 16) with 512 non-empty voxels
Minichunk 75/512 completed
Adding minichunk at offset (56, 56, 16) with 512 non-empty voxels
Minichunk 76/512 completed
Adding minichunk at offset (0, 0, 24) with 512 non-empty voxels
Minichunk 77/512 completed
Adding minichunk at offset (8, 0, 24) with 512 non-empty voxels
Minichunk 78/512 completed
Adding minichunk at offset (16, 0, 24) with 512 non-empty voxels
Minichunk 79/512 completed
Adding minichunk at offset (24, 0, 24) with 512 non-empty voxels
Minichunk 80/512 completed
Adding minichunk at offset (32, 0, 24) with 512 non-empty voxels
Minichunk 81/512 completed
Releasing workspace 1 (was in_use: true)
Available workspaces after release: 1/3
Force processing old readbacks: 2 pending, max age: 3 frames, current frame: 362
Velocity: [0.00, 0.00, 9667.77] speed=9667.77 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -59608.29] | Torque: [251313.438, 606724.375, 192839.594]
  Angular vel: current=[-2924.259, -7059.786, -2243.863] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 244.76] -> [5.00, 5.00, 244.72]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-2923.75, -7058.55, -2243.47] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 7, pending meshes: 0
Checking 7 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing readbacks: 2 pending, completed_frame: 362, frames_in_flight: 3
Checking readback 350: submitted frame 361, current frame 362, 1 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 17 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(0, 1, 1) with 18 minichunks (available workspaces: 1)
Allocating workspace 1 (current_index: 1)
Available workspaces after allocation: 0/3
Processing 14 minichunks in workspace 1
Overall bounds: [0, 104, 120] to [64, 128, 128]
renderer_buffer_write called - buffer: anyopaque@1f002cf5c68, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5c68, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5c68 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbd08, alignment: 0
Returning buffer pointer: 0x1f002dbbd08 (aligned: true)
Created staging buffer at: 0x1f002dbbd08
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a1d000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(8433133238762869026), dst: vk.Buffer(17645821321130541531)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5768, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5768, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5768 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbe48, alignment: 0
Returning buffer pointer: 0x1f002dbbe48 (aligned: true)
Created staging buffer at: 0x1f002dbbe48
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a1e000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(8386058747931267364), dst: vk.Buffer(14073195781184029143)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5928, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5928, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5928 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbf08, alignment: 0
Returning buffer pointer: 0x1f002dbbf08 (aligned: true)
Created staging buffer at: 0x1f002dbbf08
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a55000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(7654721887250944294), dst: vk.Buffer(16705046187056562649)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf57e8, size: 896, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf57e8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf57e8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df53d8, alignment: 0
Returning buffer pointer: 0x1f002df53d8 (aligned: true)
Created staging buffer at: 0x1f002df53d8
Staging buffer cast successful
About to map memory for staging buffer - size: 896
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a56000
About to memcpy 896 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(1149885753002561832), dst: vk.Buffer(18334454249699672543)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,1.0e2,1.2e2] to [6.4e1,1.3e2,1.3e2]
Buffer handles - SDF: vk.Buffer(14073195781184029143), Params: vk.Buffer(17645821321130541531), Output: vk.Buffer(18233758775804690909)
generateWorldAdaptive called - offset: 0, max_workgroups: 14
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x3x1 workgroups for 64x24x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=3, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
getBufferDeviceAddress called for buffer: vk.Buffer(16705046187056562649)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545711616
Using actual brush buffer with address: 0x238f80000
Dispatching brush chunk: offset=0, size=14 (of 24 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=14, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002df55d8, alignment: 0
Returning buffer pointer: 0x1f002df55d8 (aligned: true)
Submitting readback 352 at frame 362 (will be ready at frame 365)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 1: No available workspace in ring buffer
Re-queuing 4 remaining minichunks from batch
Successfully queued 14 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 51.3ms (target: 10.0ms), Workgroups: 15 -> 15 (PID: 16)
DeferredReadbackManager: advanced to frame 363
Processing readbacks: 3 pending, completed_frame: 363, frames_in_flight: 3
Checking readback 350: submitted frame 361, current frame 363, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 3 pending, max age: 3 frames, current frame: 363
Velocity: [0.00, 0.00, 3923.92] speed=3923.92 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -33225.32] | Torque: [164071.672, 396104.094, 125896.641]
  Angular vel: current=[-4029.056, -9727.003, -3091.604] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 244.72] -> [5.00, 5.00, 244.68]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-4028.34, -9725.28, -3091.06] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 7, pending meshes: 0
Checking 7 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 0
Command buffer begun in frame_begin
Processing readbacks: 3 pending, completed_frame: 363, frames_in_flight: 3
Checking readback 350: submitted frame 361, current frame 363, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 17 batches waiting, 1 active chunks
No available workspaces, stopping batch processing
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 44.2ms (target: 10.0ms), Workgroups: 14 -> 14 (PID: 4)
DeferredReadbackManager: advanced to frame 364
Processing readbacks: 3 pending, completed_frame: 364, frames_in_flight: 3
Checking readback 350: submitted frame 361, current frame 364, 3 frames elapsed (need 3)
Readback 350 ready (submitted frame 361, current frame 364)
Checking readback 351: submitted frame 361, current frame 364, 3 frames elapsed (need 3)
Readback 351 ready (submitted frame 361, current frame 364)
Checking readback 352: submitted frame 362, current frame 364, 2 frames elapsed (need 3)
Processing 2 completed readbacks
Minichunk batch readback complete for workspace 2 (13 minichunks, 26624 bytes)
Adding minichunk at offset (48, 0, 48) with 512 non-empty voxels
Minichunk 82/512 completed
Adding minichunk at offset (56, 0, 48) with 512 non-empty voxels
Minichunk 83/512 completed
Adding minichunk at offset (0, 8, 48) with 512 non-empty voxels
Minichunk 84/512 completed
Adding minichunk at offset (8, 8, 48) with 512 non-empty voxels
Minichunk 85/512 completed
Adding minichunk at offset (16, 8, 48) with 512 non-empty voxels
Minichunk 86/512 completed
Adding minichunk at offset (24, 8, 48) with 512 non-empty voxels
Minichunk 87/512 completed
Adding minichunk at offset (32, 8, 48) with 512 non-empty voxels
Minichunk 88/512 completed
Adding minichunk at offset (40, 8, 48) with 512 non-empty voxels
Minichunk 89/512 completed
Adding minichunk at offset (48, 8, 48) with 512 non-empty voxels
Minichunk 90/512 completed
Adding minichunk at offset (56, 8, 48) with 512 non-empty voxels
Minichunk 91/512 completed
Adding minichunk at offset (0, 16, 48) with 512 non-empty voxels
Minichunk 92/512 completed
Adding minichunk at offset (8, 16, 48) with 512 non-empty voxels
Minichunk 93/512 completed
Adding minichunk at offset (16, 16, 48) with 512 non-empty voxels
Minichunk 94/512 completed
Releasing workspace 2 (was in_use: true)
Available workspaces after release: 1/3
Minichunk batch readback complete for workspace 0 (13 minichunks, 26624 bytes)
Adding minichunk at offset (24, 16, 48) with 512 non-empty voxels
Minichunk 95/512 completed
Adding minichunk at offset (32, 16, 48) with 512 non-empty voxels
Minichunk 96/512 completed
Adding minichunk at offset (40, 16, 48) with 512 non-empty voxels
Minichunk 97/512 completed
Adding minichunk at offset (48, 16, 48) with 512 non-empty voxels
Minichunk 98/512 completed
Adding minichunk at offset (56, 16, 48) with 512 non-empty voxels
Minichunk 99/512 completed
Adding minichunk at offset (0, 24, 48) with 512 non-empty voxels
Minichunk 100/512 completed
Adding minichunk at offset (8, 24, 48) with 512 non-empty voxels
Minichunk 101/512 completed
Adding minichunk at offset (16, 24, 48) with 512 non-empty voxels
Minichunk 102/512 completed
Adding minichunk at offset (24, 24, 48) with 512 non-empty voxels
Minichunk 103/512 completed
Adding minichunk at offset (32, 24, 48) with 512 non-empty voxels
Minichunk 104/512 completed
Adding minichunk at offset (40, 24, 48) with 512 non-empty voxels
Minichunk 105/512 completed
Adding minichunk at offset (48, 24, 48) with 512 non-empty voxels
Minichunk 106/512 completed
Adding minichunk at offset (56, 24, 48) with 512 non-empty voxels
Minichunk 107/512 completed
Releasing workspace 0 (was in_use: true)
Available workspaces after release: 2/3
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 364
Velocity: [0.00, 0.00, 5406.37] speed=5406.37 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -10664.05] | Torque: [121883.969, 294254.062, 93524.922]
  Angular vel: current=[-8215.617, -19834.256, -6304.065] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 244.68] -> [5.00, 5.00, 244.63]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-8214.17, -19830.76, -6302.95] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 7, pending meshes: 0
Checking 7 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 1
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 364, frames_in_flight: 3
Checking readback 352: submitted frame 362, current frame 364, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 17 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(0, 1, 1) with 12 minichunks (available workspaces: 2)
Allocating workspace 2 (current_index: 2)
Available workspaces after allocation: 1/3
Processing 12 minichunks in workspace 2
Overall bounds: [0, 104, 64] to [64, 120, 72]
renderer_buffer_write called - buffer: anyopaque@1f002cf5be8, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5be8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5be8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5418, alignment: 0
Returning buffer pointer: 0x1f002df5418 (aligned: true)
Created staging buffer at: 0x1f002df5418
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a5f000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(7476769228830282029), dst: vk.Buffer(10094846052541661671)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5ba8, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ba8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5ba8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5458, alignment: 0
Returning buffer pointer: 0x1f002df5458 (aligned: true)
Created staging buffer at: 0x1f002df5458
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a13000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(6357129941196214575), dst: vk.Buffer(16700742698545447395)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5ca8, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ca8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5ca8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5498, alignment: 0
Returning buffer pointer: 0x1f002df5498 (aligned: true)
Created staging buffer at: 0x1f002df5498
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a46000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(2193171654668980529), dst: vk.Buffer(17497165150031970789)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf58a8, size: 768, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf58a8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf58a8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5698, alignment: 0
Returning buffer pointer: 0x1f002df5698 (aligned: true)
Created staging buffer at: 0x1f002df5698
Staging buffer cast successful
About to map memory for staging buffer - size: 768
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a0d000
About to memcpy 768 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(11314929025907953971), dst: vk.Buffer(14063823544068866539)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,1.0e2,6.4e1] to [6.4e1,1.2e2,7.2e1]
Buffer handles - SDF: vk.Buffer(16700742698545447395), Params: vk.Buffer(10094846052541661671), Output: vk.Buffer(17114293211007812073)
generateWorldAdaptive called - offset: 0, max_workgroups: 12
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
getBufferDeviceAddress called for buffer: vk.Buffer(17497165150031970789)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557245952
Using actual brush buffer with address: 0x239a80000
Dispatching brush chunk: offset=0, size=12 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=12, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002df5098, alignment: 0
Returning buffer pointer: 0x1f002df5098 (aligned: true)
Submitting readback 353 at frame 364 (will be ready at frame 367)
Successfully queued 12 minichunks from this batch
Processing pending minichunk batch for chunk ChunkId(0, 1, 1) with 26 minichunks (available workspaces: 1)
Allocating workspace 0 (current_index: 0)
Available workspaces after allocation: 0/3
Processing 14 minichunks in workspace 0
Overall bounds: [0, 80, 120] to [64, 104, 128]
renderer_buffer_write called - buffer: anyopaque@1efff479918, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479918, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479918 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d83fb8, alignment: 0
Returning buffer pointer: 0x1f002d83fb8 (aligned: true)
Created staging buffer at: 0x1f002d83fb8
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a14000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(6165189295846986040), dst: vk.Buffer(16655718796899647951)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1efff479658, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479658, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479658 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d83bb8, alignment: 0
Returning buffer pointer: 0x1f002d83bb8 (aligned: true)
Created staging buffer at: 0x1f002d83bb8
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a70000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(3176626531598340410), dst: vk.Buffer(15589100158980194763)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1efff479818, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479818, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479818 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d83d38, alignment: 0
Returning buffer pointer: 0x1f002d83d38 (aligned: true)
Created staging buffer at: 0x1f002d83d38
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a60000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(10366058187718660412), dst: vk.Buffer(170787141142446541)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5a28, size: 896, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5a28, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5a28 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d83e38, alignment: 0
Returning buffer pointer: 0x1f002d83e38 (aligned: true)
Created staging buffer at: 0x1f002d83e38
Staging buffer cast successful
About to map memory for staging buffer - size: 896
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a27000
About to memcpy 896 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(3116527226024104254), dst: vk.Buffer(1025278100226703827)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,8.0e1,1.2e2] to [6.4e1,1.0e2,1.3e2]
Buffer handles - SDF: vk.Buffer(15589100158980194763), Params: vk.Buffer(16655718796899647951), Output: vk.Buffer(15344826058683711953)
generateWorldAdaptive called - offset: 0, max_workgroups: 14
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x3x1 workgroups for 64x24x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=3, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
getBufferDeviceAddress called for buffer: vk.Buffer(170787141142446541)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534177280
Using actual brush buffer with address: 0x238480000
Dispatching brush chunk: offset=0, size=14 (of 24 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=14, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002d84038, alignment: 0
Returning buffer pointer: 0x1f002d84038 (aligned: true)
Submitting readback 354 at frame 364 (will be ready at frame 367)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 1: No available workspace in ring buffer
Re-queuing 12 remaining minichunks from batch
Successfully queued 14 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 46.1ms (target: 10.0ms), Workgroups: 15 -> 15 (PID: 16)
DeferredReadbackManager: advanced to frame 365
Processing readbacks: 3 pending, completed_frame: 365, frames_in_flight: 3
Checking readback 352: submitted frame 362, current frame 365, 3 frames elapsed (need 3)
Readback 352 ready (submitted frame 362, current frame 365)
Checking readback 353: submitted frame 364, current frame 365, 1 frames elapsed (need 3)
Processing 1 completed readbacks
Minichunk batch readback complete for workspace 1 (14 minichunks, 28672 bytes)
Adding minichunk at offset (48, 40, 56) with 512 non-empty voxels
Minichunk 108/512 completed
Adding minichunk at offset (56, 40, 56) with 512 non-empty voxels
Minichunk 109/512 completed
Adding minichunk at offset (0, 48, 56) with 512 non-empty voxels
Minichunk 110/512 completed
Adding minichunk at offset (8, 48, 56) with 512 non-empty voxels
Minichunk 111/512 completed
Adding minichunk at offset (16, 48, 56) with 512 non-empty voxels
Minichunk 112/512 completed
Adding minichunk at offset (24, 48, 56) with 512 non-empty voxels
Minichunk 113/512 completed
Adding minichunk at offset (32, 48, 56) with 512 non-empty voxels
Minichunk 114/512 completed
Adding minichunk at offset (40, 48, 56) with 512 non-empty voxels
Minichunk 115/512 completed
Adding minichunk at offset (48, 48, 56) with 512 non-empty voxels
Minichunk 116/512 completed
Adding minichunk at offset (56, 48, 56) with 512 non-empty voxels
Minichunk 117/512 completed
Adding minichunk at offset (0, 56, 56) with 512 non-empty voxels
Minichunk 118/512 completed
Adding minichunk at offset (8, 56, 56) with 512 non-empty voxels
Minichunk 119/512 completed
Adding minichunk at offset (16, 56, 56) with 512 non-empty voxels
Minichunk 120/512 completed
Adding minichunk at offset (24, 56, 56) with 512 non-empty voxels
Minichunk 121/512 completed
Releasing workspace 1 (was in_use: true)
Available workspaces after release: 1/3
Force processing old readbacks: 2 pending, max age: 3 frames, current frame: 365
Velocity: [0.00, 0.00, 11024.05] speed=11024.05 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -66660.34] | Torque: [277821.188, 670719.750, 213179.734]
  Angular vel: current=[-2947.498, -7115.890, -2261.695] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 244.63] -> [5.00, 5.00, 244.59]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-2946.98, -7114.64, -2261.30] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 7, pending meshes: 0
Checking 7 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing readbacks: 2 pending, completed_frame: 365, frames_in_flight: 3
Checking readback 353: submitted frame 364, current frame 365, 1 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 16 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(0, 1, 1) with 11 minichunks (available workspaces: 1)
Allocating workspace 1 (current_index: 1)
Available workspaces after allocation: 0/3
Processing 11 minichunks in workspace 1
Overall bounds: [0, 64, 88] to [64, 80, 96]
renderer_buffer_write called - buffer: anyopaque@1f002cf5c68, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5c68, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5c68 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d840b8, alignment: 0
Returning buffer pointer: 0x1f002d840b8 (aligned: true)
Created staging buffer at: 0x1f002d840b8
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a2f000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(4204256487196856643), dst: vk.Buffer(17645821321130541531)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5768, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5768, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5768 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df50d8, alignment: 0
Returning buffer pointer: 0x1f002df50d8 (aligned: true)
Created staging buffer at: 0x1f002df50d8
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a30000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(12704015732556435781), dst: vk.Buffer(14073195781184029143)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5928, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5928, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5928 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5198, alignment: 0
Returning buffer pointer: 0x1f002df5198 (aligned: true)
Created staging buffer at: 0x1f002df5198
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b1b000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(4117425854928130375), dst: vk.Buffer(16705046187056562649)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf57e8, size: 704, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf57e8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf57e8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df54d8, alignment: 0
Returning buffer pointer: 0x1f002df54d8 (aligned: true)
Created staging buffer at: 0x1f002df54d8
Staging buffer cast successful
About to map memory for staging buffer - size: 704
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b1c000
About to memcpy 704 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(14050913078535524681), dst: vk.Buffer(18334454249699672543)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,6.4e1,8.8e1] to [6.4e1,8.0e1,9.6e1]
Buffer handles - SDF: vk.Buffer(14073195781184029143), Params: vk.Buffer(17645821321130541531), Output: vk.Buffer(18233758775804690909)
generateWorldAdaptive called - offset: 0, max_workgroups: 11
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
getBufferDeviceAddress called for buffer: vk.Buffer(16705046187056562649)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545711616
Using actual brush buffer with address: 0x238f80000
Dispatching brush chunk: offset=0, size=11 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=11, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002df5218, alignment: 0
Returning buffer pointer: 0x1f002df5218 (aligned: true)
Submitting readback 355 at frame 365 (will be ready at frame 368)
Successfully queued 11 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 42.6ms (target: 10.0ms), Workgroups: 14 -> 14 (PID: 4)
DeferredReadbackManager: advanced to frame 366
Processing readbacks: 3 pending, completed_frame: 366, frames_in_flight: 3
Checking readback 353: submitted frame 364, current frame 366, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 3 pending, max age: 3 frames, current frame: 366
Velocity: [0.00, 0.00, 3955.06] speed=3955.06 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -30983.60] | Torque: [164533.984, 397220.188, 126251.375]
  Angular vel: current=[-4910.333, -11854.592, -3767.831] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 244.59] -> [5.00, 5.00, 244.55]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-4909.46, -11852.50, -3767.16] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 7, pending meshes: 0
Checking 7 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 0
Command buffer begun in frame_begin
Processing readbacks: 3 pending, completed_frame: 366, frames_in_flight: 3
Checking readback 353: submitted frame 364, current frame 366, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 15 batches waiting, 1 active chunks
No available workspaces, stopping batch processing
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 38.0ms (target: 10.0ms), Workgroups: 13 -> 13 (PID: 4)
DeferredReadbackManager: advanced to frame 367
Processing readbacks: 3 pending, completed_frame: 367, frames_in_flight: 3
Checking readback 353: submitted frame 364, current frame 367, 3 frames elapsed (need 3)
Readback 353 ready (submitted frame 364, current frame 367)
Checking readback 354: submitted frame 364, current frame 367, 3 frames elapsed (need 3)
Readback 354 ready (submitted frame 364, current frame 367)
Checking readback 355: submitted frame 365, current frame 367, 2 frames elapsed (need 3)
Processing 2 completed readbacks
Minichunk batch readback complete for workspace 2 (12 minichunks, 24576 bytes)
Adding minichunk at offset (0, 40, 0) with 512 non-empty voxels
Minichunk 122/512 completed
Adding minichunk at offset (8, 40, 0) with 512 non-empty voxels
Minichunk 123/512 completed
Adding minichunk at offset (16, 40, 0) with 512 non-empty voxels
Minichunk 124/512 completed
Adding minichunk at offset (24, 40, 0) with 512 non-empty voxels
Minichunk 125/512 completed
Adding minichunk at offset (32, 40, 0) with 512 non-empty voxels
Minichunk 126/512 completed
Adding minichunk at offset (40, 40, 0) with 512 non-empty voxels
Minichunk 127/512 completed
Adding minichunk at offset (48, 40, 0) with 512 non-empty voxels
Minichunk 128/512 completed
Adding minichunk at offset (56, 40, 0) with 512 non-empty voxels
Minichunk 129/512 completed
Adding minichunk at offset (0, 48, 0) with 512 non-empty voxels
Minichunk 130/512 completed
Adding minichunk at offset (8, 48, 0) with 512 non-empty voxels
Minichunk 131/512 completed
Adding minichunk at offset (16, 48, 0) with 512 non-empty voxels
Minichunk 132/512 completed
Adding minichunk at offset (24, 48, 0) with 512 non-empty voxels
Minichunk 133/512 completed
Releasing workspace 2 (was in_use: true)
Available workspaces after release: 1/3
Minichunk batch readback complete for workspace 0 (14 minichunks, 28672 bytes)
Adding minichunk at offset (32, 16, 56) with 512 non-empty voxels
Minichunk 134/512 completed
Adding minichunk at offset (40, 16, 56) with 512 non-empty voxels
Minichunk 135/512 completed
Adding minichunk at offset (48, 16, 56) with 512 non-empty voxels
Minichunk 136/512 completed
Adding minichunk at offset (56, 16, 56) with 512 non-empty voxels
Minichunk 137/512 completed
Adding minichunk at offset (0, 24, 56) with 512 non-empty voxels
Minichunk 138/512 completed
Adding minichunk at offset (8, 24, 56) with 512 non-empty voxels
Minichunk 139/512 completed
Adding minichunk at offset (16, 24, 56) with 512 non-empty voxels
Minichunk 140/512 completed
Adding minichunk at offset (24, 24, 56) with 512 non-empty voxels
Minichunk 141/512 completed
Adding minichunk at offset (32, 24, 56) with 512 non-empty voxels
Minichunk 142/512 completed
Adding minichunk at offset (40, 24, 56) with 512 non-empty voxels
Minichunk 143/512 completed
Adding minichunk at offset (48, 24, 56) with 512 non-empty voxels
Minichunk 144/512 completed
Adding minichunk at offset (56, 24, 56) with 512 non-empty voxels
Minichunk 145/512 completed
Adding minichunk at offset (0, 32, 56) with 512 non-empty voxels
Minichunk 146/512 completed
Adding minichunk at offset (8, 32, 56) with 512 non-empty voxels
Minichunk 147/512 completed
Releasing workspace 0 (was in_use: true)
Available workspaces after release: 2/3
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 367
Velocity: [0.00, 0.00, 6588.83] speed=6588.83 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -26314.21] | Torque: [180607.906, 436026.062, 138585.359]
  Angular vel: current=[-8257.352, -19935.014, -6336.090] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 244.55] -> [5.00, 5.00, 244.50]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-8255.90, -19931.50, -6334.98] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 7, pending meshes: 0
Checking 7 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 1
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 367, frames_in_flight: 3
Checking readback 355: submitted frame 365, current frame 367, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 15 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(0, 1, 1) with 26 minichunks (available workspaces: 2)
Allocating workspace 2 (current_index: 2)
Available workspaces after allocation: 1/3
Processing 13 minichunks in workspace 2
Overall bounds: [0, 64, 112] to [64, 128, 128]
renderer_buffer_write called - buffer: anyopaque@1f002cf5be8, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5be8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5be8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df55d8, alignment: 0
Returning buffer pointer: 0x1f002df55d8 (aligned: true)
Created staging buffer at: 0x1f002df55d8
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b0d000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(11742625854973284686), dst: vk.Buffer(10094846052541661671)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5ba8, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ba8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5ba8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5258, alignment: 0
Returning buffer pointer: 0x1f002df5258 (aligned: true)
Created staging buffer at: 0x1f002df5258
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a61000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(1132670699446473040), dst: vk.Buffer(16700742698545447395)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5ca8, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ca8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5ca8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5098, alignment: 0
Returning buffer pointer: 0x1f002df5098 (aligned: true)
Created staging buffer at: 0x1f002df5098
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a62000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(12349534283273081170), dst: vk.Buffer(17497165150031970789)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf58a8, size: 832, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf58a8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf58a8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5618, alignment: 0
Returning buffer pointer: 0x1f002df5618 (aligned: true)
Created staging buffer at: 0x1f002df5618
Staging buffer cast successful
About to map memory for staging buffer - size: 832
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b0e000
About to memcpy 832 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(15444120754764910932), dst: vk.Buffer(14063823544068866539)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,6.4e1,1.1e2] to [6.4e1,1.3e2,1.3e2]
Buffer handles - SDF: vk.Buffer(16700742698545447395), Params: vk.Buffer(10094846052541661671), Output: vk.Buffer(17114293211007812073)
generateWorldAdaptive called - offset: 0, max_workgroups: 13
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x8x2 workgroups for 64x64x16 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=8, z=2
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
getBufferDeviceAddress called for buffer: vk.Buffer(17497165150031970789)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557245952
Using actual brush buffer with address: 0x239a80000
Dispatching brush chunk: offset=0, size=13 (of 128 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=13, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002df5658, alignment: 0
Returning buffer pointer: 0x1f002df5658 (aligned: true)
Submitting readback 356 at frame 367 (will be ready at frame 370)
Allocating workspace 0 (current_index: 0)
Available workspaces after allocation: 0/3
Processing 13 minichunks in workspace 0
Overall bounds: [0, 64, 120] to [64, 88, 128]
renderer_buffer_write called - buffer: anyopaque@1efff479918, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479918, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479918 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5798, alignment: 0
Returning buffer pointer: 0x1f002df5798 (aligned: true)
Created staging buffer at: 0x1f002df5798
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a0f000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(2174164397159616857), dst: vk.Buffer(16655718796899647951)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1efff479658, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479658, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479658 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c688, alignment: 0
Returning buffer pointer: 0x1f002d9c688 (aligned: true)
Created staging buffer at: 0x1f002d9c688
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a10000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(11080435081540538715), dst: vk.Buffer(15589100158980194763)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1efff479818, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479818, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479818 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c408, alignment: 0
Returning buffer pointer: 0x1f002d9c408 (aligned: true)
Created staging buffer at: 0x1f002d9c408
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a31000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(13897932528204910941), dst: vk.Buffer(170787141142446541)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5a28, size: 832, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5a28, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5a28 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c608, alignment: 0
Returning buffer pointer: 0x1f002d9c608 (aligned: true)
Created staging buffer at: 0x1f002d9c608
Staging buffer cast successful
About to map memory for staging buffer - size: 832
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a32000
About to memcpy 832 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(16579687567838941535), dst: vk.Buffer(1025278100226703827)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,6.4e1,1.2e2] to [6.4e1,8.8e1,1.3e2]
Buffer handles - SDF: vk.Buffer(15589100158980194763), Params: vk.Buffer(16655718796899647951), Output: vk.Buffer(15344826058683711953)
generateWorldAdaptive called - offset: 0, max_workgroups: 13
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x3x1 workgroups for 64x24x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=3, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
getBufferDeviceAddress called for buffer: vk.Buffer(170787141142446541)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534177280
Using actual brush buffer with address: 0x238480000
Dispatching brush chunk: offset=0, size=13 (of 24 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=13, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002d9c708, alignment: 0
Returning buffer pointer: 0x1f002d9c708 (aligned: true)
Submitting readback 357 at frame 367 (will be ready at frame 370)
Successfully queued 26 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 41.1ms (target: 10.0ms), Workgroups: 14 -> 14 (PID: 16)
DeferredReadbackManager: advanced to frame 368
Processing readbacks: 3 pending, completed_frame: 368, frames_in_flight: 3
Checking readback 355: submitted frame 365, current frame 368, 3 frames elapsed (need 3)
Readback 355 ready (submitted frame 365, current frame 368)
Checking readback 356: submitted frame 367, current frame 368, 1 frames elapsed (need 3)
Processing 1 completed readbacks
Minichunk batch readback complete for workspace 1 (11 minichunks, 22528 bytes)
Adding minichunk at offset (40, 0, 24) with 512 non-empty voxels
Minichunk 148/512 completed
Adding minichunk at offset (48, 0, 24) with 512 non-empty voxels
Minichunk 149/512 completed
Adding minichunk at offset (56, 0, 24) with 512 non-empty voxels
Minichunk 150/512 completed
Adding minichunk at offset (0, 8, 24) with 512 non-empty voxels
Minichunk 151/512 completed
Adding minichunk at offset (8, 8, 24) with 512 non-empty voxels
Minichunk 152/512 completed
Adding minichunk at offset (16, 8, 24) with 512 non-empty voxels
Minichunk 153/512 completed
Adding minichunk at offset (24, 8, 24) with 512 non-empty voxels
Minichunk 154/512 completed
Adding minichunk at offset (32, 8, 24) with 512 non-empty voxels
Minichunk 155/512 completed
Adding minichunk at offset (40, 8, 24) with 512 non-empty voxels
Minichunk 156/512 completed
Adding minichunk at offset (48, 8, 24) with 512 non-empty voxels
Minichunk 157/512 completed
Adding minichunk at offset (56, 8, 24) with 512 non-empty voxels
Minichunk 158/512 completed
Releasing workspace 1 (was in_use: true)
Available workspaces after release: 1/3
Force processing old readbacks: 2 pending, max age: 3 frames, current frame: 368
Velocity: [0.00, 0.00, 11079.94] speed=11079.94 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -72037.66] | Torque: [301175.250, 727101.500, 231099.938]
  Angular vel: current=[-3279.270, -7916.859, -2516.273] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 244.50] -> [5.00, 5.00, 244.46]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-3278.70, -7915.47, -2515.83] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 7, pending meshes: 0
Checking 7 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing readbacks: 2 pending, completed_frame: 368, frames_in_flight: 3
Checking readback 356: submitted frame 367, current frame 368, 1 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 14 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(0, 1, 1) with 4 minichunks (available workspaces: 1)
Allocating workspace 1 (current_index: 1)
Available workspaces after allocation: 0/3
Processing 4 minichunks in workspace 1
Overall bounds: [32, 120, 120] to [64, 128, 128]
renderer_buffer_write called - buffer: anyopaque@1f002cf5c68, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5c68, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5c68 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c348, alignment: 0
Returning buffer pointer: 0x1f002d9c348 (aligned: true)
Created staging buffer at: 0x1f002d9c348
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a15000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(10348877219023032676), dst: vk.Buffer(17645821321130541531)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5768, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5768, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5768 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c648, alignment: 0
Returning buffer pointer: 0x1f002d9c648 (aligned: true)
Created staging buffer at: 0x1f002d9c648
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a63000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(17511625926960484710), dst: vk.Buffer(14073195781184029143)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5928, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5928, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5928 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c788, alignment: 0
Returning buffer pointer: 0x1f002d9c788 (aligned: true)
Created staging buffer at: 0x1f002d9c788
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a57000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(17632565608946078056), dst: vk.Buffer(16705046187056562649)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf57e8, size: 256, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf57e8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf57e8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002cf5d28, alignment: 0
Returning buffer pointer: 0x1f002cf5d28 (aligned: true)
Created staging buffer at: 0x1f002cf5d28
Staging buffer cast successful
About to map memory for staging buffer - size: 256
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a64000
About to memcpy 256 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(9654300330594144618), dst: vk.Buffer(18334454249699672543)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [3.2e1,1.2e2,1.2e2] to [6.4e1,1.3e2,1.3e2]
Buffer handles - SDF: vk.Buffer(14073195781184029143), Params: vk.Buffer(17645821321130541531), Output: vk.Buffer(18233758775804690909)
generateWorldAdaptive called - offset: 0, max_workgroups: 4
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 4x1x1 workgroups for 32x8x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=4, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
getBufferDeviceAddress called for buffer: vk.Buffer(16705046187056562649)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545711616
Using actual brush buffer with address: 0x238f80000
Dispatching brush chunk: offset=0, size=4 (of 4 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=4, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002cf5828, alignment: 0
Returning buffer pointer: 0x1f002cf5828 (aligned: true)
Submitting readback 358 at frame 368 (will be ready at frame 371)
Successfully queued 4 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 40.3ms (target: 10.0ms), Workgroups: 13 -> 13 (PID: 11)
DeferredReadbackManager: advanced to frame 369
Processing readbacks: 3 pending, completed_frame: 369, frames_in_flight: 3
Checking readback 356: submitted frame 367, current frame 369, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 3 pending, max age: 3 frames, current frame: 369
Velocity: [0.00, 0.00, 4400.20] speed=4400.20 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -33182.34] | Torque: [175829.094, 424489.000, 134918.438]
  Angular vel: current=[-5220.561, -12603.549, -4005.878] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 244.46] -> [5.00, 5.00, 244.42]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-5219.64, -12601.34, -4005.17] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 7, pending meshes: 0
Checking 7 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 0
Command buffer begun in frame_begin
Processing readbacks: 3 pending, completed_frame: 369, frames_in_flight: 3
Checking readback 356: submitted frame 367, current frame 369, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 13 batches waiting, 1 active chunks
No available workspaces, stopping batch processing
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 35.6ms (target: 10.0ms), Workgroups: 12 -> 12 (PID: 4)
DeferredReadbackManager: advanced to frame 370
Processing readbacks: 3 pending, completed_frame: 370, frames_in_flight: 3
Checking readback 356: submitted frame 367, current frame 370, 3 frames elapsed (need 3)
Readback 356 ready (submitted frame 367, current frame 370)
Checking readback 357: submitted frame 367, current frame 370, 3 frames elapsed (need 3)
Readback 357 ready (submitted frame 367, current frame 370)
Checking readback 358: submitted frame 368, current frame 370, 2 frames elapsed (need 3)
Processing 2 completed readbacks
Minichunk batch readback complete for workspace 2 (13 minichunks, 26624 bytes)
Adding minichunk at offset (16, 56, 48) with 512 non-empty voxels
Minichunk 159/512 completed
Adding minichunk at offset (24, 56, 48) with 512 non-empty voxels
Minichunk 160/512 completed
Adding minichunk at offset (32, 56, 48) with 512 non-empty voxels
Minichunk 161/512 completed
Adding minichunk at offset (40, 56, 48) with 512 non-empty voxels
Minichunk 162/512 completed
Adding minichunk at offset (48, 56, 48) with 512 non-empty voxels
Minichunk 163/512 completed
Adding minichunk at offset (56, 56, 48) with 512 non-empty voxels
Minichunk 164/512 completed
Adding minichunk at offset (0, 0, 56) with 512 non-empty voxels
Minichunk 165/512 completed
Adding minichunk at offset (8, 0, 56) with 512 non-empty voxels
Minichunk 166/512 completed
Adding minichunk at offset (16, 0, 56) with 512 non-empty voxels
Minichunk 167/512 completed
Adding minichunk at offset (24, 0, 56) with 512 non-empty voxels
Minichunk 168/512 completed
Adding minichunk at offset (32, 0, 56) with 512 non-empty voxels
Minichunk 169/512 completed
Adding minichunk at offset (40, 0, 56) with 512 non-empty voxels
Minichunk 170/512 completed
Adding minichunk at offset (48, 0, 56) with 512 non-empty voxels
Minichunk 171/512 completed
Releasing workspace 2 (was in_use: true)
Available workspaces after release: 1/3
Minichunk batch readback complete for workspace 0 (13 minichunks, 26624 bytes)
Adding minichunk at offset (56, 0, 56) with 512 non-empty voxels
Minichunk 172/512 completed
Adding minichunk at offset (0, 8, 56) with 512 non-empty voxels
Minichunk 173/512 completed
Adding minichunk at offset (8, 8, 56) with 512 non-empty voxels
Minichunk 174/512 completed
Adding minichunk at offset (16, 8, 56) with 512 non-empty voxels
Minichunk 175/512 completed
Adding minichunk at offset (24, 8, 56) with 512 non-empty voxels
Minichunk 176/512 completed
Adding minichunk at offset (32, 8, 56) with 512 non-empty voxels
Minichunk 177/512 completed
Adding minichunk at offset (40, 8, 56) with 512 non-empty voxels
Minichunk 178/512 completed
Adding minichunk at offset (48, 8, 56) with 512 non-empty voxels
Minichunk 179/512 completed
Adding minichunk at offset (56, 8, 56) with 512 non-empty voxels
Minichunk 180/512 completed
Adding minichunk at offset (0, 16, 56) with 512 non-empty voxels
Minichunk 181/512 completed
Adding minichunk at offset (8, 16, 56) with 512 non-empty voxels
Minichunk 182/512 completed
Adding minichunk at offset (16, 16, 56) with 512 non-empty voxels
Minichunk 183/512 completed
Adding minichunk at offset (24, 16, 56) with 512 non-empty voxels
Minichunk 184/512 completed
Releasing workspace 0 (was in_use: true)
Available workspaces after release: 2/3
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 370
Velocity: [0.00, 0.00, 7005.04] speed=7005.04 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -20936.41] | Torque: [167401.438, 404142.812, 128451.656]
  Angular vel: current=[-8940.188, -21583.525, -6860.048] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.042 units: [5.00, 5.00, 244.42] -> [5.00, 5.00, 244.38]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-8938.63, -21579.75, -6858.85] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 7, pending meshes: 0
Checking 7 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 1
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 370, frames_in_flight: 3
Checking readback 358: submitted frame 368, current frame 370, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 13 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(0, 1, 1) with 26 minichunks (available workspaces: 2)
Allocating workspace 2 (current_index: 2)
Available workspaces after allocation: 1/3
Processing 12 minichunks in workspace 2
Overall bounds: [0, 96, 112] to [64, 112, 120]
renderer_buffer_write called - buffer: anyopaque@1f002cf5be8, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5be8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5be8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002cf57a8, alignment: 0
Returning buffer pointer: 0x1f002cf57a8 (aligned: true)
Created staging buffer at: 0x1f002cf57a8
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a16000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(18294556271262568815), dst: vk.Buffer(10094846052541661671)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5ba8, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ba8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5ba8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002cf56a8, alignment: 0
Returning buffer pointer: 0x1f002cf56a8 (aligned: true)
Created staging buffer at: 0x1f002cf56a8
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a48000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(13923428003829780849), dst: vk.Buffer(16700742698545447395)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5ca8, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ca8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5ca8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002cf5968, alignment: 0
Returning buffer pointer: 0x1f002cf5968 (aligned: true)
Created staging buffer at: 0x1f002cf5968
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a54000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(16750987081399931251), dst: vk.Buffer(17497165150031970789)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf58a8, size: 768, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf58a8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf58a8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002cf59a8, alignment: 0
Returning buffer pointer: 0x1f002cf59a8 (aligned: true)
Created staging buffer at: 0x1f002cf59a8
Staging buffer cast successful
About to map memory for staging buffer - size: 768
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a5d000
About to memcpy 768 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(17558558580792103285), dst: vk.Buffer(14063823544068866539)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,9.6e1,1.1e2] to [6.4e1,1.1e2,1.2e2]
Buffer handles - SDF: vk.Buffer(16700742698545447395), Params: vk.Buffer(10094846052541661671), Output: vk.Buffer(17114293211007812073)
generateWorldAdaptive called - offset: 0, max_workgroups: 12
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
getBufferDeviceAddress called for buffer: vk.Buffer(17497165150031970789)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557245952
Using actual brush buffer with address: 0x239a80000
Dispatching brush chunk: offset=0, size=12 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=12, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002cf5d68, alignment: 0
Returning buffer pointer: 0x1f002cf5d68 (aligned: true)
Submitting readback 359 at frame 370 (will be ready at frame 373)
Allocating workspace 0 (current_index: 0)
Available workspaces after allocation: 0/3
Processing 12 minichunks in workspace 0
Overall bounds: [0, 104, 112] to [64, 120, 120]
renderer_buffer_write called - buffer: anyopaque@1efff479918, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479918, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479918 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002cf59e8, alignment: 0
Returning buffer pointer: 0x1f002cf59e8 (aligned: true)
Created staging buffer at: 0x1f002cf59e8
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a5e000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(15215242016280547706), dst: vk.Buffer(16655718796899647951)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1efff479658, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479658, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479658 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d83f38, alignment: 0
Returning buffer pointer: 0x1f002d83f38 (aligned: true)
Created staging buffer at: 0x1f002d83f38
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a1a000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(15461385286344249724), dst: vk.Buffer(15589100158980194763)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1efff479818, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479818, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479818 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d84038, alignment: 0
Returning buffer pointer: 0x1f002d84038 (aligned: true)
Created staging buffer at: 0x1f002d84038
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a58000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(295093527732294014), dst: vk.Buffer(170787141142446541)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5a28, size: 768, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5a28, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5a28 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d84178, alignment: 0
Returning buffer pointer: 0x1f002d84178 (aligned: true)
Created staging buffer at: 0x1f002d84178
Staging buffer cast successful
About to map memory for staging buffer - size: 768
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a1f000
About to memcpy 768 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(16330857091356955008), dst: vk.Buffer(1025278100226703827)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,1.0e2,1.1e2] to [6.4e1,1.2e2,1.2e2]
Buffer handles - SDF: vk.Buffer(15589100158980194763), Params: vk.Buffer(16655718796899647951), Output: vk.Buffer(15344826058683711953)
generateWorldAdaptive called - offset: 0, max_workgroups: 12
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
getBufferDeviceAddress called for buffer: vk.Buffer(170787141142446541)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534177280
Using actual brush buffer with address: 0x238480000
Dispatching brush chunk: offset=0, size=12 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=12, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002d83cf8, alignment: 0
Returning buffer pointer: 0x1f002d83cf8 (aligned: true)
Submitting readback 360 at frame 370 (will be ready at frame 373)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 2: No available workspace in ring buffer
Re-queuing 2 remaining minichunks from batch
Successfully queued 24 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 39.6ms (target: 10.0ms), Workgroups: 13 -> 13 (PID: 16)
DeferredReadbackManager: advanced to frame 371
Processing readbacks: 3 pending, completed_frame: 371, frames_in_flight: 3
Checking readback 358: submitted frame 368, current frame 371, 3 frames elapsed (need 3)
Readback 358 ready (submitted frame 368, current frame 371)
Checking readback 359: submitted frame 370, current frame 371, 1 frames elapsed (need 3)
Processing 1 completed readbacks
Minichunk batch readback complete for workspace 1 (4 minichunks, 8192 bytes)
Adding minichunk at offset (32, 56, 56) with 512 non-empty voxels
Minichunk 185/512 completed
Adding minichunk at offset (40, 56, 56) with 512 non-empty voxels
Minichunk 186/512 completed
Adding minichunk at offset (48, 56, 56) with 512 non-empty voxels
Minichunk 187/512 completed
Adding minichunk at offset (56, 56, 56) with 512 non-empty voxels
Minichunk 188/512 completed
Releasing workspace 1 (was in_use: true)
Available workspaces after release: 1/3
Force processing old readbacks: 2 pending, max age: 3 frames, current frame: 371
Velocity: [0.00, 0.00, 11996.09] speed=11996.09 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -76085.12] | Torque: [315626.375, 761989.500, 242188.656]
  Angular vel: current=[-3216.175, -7764.533, -2467.858] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 244.38] -> [5.00, 5.00, 244.33]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-3215.62, -7763.19, -2467.43] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 7, pending meshes: 0
Checking 7 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing readbacks: 2 pending, completed_frame: 371, frames_in_flight: 3
Checking readback 359: submitted frame 370, current frame 371, 1 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 13 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(0, 1, 1) with 26 minichunks (available workspaces: 1)
Allocating workspace 1 (current_index: 1)
Available workspaces after allocation: 0/3
Processing 13 minichunks in workspace 1
Overall bounds: [0, 104, 104] to [64, 128, 112]
renderer_buffer_write called - buffer: anyopaque@1f002cf5c68, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5c68, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5c68 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5658, alignment: 0
Returning buffer pointer: 0x1f002df5658 (aligned: true)
Created staging buffer at: 0x1f002df5658
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a11000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(14203078890749956485), dst: vk.Buffer(17645821321130541531)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5768, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5768, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5768 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df56d8, alignment: 0
Returning buffer pointer: 0x1f002df56d8 (aligned: true)
Created staging buffer at: 0x1f002df56d8
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a2a000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(1609415642715263367), dst: vk.Buffer(14073195781184029143)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5928, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5928, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5928 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5058, alignment: 0
Returning buffer pointer: 0x1f002df5058 (aligned: true)
Created staging buffer at: 0x1f002df5058
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a20000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(10650482054615011721), dst: vk.Buffer(16705046187056562649)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf57e8, size: 832, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf57e8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf57e8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5158, alignment: 0
Returning buffer pointer: 0x1f002df5158 (aligned: true)
Created staging buffer at: 0x1f002df5158
Staging buffer cast successful
About to map memory for staging buffer - size: 832
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a59000
About to memcpy 832 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(14913897764944351627), dst: vk.Buffer(18334454249699672543)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,1.0e2,1.0e2] to [6.4e1,1.3e2,1.1e2]
Buffer handles - SDF: vk.Buffer(14073195781184029143), Params: vk.Buffer(17645821321130541531), Output: vk.Buffer(18233758775804690909)
generateWorldAdaptive called - offset: 0, max_workgroups: 13
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x3x1 workgroups for 64x24x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=3, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
getBufferDeviceAddress called for buffer: vk.Buffer(16705046187056562649)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545711616
Using actual brush buffer with address: 0x238f80000
Dispatching brush chunk: offset=0, size=13 (of 24 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=13, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002df5218, alignment: 0
Returning buffer pointer: 0x1f002df5218 (aligned: true)
Submitting readback 361 at frame 371 (will be ready at frame 374)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 1: No available workspace in ring buffer
Re-queuing 13 remaining minichunks from batch
Successfully queued 13 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 39.0ms (target: 10.0ms), Workgroups: 12 -> 12 (PID: 12)
DeferredReadbackManager: advanced to frame 372
Processing readbacks: 3 pending, completed_frame: 372, frames_in_flight: 3
Checking readback 359: submitted frame 370, current frame 372, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 3 pending, max age: 3 frames, current frame: 372
Velocity: [0.00, 0.00, 4315.50] speed=4315.50 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -34270.09] | Torque: [175949.031, 424778.594, 135010.453]
  Angular vel: current=[-4827.167, -11653.814, -3704.016] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.042 units: [5.00, 5.00, 244.33] -> [5.00, 5.00, 244.29]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-4826.33, -11651.78, -3703.37] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 7, pending meshes: 0
Checking 7 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 0
Command buffer begun in frame_begin
Processing readbacks: 3 pending, completed_frame: 372, frames_in_flight: 3
Checking readback 359: submitted frame 370, current frame 372, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 13 batches waiting, 1 active chunks
No available workspaces, stopping batch processing
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 34.4ms (target: 10.0ms), Workgroups: 11 -> 11 (PID: 4)
DeferredReadbackManager: advanced to frame 373
Processing readbacks: 3 pending, completed_frame: 373, frames_in_flight: 3
Checking readback 359: submitted frame 370, current frame 373, 3 frames elapsed (need 3)
Readback 359 ready (submitted frame 370, current frame 373)
Checking readback 360: submitted frame 370, current frame 373, 3 frames elapsed (need 3)
Readback 360 ready (submitted frame 370, current frame 373)
Checking readback 361: submitted frame 371, current frame 373, 2 frames elapsed (need 3)
Processing 2 completed readbacks
Minichunk batch readback complete for workspace 2 (12 minichunks, 24576 bytes)
Adding minichunk at offset (0, 32, 48) with 512 non-empty voxels
Minichunk 189/512 completed
Adding minichunk at offset (8, 32, 48) with 512 non-empty voxels
Minichunk 190/512 completed
Adding minichunk at offset (16, 32, 48) with 512 non-empty voxels
Minichunk 191/512 completed
Adding minichunk at offset (24, 32, 48) with 512 non-empty voxels
Minichunk 192/512 completed
Adding minichunk at offset (32, 32, 48) with 512 non-empty voxels
Minichunk 193/512 completed
Adding minichunk at offset (40, 32, 48) with 512 non-empty voxels
Minichunk 194/512 completed
Adding minichunk at offset (48, 32, 48) with 512 non-empty voxels
Minichunk 195/512 completed
Adding minichunk at offset (56, 32, 48) with 512 non-empty voxels
Minichunk 196/512 completed
Adding minichunk at offset (0, 40, 48) with 512 non-empty voxels
Minichunk 197/512 completed
Adding minichunk at offset (8, 40, 48) with 512 non-empty voxels
Minichunk 198/512 completed
Adding minichunk at offset (16, 40, 48) with 512 non-empty voxels
Minichunk 199/512 completed
Adding minichunk at offset (24, 40, 48) with 512 non-empty voxels
Minichunk 200/512 completed
Releasing workspace 2 (was in_use: true)
Available workspaces after release: 1/3
Minichunk batch readback complete for workspace 0 (12 minichunks, 24576 bytes)
Adding minichunk at offset (32, 40, 48) with 512 non-empty voxels
Minichunk 201/512 completed
Adding minichunk at offset (40, 40, 48) with 512 non-empty voxels
Minichunk 202/512 completed
Adding minichunk at offset (48, 40, 48) with 512 non-empty voxels
Minichunk 203/512 completed
Adding minichunk at offset (56, 40, 48) with 512 non-empty voxels
Minichunk 204/512 completed
Adding minichunk at offset (0, 48, 48) with 512 non-empty voxels
Minichunk 205/512 completed
Adding minichunk at offset (8, 48, 48) with 512 non-empty voxels
Minichunk 206/512 completed
Adding minichunk at offset (16, 48, 48) with 512 non-empty voxels
Minichunk 207/512 completed
Adding minichunk at offset (24, 48, 48) with 512 non-empty voxels
Minichunk 208/512 completed
Adding minichunk at offset (32, 48, 48) with 512 non-empty voxels
Minichunk 209/512 completed
Adding minichunk at offset (40, 48, 48) with 512 non-empty voxels
Minichunk 210/512 completed
Adding minichunk at offset (48, 48, 48) with 512 non-empty voxels
Minichunk 211/512 completed
Adding minichunk at offset (56, 48, 48) with 512 non-empty voxels
Minichunk 212/512 completed
Releasing workspace 0 (was in_use: true)
Available workspaces after release: 2/3
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 373
Velocity: [0.00, 0.00, 6477.12] speed=6477.12 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -1519.51] | Torque: [100771.344, 243283.750, 77324.625]
  Angular vel: current=[-9511.207, -22962.086, -7298.207] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.042 units: [5.00, 5.00, 244.29] -> [5.00, 5.00, 244.25]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-9509.55, -22958.10, -7296.94] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 7, pending meshes: 0
Checking 7 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 1
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 373, frames_in_flight: 3
Checking readback 361: submitted frame 371, current frame 373, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 13 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(0, 1, 1) with 12 minichunks (available workspaces: 2)
Allocating workspace 2 (current_index: 2)
Available workspaces after allocation: 1/3
Processing 11 minichunks in workspace 2
Overall bounds: [0, 96, 120] to [64, 112, 128]
renderer_buffer_write called - buffer: anyopaque@1f002cf5be8, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5be8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5be8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5358, alignment: 0
Returning buffer pointer: 0x1f002df5358 (aligned: true)
Created staging buffer at: 0x1f002df5358
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a5a000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(2949941318811390352), dst: vk.Buffer(10094846052541661671)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5ba8, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ba8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5ba8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c708, alignment: 0
Returning buffer pointer: 0x1f002d9c708 (aligned: true)
Created staging buffer at: 0x1f002d9c708
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a37000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(9378216259394474386), dst: vk.Buffer(16700742698545447395)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5ca8, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ca8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5ca8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c0c8, alignment: 0
Returning buffer pointer: 0x1f002d9c0c8 (aligned: true)
Created staging buffer at: 0x1f002d9c0c8
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a39000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(4358445400806396308), dst: vk.Buffer(17497165150031970789)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf58a8, size: 704, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf58a8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf58a8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c288, alignment: 0
Returning buffer pointer: 0x1f002d9c288 (aligned: true)
Created staging buffer at: 0x1f002d9c288
Staging buffer cast successful
About to map memory for staging buffer - size: 704
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a49000
About to memcpy 704 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(4553909980922646934), dst: vk.Buffer(14063823544068866539)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,9.6e1,1.2e2] to [6.4e1,1.1e2,1.3e2]
Buffer handles - SDF: vk.Buffer(16700742698545447395), Params: vk.Buffer(10094846052541661671), Output: vk.Buffer(17114293211007812073)
generateWorldAdaptive called - offset: 0, max_workgroups: 11
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
getBufferDeviceAddress called for buffer: vk.Buffer(17497165150031970789)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557245952
Using actual brush buffer with address: 0x239a80000
Dispatching brush chunk: offset=0, size=11 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=11, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002d9c808, alignment: 0
Returning buffer pointer: 0x1f002d9c808 (aligned: true)
Submitting readback 362 at frame 373 (will be ready at frame 376)
Allocating workspace 0 (current_index: 0)
Available workspaces after allocation: 0/3
Processing 1 minichunks in workspace 0
Overall bounds: [40, 104, 120] to [48, 112, 128]
renderer_buffer_write called - buffer: anyopaque@1efff479918, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479918, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479918 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c3c8, alignment: 0
Returning buffer pointer: 0x1f002d9c3c8 (aligned: true)
Created staging buffer at: 0x1f002d9c3c8
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a4a000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(13022756456867303835), dst: vk.Buffer(16655718796899647951)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1efff479658, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479658, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479658 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c108, alignment: 0
Returning buffer pointer: 0x1f002d9c108 (aligned: true)
Created staging buffer at: 0x1f002d9c108
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb18f6000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(3738460480717459869), dst: vk.Buffer(15589100158980194763)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1efff479818, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479818, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479818 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c448, alignment: 0
Returning buffer pointer: 0x1f002d9c448 (aligned: true)
Created staging buffer at: 0x1f002d9c448
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a3b000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(5248589123932918175), dst: vk.Buffer(170787141142446541)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5a28, size: 64, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5a28, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5a28 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c488, alignment: 0
Returning buffer pointer: 0x1f002d9c488 (aligned: true)
Created staging buffer at: 0x1f002d9c488
Staging buffer cast successful
About to map memory for staging buffer - size: 64
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a35000
About to memcpy 64 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(11628058942382281121), dst: vk.Buffer(1025278100226703827)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [4.0e1,1.0e2,1.2e2] to [4.8e1,1.1e2,1.3e2]
Buffer handles - SDF: vk.Buffer(15589100158980194763), Params: vk.Buffer(16655718796899647951), Output: vk.Buffer(15344826058683711953)
generateWorldAdaptive called - offset: 0, max_workgroups: 1
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 1x1x1 workgroups for 8x8x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
getBufferDeviceAddress called for buffer: vk.Buffer(170787141142446541)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534177280
Using actual brush buffer with address: 0x238480000
Dispatching brush chunk: offset=0, size=1 (of 1 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002d9c508, alignment: 0
Returning buffer pointer: 0x1f002d9c508 (aligned: true)
Submitting readback 363 at frame 373 (will be ready at frame 376)
Successfully queued 12 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 39.2ms (target: 10.0ms), Workgroups: 12 -> 12 (PID: 16)
DeferredReadbackManager: advanced to frame 374
Processing readbacks: 3 pending, completed_frame: 374, frames_in_flight: 3
Checking readback 361: submitted frame 371, current frame 374, 3 frames elapsed (need 3)
Readback 361 ready (submitted frame 371, current frame 374)
Checking readback 362: submitted frame 373, current frame 374, 1 frames elapsed (need 3)
Processing 1 completed readbacks
Minichunk batch readback complete for workspace 1 (13 minichunks, 26624 bytes)
Adding minichunk at offset (32, 40, 40) with 512 non-empty voxels
Minichunk 213/512 completed
Adding minichunk at offset (40, 40, 40) with 512 non-empty voxels
Minichunk 214/512 completed
Adding minichunk at offset (48, 40, 40) with 512 non-empty voxels
Minichunk 215/512 completed
Adding minichunk at offset (56, 40, 40) with 512 non-empty voxels
Minichunk 216/512 completed
Adding minichunk at offset (0, 48, 40) with 512 non-empty voxels
Minichunk 217/512 completed
Adding minichunk at offset (8, 48, 40) with 512 non-empty voxels
Minichunk 218/512 completed
Adding minichunk at offset (16, 48, 40) with 512 non-empty voxels
Minichunk 219/512 completed
Adding minichunk at offset (24, 48, 40) with 512 non-empty voxels
Minichunk 220/512 completed
Adding minichunk at offset (32, 48, 40) with 512 non-empty voxels
Minichunk 221/512 completed
Adding minichunk at offset (40, 48, 40) with 512 non-empty voxels
Minichunk 222/512 completed
Adding minichunk at offset (48, 48, 40) with 512 non-empty voxels
Minichunk 223/512 completed
Adding minichunk at offset (56, 48, 40) with 512 non-empty voxels
Minichunk 224/512 completed
Adding minichunk at offset (0, 56, 40) with 512 non-empty voxels
Minichunk 225/512 completed
Releasing workspace 1 (was in_use: true)
Available workspaces after release: 1/3
Force processing old readbacks: 2 pending, max age: 3 frames, current frame: 374
Velocity: [0.00, 0.00, 12762.17] speed=12762.17 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -75799.59] | Torque: [312123.719, 753533.312, 239500.969]
  Angular vel: current=[-2972.000, -7175.044, -2280.496] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 244.25] -> [5.00, 5.00, 244.21]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-2971.49, -7173.81, -2280.10] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 7, pending meshes: 0
Checking 7 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true

=== Camera State ===
Position: [5.00, 5.00, 244.21]
Rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°]
Mesh Generator: SimpleCube
==================
Controls:
  WASD/Left Stick: Move
  Mouse/Right Stick: Look
  Left Click/RT: Place voxel
  Right Click/LT: Remove voxel
  B/Circle: Toggle mesh generator
  Start/Menu: Save/Load world

Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing readbacks: 2 pending, completed_frame: 374, frames_in_flight: 3
Checking readback 362: submitted frame 373, current frame 374, 1 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 12 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(0, 1, 1) with 26 minichunks (available workspaces: 1)
Allocating workspace 1 (current_index: 1)
Available workspaces after allocation: 0/3
Processing 12 minichunks in workspace 1
Overall bounds: [0, 80, 104] to [64, 96, 112]
renderer_buffer_write called - buffer: anyopaque@1f002cf5c68, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5c68, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5c68 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c208, alignment: 0
Returning buffer pointer: 0x1f002d9c208 (aligned: true)
Created staging buffer at: 0x1f002d9c208
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b18000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(20139754485977510), dst: vk.Buffer(17645821321130541531)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5768, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5768, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5768 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c548, alignment: 0
Returning buffer pointer: 0x1f002d9c548 (aligned: true)
Created staging buffer at: 0x1f002d9c548
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a17000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(6511557448828981672), dst: vk.Buffer(14073195781184029143)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5928, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5928, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5928 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c2c8, alignment: 0
Returning buffer pointer: 0x1f002d9c2c8 (aligned: true)
Created staging buffer at: 0x1f002d9c2c8
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a18000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(6850873334230421930), dst: vk.Buffer(16705046187056562649)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf57e8, size: 768, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf57e8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf57e8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c308, alignment: 0
Returning buffer pointer: 0x1f002d9c308 (aligned: true)
Created staging buffer at: 0x1f002d9c308
Staging buffer cast successful
About to map memory for staging buffer - size: 768
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b13000
About to memcpy 768 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(1408314965995033004), dst: vk.Buffer(18334454249699672543)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,8.0e1,1.0e2] to [6.4e1,9.6e1,1.1e2]
Buffer handles - SDF: vk.Buffer(14073195781184029143), Params: vk.Buffer(17645821321130541531), Output: vk.Buffer(18233758775804690909)
generateWorldAdaptive called - offset: 0, max_workgroups: 12
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
getBufferDeviceAddress called for buffer: vk.Buffer(16705046187056562649)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545711616
Using actual brush buffer with address: 0x238f80000
Dispatching brush chunk: offset=0, size=12 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=12, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002cf5d68, alignment: 0
Returning buffer pointer: 0x1f002cf5d68 (aligned: true)
Submitting readback 364 at frame 374 (will be ready at frame 377)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 1: No available workspace in ring buffer
Re-queuing 14 remaining minichunks from batch
Successfully queued 12 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 39.2ms (target: 10.0ms), Workgroups: 13 -> 13 (PID: 15)
DeferredReadbackManager: advanced to frame 375
Processing readbacks: 3 pending, completed_frame: 375, frames_in_flight: 3
Checking readback 362: submitted frame 373, current frame 375, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 3 pending, max age: 3 frames, current frame: 375
Velocity: [0.00, 0.00, 3987.82] speed=3987.82 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -31460.23] | Torque: [165793.344, 400260.562, 127217.703]
  Angular vel: current=[-4858.332, -11729.051, -3727.929] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.042 units: [5.00, 5.00, 244.21] -> [5.00, 5.00, 244.16]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-4857.48, -11727.01, -3727.28] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 7, pending meshes: 0
Checking 7 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 0
Command buffer begun in frame_begin
Processing readbacks: 3 pending, completed_frame: 375, frames_in_flight: 3
Checking readback 362: submitted frame 373, current frame 375, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 12 batches waiting, 1 active chunks
No available workspaces, stopping batch processing
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 35.3ms (target: 10.0ms), Workgroups: 12 -> 12 (PID: 4)
DeferredReadbackManager: advanced to frame 376
Processing readbacks: 3 pending, completed_frame: 376, frames_in_flight: 3
Checking readback 362: submitted frame 373, current frame 376, 3 frames elapsed (need 3)
Readback 362 ready (submitted frame 373, current frame 376)
Checking readback 363: submitted frame 373, current frame 376, 3 frames elapsed (need 3)
Readback 363 ready (submitted frame 373, current frame 376)
Checking readback 364: submitted frame 374, current frame 376, 2 frames elapsed (need 3)
Processing 2 completed readbacks
Minichunk batch readback complete for workspace 2 (11 minichunks, 22528 bytes)
Adding minichunk at offset (16, 32, 56) with 512 non-empty voxels
Minichunk 226/512 completed
Adding minichunk at offset (24, 32, 56) with 512 non-empty voxels
Minichunk 227/512 completed
Adding minichunk at offset (32, 32, 56) with 512 non-empty voxels
Minichunk 228/512 completed
Adding minichunk at offset (40, 32, 56) with 512 non-empty voxels
Minichunk 229/512 completed
Adding minichunk at offset (48, 32, 56) with 512 non-empty voxels
Minichunk 230/512 completed
Adding minichunk at offset (56, 32, 56) with 512 non-empty voxels
Minichunk 231/512 completed
Adding minichunk at offset (0, 40, 56) with 512 non-empty voxels
Minichunk 232/512 completed
Adding minichunk at offset (8, 40, 56) with 512 non-empty voxels
Minichunk 233/512 completed
Adding minichunk at offset (16, 40, 56) with 512 non-empty voxels
Minichunk 234/512 completed
Adding minichunk at offset (24, 40, 56) with 512 non-empty voxels
Minichunk 235/512 completed
Adding minichunk at offset (32, 40, 56) with 512 non-empty voxels
Minichunk 236/512 completed
Releasing workspace 2 (was in_use: true)
Available workspaces after release: 1/3
Minichunk batch readback complete for workspace 0 (1 minichunks, 2048 bytes)
Adding minichunk at offset (40, 40, 56) with 512 non-empty voxels
Minichunk 237/512 completed
Releasing workspace 0 (was in_use: true)
Available workspaces after release: 2/3
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 376
Velocity: [0.00, 0.00, 6518.87] speed=6518.87 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -14089.22] | Torque: [141598.250, 341848.438, 108652.156]
  Angular vel: current=[-8910.769, -21512.502, -6837.475] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.042 units: [5.00, 5.00, 244.16] -> [5.00, 5.00, 244.12]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-8909.22, -21508.77, -6836.29] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 7, pending meshes: 0
Checking 7 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 1
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 376, frames_in_flight: 3
Checking readback 364: submitted frame 374, current frame 376, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 12 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(0, 1, 1) with 2 minichunks (available workspaces: 2)
Allocating workspace 2 (current_index: 2)
Available workspaces after allocation: 1/3
Processing 2 minichunks in workspace 2
Overall bounds: [0, 120, 112] to [16, 128, 120]
renderer_buffer_write called - buffer: anyopaque@1f002cf5be8, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5be8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5be8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002cf5668, alignment: 0
Returning buffer pointer: 0x1f002cf5668 (aligned: true)
Created staging buffer at: 0x1f002cf5668
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a4b000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(7783129452212392369), dst: vk.Buffer(10094846052541661671)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5ba8, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ba8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5ba8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002cf5828, alignment: 0
Returning buffer pointer: 0x1f002cf5828 (aligned: true)
Created staging buffer at: 0x1f002cf5828
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a38000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(5671449201347662259), dst: vk.Buffer(16700742698545447395)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5ca8, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ca8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5ca8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002cf5a68, alignment: 0
Returning buffer pointer: 0x1f002cf5a68 (aligned: true)
Created staging buffer at: 0x1f002cf5a68
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b14000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(7024708321605063093), dst: vk.Buffer(17497165150031970789)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf58a8, size: 128, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf58a8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf58a8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d83ef8, alignment: 0
Returning buffer pointer: 0x1f002d83ef8 (aligned: true)
Created staging buffer at: 0x1f002d83ef8
Staging buffer cast successful
About to map memory for staging buffer - size: 128
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a4c000
About to memcpy 128 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(9819682272574443959), dst: vk.Buffer(14063823544068866539)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,1.2e2,1.1e2] to [1.6e1,1.3e2,1.2e2]
Buffer handles - SDF: vk.Buffer(16700742698545447395), Params: vk.Buffer(10094846052541661671), Output: vk.Buffer(17114293211007812073)
generateWorldAdaptive called - offset: 0, max_workgroups: 2
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 2x1x1 workgroups for 16x8x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=2, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
getBufferDeviceAddress called for buffer: vk.Buffer(17497165150031970789)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557245952
Using actual brush buffer with address: 0x239a80000
Dispatching brush chunk: offset=0, size=2 (of 2 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=2, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002d83cf8, alignment: 0
Returning buffer pointer: 0x1f002d83cf8 (aligned: true)
Submitting readback 365 at frame 376 (will be ready at frame 379)
Successfully queued 2 minichunks from this batch
Processing pending minichunk batch for chunk ChunkId(0, 1, 1) with 13 minichunks (available workspaces: 1)
Allocating workspace 0 (current_index: 0)
Available workspaces after allocation: 0/3
Processing 12 minichunks in workspace 0
Overall bounds: [0, 64, 104] to [64, 128, 120]
renderer_buffer_write called - buffer: anyopaque@1efff479918, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479918, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479918 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d83f78, alignment: 0
Returning buffer pointer: 0x1f002d83f78 (aligned: true)
Created staging buffer at: 0x1f002d83f78
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a66000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(8664685989525983676), dst: vk.Buffer(16655718796899647951)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1efff479658, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479658, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479658 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d842b8, alignment: 0
Returning buffer pointer: 0x1f002d842b8 (aligned: true)
Created staging buffer at: 0x1f002d842b8
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a0e000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(9147272638073147838), dst: vk.Buffer(15589100158980194763)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1efff479818, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479818, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479818 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d842f8, alignment: 0
Returning buffer pointer: 0x1f002d842f8 (aligned: true)
Created staging buffer at: 0x1f002d842f8
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b19000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(8911104137496629696), dst: vk.Buffer(170787141142446541)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5a28, size: 768, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5a28, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5a28 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1efff479858, alignment: 0
Returning buffer pointer: 0x1efff479858 (aligned: true)
Created staging buffer at: 0x1efff479858
Staging buffer cast successful
About to map memory for staging buffer - size: 768
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b17000
About to memcpy 768 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(7213755052349985218), dst: vk.Buffer(1025278100226703827)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,6.4e1,1.0e2] to [6.4e1,1.3e2,1.2e2]
Buffer handles - SDF: vk.Buffer(15589100158980194763), Params: vk.Buffer(16655718796899647951), Output: vk.Buffer(15344826058683711953)
generateWorldAdaptive called - offset: 0, max_workgroups: 12
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x8x2 workgroups for 64x64x16 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=8, z=2
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
getBufferDeviceAddress called for buffer: vk.Buffer(170787141142446541)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534177280
Using actual brush buffer with address: 0x238480000
Dispatching brush chunk: offset=0, size=12 (of 128 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=12, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1efff479ad8, alignment: 0
Returning buffer pointer: 0x1efff479ad8 (aligned: true)
Submitting readback 366 at frame 376 (will be ready at frame 379)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 1: No available workspace in ring buffer
Re-queuing 1 remaining minichunks from batch
Successfully queued 12 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 40.9ms (target: 10.0ms), Workgroups: 13 -> 13 (PID: 16)
DeferredReadbackManager: advanced to frame 377
Processing readbacks: 3 pending, completed_frame: 377, frames_in_flight: 3
Checking readback 364: submitted frame 374, current frame 377, 3 frames elapsed (need 3)
Readback 364 ready (submitted frame 374, current frame 377)
Checking readback 365: submitted frame 376, current frame 377, 1 frames elapsed (need 3)
Processing 1 completed readbacks
Minichunk batch readback complete for workspace 1 (12 minichunks, 24576 bytes)
Adding minichunk at offset (16, 16, 40) with 512 non-empty voxels
Minichunk 238/512 completed
Adding minichunk at offset (24, 16, 40) with 512 non-empty voxels
Minichunk 239/512 completed
Adding minichunk at offset (32, 16, 40) with 512 non-empty voxels
Minichunk 240/512 completed
Adding minichunk at offset (40, 16, 40) with 512 non-empty voxels
Minichunk 241/512 completed
Adding minichunk at offset (48, 16, 40) with 512 non-empty voxels
Minichunk 242/512 completed
Adding minichunk at offset (56, 16, 40) with 512 non-empty voxels
Minichunk 243/512 completed
Adding minichunk at offset (0, 24, 40) with 512 non-empty voxels
Minichunk 244/512 completed
Adding minichunk at offset (8, 24, 40) with 512 non-empty voxels
Minichunk 245/512 completed
Adding minichunk at offset (16, 24, 40) with 512 non-empty voxels
Minichunk 246/512 completed
Adding minichunk at offset (24, 24, 40) with 512 non-empty voxels
Minichunk 247/512 completed
Adding minichunk at offset (32, 24, 40) with 512 non-empty voxels
Minichunk 248/512 completed
Adding minichunk at offset (40, 24, 40) with 512 non-empty voxels
Minichunk 249/512 completed
Releasing workspace 1 (was in_use: true)
Available workspaces after release: 1/3
Force processing old readbacks: 2 pending, max age: 3 frames, current frame: 377
Velocity: [0.00, 0.00, 11956.38] speed=11956.38 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -67945.41] | Torque: [280719.812, 677717.625, 215403.922]
  Angular vel: current=[-2757.543, -6657.298, -2115.938] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 244.12] -> [5.00, 5.00, 244.08]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-2757.07, -6656.15, -2115.57] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 7, pending meshes: 0
Checking 7 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing readbacks: 2 pending, completed_frame: 377, frames_in_flight: 3
Checking readback 365: submitted frame 376, current frame 377, 1 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 11 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(0, 1, 1) with 26 minichunks (available workspaces: 1)
Allocating workspace 1 (current_index: 1)
Available workspaces after allocation: 0/3
Processing 13 minichunks in workspace 1
Overall bounds: [0, 64, 96] to [64, 128, 112]
renderer_buffer_write called - buffer: anyopaque@1f002cf5c68, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5c68, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5c68 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1efff479bd8, alignment: 0
Returning buffer pointer: 0x1efff479bd8 (aligned: true)
Created staging buffer at: 0x1efff479bd8
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a28000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(5517917795691532743), dst: vk.Buffer(17645821321130541531)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5768, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5768, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5768 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c808, alignment: 0
Returning buffer pointer: 0x1f002d9c808 (aligned: true)
Created staging buffer at: 0x1f002d9c808
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a12000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(7861687358993732041), dst: vk.Buffer(14073195781184029143)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5928, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5928, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5928 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c188, alignment: 0
Returning buffer pointer: 0x1f002d9c188 (aligned: true)
Created staging buffer at: 0x1f002d9c188
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a36000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(693820424428982731), dst: vk.Buffer(16705046187056562649)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf57e8, size: 832, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf57e8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf57e8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c1c8, alignment: 0
Returning buffer pointer: 0x1f002d9c1c8 (aligned: true)
Created staging buffer at: 0x1f002d9c1c8
Staging buffer cast successful
About to map memory for staging buffer - size: 832
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a50000
About to memcpy 832 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(5822727707678478797), dst: vk.Buffer(18334454249699672543)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,6.4e1,9.6e1] to [6.4e1,1.3e2,1.1e2]
Buffer handles - SDF: vk.Buffer(14073195781184029143), Params: vk.Buffer(17645821321130541531), Output: vk.Buffer(18233758775804690909)
generateWorldAdaptive called - offset: 0, max_workgroups: 13
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x8x2 workgroups for 64x64x16 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=8, z=2
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
getBufferDeviceAddress called for buffer: vk.Buffer(16705046187056562649)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545711616
Using actual brush buffer with address: 0x238f80000
Dispatching brush chunk: offset=0, size=13 (of 128 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=13, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002d9c248, alignment: 0
Returning buffer pointer: 0x1f002d9c248 (aligned: true)
Submitting readback 367 at frame 377 (will be ready at frame 380)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 1: No available workspace in ring buffer
Re-queuing 13 remaining minichunks from batch
Successfully queued 13 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 40.2ms (target: 10.0ms), Workgroups: 12 -> 12 (PID: 12)
DeferredReadbackManager: advanced to frame 378
Processing readbacks: 3 pending, completed_frame: 378, frames_in_flight: 3
Checking readback 365: submitted frame 376, current frame 378, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 3 pending, max age: 3 frames, current frame: 378
Velocity: [0.00, 0.00, 3700.02] speed=3700.02 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -27330.97] | Torque: [153508.688, 370602.750, 117791.375]
  Angular vel: current=[-5168.197, -12477.133, -3965.698] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.042 units: [5.00, 5.00, 244.08] -> [5.00, 5.00, 244.04]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-5167.29, -12474.95, -3965.01] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 7, pending meshes: 0
Checking 7 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 0
Command buffer begun in frame_begin
Processing readbacks: 3 pending, completed_frame: 378, frames_in_flight: 3
Checking readback 365: submitted frame 376, current frame 378, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 11 batches waiting, 1 active chunks
No available workspaces, stopping batch processing
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 36.0ms (target: 10.0ms), Workgroups: 11 -> 11 (PID: 4)
DeferredReadbackManager: advanced to frame 379
Processing readbacks: 3 pending, completed_frame: 379, frames_in_flight: 3
Checking readback 365: submitted frame 376, current frame 379, 3 frames elapsed (need 3)
Readback 365 ready (submitted frame 376, current frame 379)
Checking readback 366: submitted frame 376, current frame 379, 3 frames elapsed (need 3)
Readback 366 ready (submitted frame 376, current frame 379)
Checking readback 367: submitted frame 377, current frame 379, 2 frames elapsed (need 3)
Processing 2 completed readbacks
Minichunk batch readback complete for workspace 2 (2 minichunks, 4096 bytes)
Adding minichunk at offset (0, 56, 48) with 512 non-empty voxels
Minichunk 250/512 completed
Adding minichunk at offset (8, 56, 48) with 512 non-empty voxels
Minichunk 251/512 completed
Releasing workspace 2 (was in_use: true)
Available workspaces after release: 1/3
Minichunk batch readback complete for workspace 0 (12 minichunks, 24576 bytes)
Adding minichunk at offset (8, 56, 40) with 512 non-empty voxels
Minichunk 252/512 completed
Adding minichunk at offset (16, 56, 40) with 512 non-empty voxels
Minichunk 253/512 completed
Adding minichunk at offset (24, 56, 40) with 512 non-empty voxels
Minichunk 254/512 completed
Adding minichunk at offset (32, 56, 40) with 512 non-empty voxels
Minichunk 255/512 completed
Adding minichunk at offset (40, 56, 40) with 512 non-empty voxels
Minichunk 256/512 completed
Adding minichunk at offset (48, 56, 40) with 512 non-empty voxels
Minichunk 257/512 completed
Adding minichunk at offset (56, 56, 40) with 512 non-empty voxels
Minichunk 258/512 completed
Adding minichunk at offset (0, 0, 48) with 512 non-empty voxels
Minichunk 259/512 completed
Adding minichunk at offset (8, 0, 48) with 512 non-empty voxels
Minichunk 260/512 completed
Adding minichunk at offset (16, 0, 48) with 512 non-empty voxels
Minichunk 261/512 completed
Adding minichunk at offset (24, 0, 48) with 512 non-empty voxels
Minichunk 262/512 completed
Adding minichunk at offset (32, 0, 48) with 512 non-empty voxels
Minichunk 263/512 completed
Releasing workspace 0 (was in_use: true)
Available workspaces after release: 2/3
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 379
Velocity: [0.00, 0.00, 6934.56] speed=6934.56 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -10474.46] | Torque: [133287.750, 321785.250, 102275.312]
  Angular vel: current=[-9426.438, -22757.436, -7233.162] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.042 units: [5.00, 5.00, 244.04] -> [5.00, 5.00, 243.99]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-9424.80, -22753.48, -7231.90] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 7, pending meshes: 0
Checking 7 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 1
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 379, frames_in_flight: 3
Checking readback 367: submitted frame 377, current frame 379, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 11 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(0, 1, 1) with 14 minichunks (available workspaces: 2)
Allocating workspace 2 (current_index: 2)
Available workspaces after allocation: 1/3
Processing 11 minichunks in workspace 2
Overall bounds: [0, 88, 104] to [64, 112, 112]
renderer_buffer_write called - buffer: anyopaque@1f002cf5be8, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5be8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5be8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c148, alignment: 0
Returning buffer pointer: 0x1f002d9c148 (aligned: true)
Created staging buffer at: 0x1f002d9c148
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a67000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(5825365436073513426), dst: vk.Buffer(10094846052541661671)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5ba8, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ba8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5ba8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c508, alignment: 0
Returning buffer pointer: 0x1f002d9c508 (aligned: true)
Created staging buffer at: 0x1f002d9c508
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a4d000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(1966961430905229780), dst: vk.Buffer(16700742698545447395)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5ca8, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ca8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5ca8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c588, alignment: 0
Returning buffer pointer: 0x1f002d9c588 (aligned: true)
Created staging buffer at: 0x1f002d9c588
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a5b000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(11996180932919824854), dst: vk.Buffer(17497165150031970789)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf58a8, size: 704, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf58a8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf58a8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c5c8, alignment: 0
Returning buffer pointer: 0x1f002d9c5c8 (aligned: true)
Created staging buffer at: 0x1f002d9c5c8
Staging buffer cast successful
About to map memory for staging buffer - size: 704
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a3c000
About to memcpy 704 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(4950442252410294744), dst: vk.Buffer(14063823544068866539)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,8.8e1,1.0e2] to [6.4e1,1.1e2,1.1e2]
Buffer handles - SDF: vk.Buffer(16700742698545447395), Params: vk.Buffer(10094846052541661671), Output: vk.Buffer(17114293211007812073)
generateWorldAdaptive called - offset: 0, max_workgroups: 11
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x3x1 workgroups for 64x24x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=3, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
getBufferDeviceAddress called for buffer: vk.Buffer(17497165150031970789)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557245952
Using actual brush buffer with address: 0x239a80000
Dispatching brush chunk: offset=0, size=11 (of 24 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=11, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002dbb888, alignment: 0
Returning buffer pointer: 0x1f002dbb888 (aligned: true)
Submitting readback 368 at frame 379 (will be ready at frame 382)
Allocating workspace 0 (current_index: 0)
Available workspaces after allocation: 0/3
Processing 3 minichunks in workspace 0
Overall bounds: [8, 104, 104] to [32, 112, 112]
renderer_buffer_write called - buffer: anyopaque@1efff479918, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479918, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479918 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbe08, alignment: 0
Returning buffer pointer: 0x1f002dbbe08 (aligned: true)
Created staging buffer at: 0x1f002dbbe08
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a4e000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(3259458240076845533), dst: vk.Buffer(16655718796899647951)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1efff479658, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479658, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479658 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbc88, alignment: 0
Returning buffer pointer: 0x1f002dbbc88 (aligned: true)
Created staging buffer at: 0x1f002dbbc88
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a5c000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(13079154806302446047), dst: vk.Buffer(15589100158980194763)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1efff479818, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479818, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479818 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbec8, alignment: 0
Returning buffer pointer: 0x1f002dbbec8 (aligned: true)
Created staging buffer at: 0x1f002dbbec8
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b1a000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(3903750063721026017), dst: vk.Buffer(170787141142446541)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5a28, size: 192, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5a28, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5a28 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbf48, alignment: 0
Returning buffer pointer: 0x1f002dbbf48 (aligned: true)
Created staging buffer at: 0x1f002dbbf48
Staging buffer cast successful
About to map memory for staging buffer - size: 192
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a21000
About to memcpy 192 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(4275985327258079715), dst: vk.Buffer(1025278100226703827)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [8.0e0,1.0e2,1.0e2] to [3.2e1,1.1e2,1.1e2]
Buffer handles - SDF: vk.Buffer(15589100158980194763), Params: vk.Buffer(16655718796899647951), Output: vk.Buffer(15344826058683711953)
generateWorldAdaptive called - offset: 0, max_workgroups: 3
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 3x1x1 workgroups for 24x8x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=3, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
getBufferDeviceAddress called for buffer: vk.Buffer(170787141142446541)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534177280
Using actual brush buffer with address: 0x238480000
Dispatching brush chunk: offset=0, size=3 (of 3 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=3, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002dbba88, alignment: 0
Returning buffer pointer: 0x1f002dbba88 (aligned: true)
Submitting readback 369 at frame 379 (will be ready at frame 382)
Successfully queued 14 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 39.4ms (target: 10.0ms), Workgroups: 12 -> 12 (PID: 16)
DeferredReadbackManager: advanced to frame 380
Processing readbacks: 3 pending, completed_frame: 380, frames_in_flight: 3
Checking readback 367: submitted frame 377, current frame 380, 3 frames elapsed (need 3)
Readback 367 ready (submitted frame 377, current frame 380)
Checking readback 368: submitted frame 379, current frame 380, 1 frames elapsed (need 3)
Processing 1 completed readbacks
Minichunk batch readback complete for workspace 1 (13 minichunks, 26624 bytes)
Adding minichunk at offset (0, 56, 32) with 512 non-empty voxels
Minichunk 264/512 completed
Adding minichunk at offset (8, 56, 32) with 512 non-empty voxels
Minichunk 265/512 completed
Adding minichunk at offset (16, 56, 32) with 512 non-empty voxels
Minichunk 266/512 completed
Adding minichunk at offset (24, 56, 32) with 512 non-empty voxels
Minichunk 267/512 completed
Adding minichunk at offset (32, 56, 32) with 512 non-empty voxels
Minichunk 268/512 completed
Adding minichunk at offset (40, 56, 32) with 512 non-empty voxels
Minichunk 269/512 completed
Adding minichunk at offset (48, 56, 32) with 512 non-empty voxels
Minichunk 270/512 completed
Adding minichunk at offset (56, 56, 32) with 512 non-empty voxels
Minichunk 271/512 completed
Adding minichunk at offset (0, 0, 40) with 512 non-empty voxels
Minichunk 272/512 completed
Adding minichunk at offset (8, 0, 40) with 512 non-empty voxels
Minichunk 273/512 completed
Adding minichunk at offset (16, 0, 40) with 512 non-empty voxels
Minichunk 274/512 completed
Adding minichunk at offset (24, 0, 40) with 512 non-empty voxels
Minichunk 275/512 completed
Adding minichunk at offset (32, 0, 40) with 512 non-empty voxels
Minichunk 276/512 completed
Releasing workspace 1 (was in_use: true)
Available workspaces after release: 1/3
Force processing old readbacks: 2 pending, max age: 3 frames, current frame: 380
Velocity: [0.00, 0.00, 12648.15] speed=12648.15 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -80956.04] | Torque: [334517.594, 807596.875, 256684.406]
  Angular vel: current=[-3289.591, -7941.776, -2524.192] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.042 units: [5.00, 5.00, 243.99] -> [5.00, 5.00, 243.95]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-3289.02, -7940.40, -2523.76] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 7, pending meshes: 0
Checking 7 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing readbacks: 2 pending, completed_frame: 380, frames_in_flight: 3
Checking readback 368: submitted frame 379, current frame 380, 1 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 10 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(0, 1, 1) with 26 minichunks (available workspaces: 1)
Allocating workspace 1 (current_index: 1)
Available workspaces after allocation: 0/3
Processing 12 minichunks in workspace 1
Overall bounds: [0, 88, 96] to [64, 112, 104]
renderer_buffer_write called - buffer: anyopaque@1f002cf5c68, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5c68, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5c68 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbe88, alignment: 0
Returning buffer pointer: 0x1f002dbbe88 (aligned: true)
Created staging buffer at: 0x1f002dbbe88
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a68000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(13506277690298077672), dst: vk.Buffer(17645821321130541531)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5768, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5768, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5768 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbb948, alignment: 0
Returning buffer pointer: 0x1f002dbb948 (aligned: true)
Created staging buffer at: 0x1f002dbb948
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a2b000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(2331019626466513386), dst: vk.Buffer(14073195781184029143)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5928, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5928, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5928 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbba08, alignment: 0
Returning buffer pointer: 0x1f002dbba08 (aligned: true)
Created staging buffer at: 0x1f002dbba08
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a2c000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(14614484256026530284), dst: vk.Buffer(16705046187056562649)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf57e8, size: 768, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf57e8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf57e8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbc08, alignment: 0
Returning buffer pointer: 0x1f002dbbc08 (aligned: true)
Created staging buffer at: 0x1f002dbbc08
Staging buffer cast successful
About to map memory for staging buffer - size: 768
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b15000
About to memcpy 768 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(12532204946088530414), dst: vk.Buffer(18334454249699672543)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,8.8e1,9.6e1] to [6.4e1,1.1e2,1.0e2]
Buffer handles - SDF: vk.Buffer(14073195781184029143), Params: vk.Buffer(17645821321130541531), Output: vk.Buffer(18233758775804690909)
generateWorldAdaptive called - offset: 0, max_workgroups: 12
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x3x1 workgroups for 64x24x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=3, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
getBufferDeviceAddress called for buffer: vk.Buffer(16705046187056562649)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545711616
Using actual brush buffer with address: 0x238f80000
Dispatching brush chunk: offset=0, size=12 (of 24 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=12, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002dbbc48, alignment: 0
Returning buffer pointer: 0x1f002dbbc48 (aligned: true)
Submitting readback 370 at frame 380 (will be ready at frame 383)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 1: No available workspace in ring buffer
Re-queuing 14 remaining minichunks from batch
Successfully queued 12 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 39.3ms (target: 10.0ms), Workgroups: 13 -> 13 (PID: 15)
DeferredReadbackManager: advanced to frame 381
Processing readbacks: 3 pending, completed_frame: 381, frames_in_flight: 3
Checking readback 368: submitted frame 379, current frame 381, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 3 pending, max age: 3 frames, current frame: 381
Velocity: [0.00, 0.00, 4413.87] speed=4413.87 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -35134.98] | Torque: [178919.438, 431949.781, 137289.734]
  Angular vel: current=[-4801.554, -11591.978, -3684.363] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.042 units: [5.00, 5.00, 243.95] -> [5.00, 5.00, 243.91]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-4800.72, -11589.97, -3683.72] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 7, pending meshes: 0
Checking 7 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 0
Command buffer begun in frame_begin
Processing readbacks: 3 pending, completed_frame: 381, frames_in_flight: 3
Checking readback 368: submitted frame 379, current frame 381, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 10 batches waiting, 1 active chunks
No available workspaces, stopping batch processing
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 34.9ms (target: 10.0ms), Workgroups: 12 -> 12 (PID: 4)
DeferredReadbackManager: advanced to frame 382
Processing readbacks: 3 pending, completed_frame: 382, frames_in_flight: 3
Checking readback 368: submitted frame 379, current frame 382, 3 frames elapsed (need 3)
Readback 368 ready (submitted frame 379, current frame 382)
Checking readback 369: submitted frame 379, current frame 382, 3 frames elapsed (need 3)
Readback 369 ready (submitted frame 379, current frame 382)
Checking readback 370: submitted frame 380, current frame 382, 2 frames elapsed (need 3)
Processing 2 completed readbacks
Minichunk batch readback complete for workspace 2 (11 minichunks, 22528 bytes)
Adding minichunk at offset (48, 24, 40) with 512 non-empty voxels
Minichunk 277/512 completed
Adding minichunk at offset (56, 24, 40) with 512 non-empty voxels
Minichunk 278/512 completed
Adding minichunk at offset (0, 32, 40) with 512 non-empty voxels
Minichunk 279/512 completed
Adding minichunk at offset (8, 32, 40) with 512 non-empty voxels
Minichunk 280/512 completed
Adding minichunk at offset (16, 32, 40) with 512 non-empty voxels
Minichunk 281/512 completed
Adding minichunk at offset (24, 32, 40) with 512 non-empty voxels
Minichunk 282/512 completed
Adding minichunk at offset (32, 32, 40) with 512 non-empty voxels
Minichunk 283/512 completed
Adding minichunk at offset (40, 32, 40) with 512 non-empty voxels
Minichunk 284/512 completed
Adding minichunk at offset (48, 32, 40) with 512 non-empty voxels
Minichunk 285/512 completed
Adding minichunk at offset (56, 32, 40) with 512 non-empty voxels
Minichunk 286/512 completed
Adding minichunk at offset (0, 40, 40) with 512 non-empty voxels
Minichunk 287/512 completed
Releasing workspace 2 (was in_use: true)
Available workspaces after release: 1/3
Minichunk batch readback complete for workspace 0 (3 minichunks, 6144 bytes)
Adding minichunk at offset (8, 40, 40) with 512 non-empty voxels
Minichunk 288/512 completed
Adding minichunk at offset (16, 40, 40) with 512 non-empty voxels
Minichunk 289/512 completed
Adding minichunk at offset (24, 40, 40) with 512 non-empty voxels
Minichunk 290/512 completed
Releasing workspace 0 (was in_use: true)
Available workspaces after release: 2/3
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 382
Velocity: [0.00, 0.00, 6442.55] speed=6442.55 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, 13781.02] | Torque: [50146.344, 121063.875, 38478.656]
  Angular vel: current=[-10149.346, -24502.693, -7787.868] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.042 units: [5.00, 5.00, 243.91] -> [5.00, 5.00, 243.87]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-10147.59, -24498.46, -7786.52] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 7, pending meshes: 0
Checking 7 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 1
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 382, frames_in_flight: 3
Checking readback 370: submitted frame 380, current frame 382, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 10 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(0, 1, 1) with 1 minichunks (available workspaces: 2)
Allocating workspace 2 (current_index: 2)
Available workspaces after allocation: 1/3
Processing 1 minichunks in workspace 2
Overall bounds: [40, 64, 112] to [48, 72, 120]
renderer_buffer_write called - buffer: anyopaque@1f002cf5be8, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5be8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5be8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbb888, alignment: 0
Returning buffer pointer: 0x1f002dbb888 (aligned: true)
Created staging buffer at: 0x1f002dbb888
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b16000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(1577327495370248691), dst: vk.Buffer(10094846052541661671)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5ba8, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ba8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5ba8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbb08, alignment: 0
Returning buffer pointer: 0x1f002dbbb08 (aligned: true)
Created staging buffer at: 0x1f002dbbb08
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a3a000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(15279874608296104437), dst: vk.Buffer(16700742698545447395)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5ca8, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ca8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5ca8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbba48, alignment: 0
Returning buffer pointer: 0x1f002dbba48 (aligned: true)
Created staging buffer at: 0x1f002dbba48
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a65000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(15814045944372007415), dst: vk.Buffer(17497165150031970789)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf58a8, size: 64, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf58a8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf58a8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbba88, alignment: 0
Returning buffer pointer: 0x1f002dbba88 (aligned: true)
Created staging buffer at: 0x1f002dbba88
Staging buffer cast successful
About to map memory for staging buffer - size: 64
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b0f000
About to memcpy 64 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(2251660175708525049), dst: vk.Buffer(14063823544068866539)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [4.0e1,6.4e1,1.1e2] to [4.8e1,7.2e1,1.2e2]
Buffer handles - SDF: vk.Buffer(16700742698545447395), Params: vk.Buffer(10094846052541661671), Output: vk.Buffer(17114293211007812073)
generateWorldAdaptive called - offset: 0, max_workgroups: 1
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 1x1x1 workgroups for 8x8x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
getBufferDeviceAddress called for buffer: vk.Buffer(17497165150031970789)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557245952
Using actual brush buffer with address: 0x239a80000
Dispatching brush chunk: offset=0, size=1 (of 1 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002dbbac8, alignment: 0
Returning buffer pointer: 0x1f002dbbac8 (aligned: true)
Submitting readback 371 at frame 382 (will be ready at frame 385)
Successfully queued 1 minichunks from this batch
Processing pending minichunk batch for chunk ChunkId(0, 1, 1) with 13 minichunks (available workspaces: 1)
Allocating workspace 0 (current_index: 0)
Available workspaces after allocation: 0/3
Processing 12 minichunks in workspace 0
Overall bounds: [0, 64, 104] to [64, 88, 112]
renderer_buffer_write called - buffer: anyopaque@1efff479918, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479918, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479918 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c4c8, alignment: 0
Returning buffer pointer: 0x1f002d9c4c8 (aligned: true)
Created staging buffer at: 0x1f002d9c4c8
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a34000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(16697067031173796350), dst: vk.Buffer(16655718796899647951)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1efff479658, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479658, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479658 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c388, alignment: 0
Returning buffer pointer: 0x1f002d9c388 (aligned: true)
Created staging buffer at: 0x1f002d9c388
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a09000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(14482828733716632064), dst: vk.Buffer(15589100158980194763)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1efff479818, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479818, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479818 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c6c8, alignment: 0
Returning buffer pointer: 0x1f002d9c6c8 (aligned: true)
Created staging buffer at: 0x1f002d9c6c8
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a0a000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(1280347205684695554), dst: vk.Buffer(170787141142446541)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5a28, size: 768, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5a28, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5a28 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c748, alignment: 0
Returning buffer pointer: 0x1f002d9c748 (aligned: true)
Created staging buffer at: 0x1f002d9c748
Staging buffer cast successful
About to map memory for staging buffer - size: 768
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a43000
About to memcpy 768 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(17107542209613271556), dst: vk.Buffer(1025278100226703827)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,6.4e1,1.0e2] to [6.4e1,8.8e1,1.1e2]
Buffer handles - SDF: vk.Buffer(15589100158980194763), Params: vk.Buffer(16655718796899647951), Output: vk.Buffer(15344826058683711953)
generateWorldAdaptive called - offset: 0, max_workgroups: 12
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x3x1 workgroups for 64x24x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=3, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
getBufferDeviceAddress called for buffer: vk.Buffer(170787141142446541)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534177280
Using actual brush buffer with address: 0x238480000
Dispatching brush chunk: offset=0, size=12 (of 24 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=12, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002d9c7c8, alignment: 0
Returning buffer pointer: 0x1f002d9c7c8 (aligned: true)
Submitting readback 372 at frame 382 (will be ready at frame 385)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 1: No available workspace in ring buffer
Re-queuing 1 remaining minichunks from batch
Successfully queued 12 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 39.3ms (target: 10.0ms), Workgroups: 13 -> 13 (PID: 16)
DeferredReadbackManager: advanced to frame 383
Processing readbacks: 3 pending, completed_frame: 383, frames_in_flight: 3
Checking readback 370: submitted frame 380, current frame 383, 3 frames elapsed (need 3)
Readback 370 ready (submitted frame 380, current frame 383)
Checking readback 371: submitted frame 382, current frame 383, 1 frames elapsed (need 3)
Processing 1 completed readbacks
Minichunk batch readback complete for workspace 1 (12 minichunks, 24576 bytes)
Adding minichunk at offset (48, 24, 32) with 512 non-empty voxels
Minichunk 291/512 completed
Adding minichunk at offset (56, 24, 32) with 512 non-empty voxels
Minichunk 292/512 completed
Adding minichunk at offset (0, 32, 32) with 512 non-empty voxels
Minichunk 293/512 completed
Adding minichunk at offset (8, 32, 32) with 512 non-empty voxels
Minichunk 294/512 completed
Adding minichunk at offset (16, 32, 32) with 512 non-empty voxels
Minichunk 295/512 completed
Adding minichunk at offset (24, 32, 32) with 512 non-empty voxels
Minichunk 296/512 completed
Adding minichunk at offset (32, 32, 32) with 512 non-empty voxels
Minichunk 297/512 completed
Adding minichunk at offset (40, 32, 32) with 512 non-empty voxels
Minichunk 298/512 completed
Adding minichunk at offset (48, 32, 32) with 512 non-empty voxels
Minichunk 299/512 completed
Adding minichunk at offset (56, 32, 32) with 512 non-empty voxels
Minichunk 300/512 completed
Adding minichunk at offset (0, 40, 32) with 512 non-empty voxels
Minichunk 301/512 completed
Adding minichunk at offset (8, 40, 32) with 512 non-empty voxels
Minichunk 302/512 completed
Releasing workspace 1 (was in_use: true)
Available workspaces after release: 1/3
Force processing old readbacks: 2 pending, max age: 3 frames, current frame: 383
Velocity: [0.00, 0.00, 13618.00] speed=13618.00 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -79329.77] | Torque: [324879.625, 784329.000, 249288.969]
  Angular vel: current=[-2931.409, -7077.049, -2249.350] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.042 units: [5.00, 5.00, 243.87] -> [5.00, 5.00, 243.83]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-2930.91, -7075.83, -2248.96] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 7, pending meshes: 0
Checking 7 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing readbacks: 2 pending, completed_frame: 383, frames_in_flight: 3
Checking readback 371: submitted frame 382, current frame 383, 1 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 9 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(0, 1, 1) with 26 minichunks (available workspaces: 1)
Allocating workspace 1 (current_index: 1)
Available workspaces after allocation: 0/3
Processing 13 minichunks in workspace 1
Overall bounds: [0, 64, 96] to [64, 88, 104]
renderer_buffer_write called - buffer: anyopaque@1f002cf5c68, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5c68, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5c68 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1efff479a58, alignment: 0
Returning buffer pointer: 0x1efff479a58 (aligned: true)
Created staging buffer at: 0x1efff479a58
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a25000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(17758702682396168713), dst: vk.Buffer(17645821321130541531)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5768, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5768, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5768 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1efff479ad8, alignment: 0
Returning buffer pointer: 0x1efff479ad8 (aligned: true)
Created staging buffer at: 0x1efff479ad8
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a2d000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(18205999405738234379), dst: vk.Buffer(14073195781184029143)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5928, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5928, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5928 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1efff479b58, alignment: 0
Returning buffer pointer: 0x1efff479b58 (aligned: true)
Created staging buffer at: 0x1efff479b58
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a2e000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(18383194500647358989), dst: vk.Buffer(16705046187056562649)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf57e8, size: 832, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf57e8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf57e8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1efff479c18, alignment: 0
Returning buffer pointer: 0x1efff479c18 (aligned: true)
Created staging buffer at: 0x1efff479c18
Staging buffer cast successful
About to map memory for staging buffer - size: 832
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a26000
About to memcpy 832 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(18056100786500276751), dst: vk.Buffer(18334454249699672543)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,6.4e1,9.6e1] to [6.4e1,8.8e1,1.0e2]
Buffer handles - SDF: vk.Buffer(14073195781184029143), Params: vk.Buffer(17645821321130541531), Output: vk.Buffer(18233758775804690909)
generateWorldAdaptive called - offset: 0, max_workgroups: 13
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x3x1 workgroups for 64x24x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=3, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
getBufferDeviceAddress called for buffer: vk.Buffer(16705046187056562649)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545711616
Using actual brush buffer with address: 0x238f80000
Dispatching brush chunk: offset=0, size=13 (of 24 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=13, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1efff479c58, alignment: 0
Returning buffer pointer: 0x1efff479c58 (aligned: true)
Submitting readback 373 at frame 383 (will be ready at frame 386)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 1: No available workspace in ring buffer
Re-queuing 13 remaining minichunks from batch
Successfully queued 13 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 40.9ms (target: 10.0ms), Workgroups: 14 -> 14 (PID: 16)
DeferredReadbackManager: advanced to frame 384
Processing readbacks: 3 pending, completed_frame: 384, frames_in_flight: 3
Checking readback 371: submitted frame 382, current frame 384, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 3 pending, max age: 3 frames, current frame: 384
Velocity: [0.00, 0.00, 3933.23] speed=3933.23 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -33307.81] | Torque: [163545.031, 394832.688, 125492.547]
  Angular vel: current=[-3944.734, -9523.431, -3026.901] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.042 units: [5.00, 5.00, 243.83] -> [5.00, 5.00, 243.78]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-3944.05, -9521.78, -3026.38] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 7, pending meshes: 0
Checking 7 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 0
Command buffer begun in frame_begin
Processing readbacks: 3 pending, completed_frame: 384, frames_in_flight: 3
Checking readback 371: submitted frame 382, current frame 384, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 9 batches waiting, 1 active chunks
No available workspaces, stopping batch processing
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 36.8ms (target: 10.0ms), Workgroups: 13 -> 13 (PID: 4)
DeferredReadbackManager: advanced to frame 385
Processing readbacks: 3 pending, completed_frame: 385, frames_in_flight: 3
Checking readback 371: submitted frame 382, current frame 385, 3 frames elapsed (need 3)
Readback 371 ready (submitted frame 382, current frame 385)
Checking readback 372: submitted frame 382, current frame 385, 3 frames elapsed (need 3)
Readback 372 ready (submitted frame 382, current frame 385)
Checking readback 373: submitted frame 383, current frame 385, 2 frames elapsed (need 3)
Processing 2 completed readbacks
Minichunk batch readback complete for workspace 2 (1 minichunks, 2048 bytes)
Adding minichunk at offset (40, 0, 48) with 512 non-empty voxels
Minichunk 303/512 completed
Releasing workspace 2 (was in_use: true)
Available workspaces after release: 1/3
Minichunk batch readback complete for workspace 0 (12 minichunks, 24576 bytes)
Adding minichunk at offset (40, 0, 40) with 512 non-empty voxels
Minichunk 304/512 completed
Adding minichunk at offset (48, 0, 40) with 512 non-empty voxels
Minichunk 305/512 completed
Adding minichunk at offset (56, 0, 40) with 512 non-empty voxels
Minichunk 306/512 completed
Adding minichunk at offset (0, 8, 40) with 512 non-empty voxels
Minichunk 307/512 completed
Adding minichunk at offset (8, 8, 40) with 512 non-empty voxels
Minichunk 308/512 completed
Adding minichunk at offset (16, 8, 40) with 512 non-empty voxels
Minichunk 309/512 completed
Adding minichunk at offset (24, 8, 40) with 512 non-empty voxels
Minichunk 310/512 completed
Adding minichunk at offset (32, 8, 40) with 512 non-empty voxels
Minichunk 311/512 completed
Adding minichunk at offset (40, 8, 40) with 512 non-empty voxels
Minichunk 312/512 completed
Adding minichunk at offset (48, 8, 40) with 512 non-empty voxels
Minichunk 313/512 completed
Adding minichunk at offset (56, 8, 40) with 512 non-empty voxels
Minichunk 314/512 completed
Adding minichunk at offset (0, 16, 40) with 512 non-empty voxels
Minichunk 315/512 completed
Releasing workspace 0 (was in_use: true)
Available workspaces after release: 2/3
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 385
Velocity: [0.00, 0.00, 5292.84] speed=5292.84 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -483.88] | Torque: [88450.844, 213539.188, 67870.781]
  Angular vel: current=[-8664.971, -20919.094, -6648.867] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.042 units: [5.00, 5.00, 243.78] -> [5.00, 5.00, 243.74]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-8663.47, -20915.47, -6647.72] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 7, pending meshes: 0
Checking 7 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 1
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 385, frames_in_flight: 3
Checking readback 373: submitted frame 383, current frame 385, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 9 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(0, 1, 1) with 14 minichunks (available workspaces: 2)
Allocating workspace 2 (current_index: 2)
Available workspaces after allocation: 1/3
Processing 13 minichunks in workspace 2
Overall bounds: [0, 104, 96] to [64, 120, 104]
renderer_buffer_write called - buffer: anyopaque@1f002cf5be8, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5be8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5be8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbb988, alignment: 0
Returning buffer pointer: 0x1f002dbb988 (aligned: true)
Created staging buffer at: 0x1f002dbb988
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a1b000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(14564574124706894356), dst: vk.Buffer(10094846052541661671)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5ba8, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ba8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5ba8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbd48, alignment: 0
Returning buffer pointer: 0x1f002dbbd48 (aligned: true)
Created staging buffer at: 0x1f002dbbd48
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a51000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(17412606108786233878), dst: vk.Buffer(16700742698545447395)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5ca8, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ca8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5ca8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbb9c8, alignment: 0
Returning buffer pointer: 0x1f002dbb9c8 (aligned: true)
Created staging buffer at: 0x1f002dbb9c8
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a08000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(16809772470578975256), dst: vk.Buffer(17497165150031970789)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf58a8, size: 832, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf58a8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf58a8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbac8, alignment: 0
Returning buffer pointer: 0x1f002dbbac8 (aligned: true)
Created staging buffer at: 0x1f002dbbac8
Staging buffer cast successful
About to map memory for staging buffer - size: 832
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a44000
About to memcpy 832 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(13993701090495828506), dst: vk.Buffer(14063823544068866539)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,1.0e2,9.6e1] to [6.4e1,1.2e2,1.0e2]
Buffer handles - SDF: vk.Buffer(16700742698545447395), Params: vk.Buffer(10094846052541661671), Output: vk.Buffer(17114293211007812073)
generateWorldAdaptive called - offset: 0, max_workgroups: 13
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
getBufferDeviceAddress called for buffer: vk.Buffer(17497165150031970789)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557245952
Using actual brush buffer with address: 0x239a80000
Dispatching brush chunk: offset=0, size=13 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=13, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002dbbbc8, alignment: 0
Returning buffer pointer: 0x1f002dbbbc8 (aligned: true)
Submitting readback 374 at frame 385 (will be ready at frame 388)
Allocating workspace 0 (current_index: 0)
Available workspaces after allocation: 0/3
Processing 1 minichunks in workspace 0
Overall bounds: [56, 112, 96] to [64, 120, 104]
renderer_buffer_write called - buffer: anyopaque@1efff479918, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479918, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479918 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbc48, alignment: 0
Returning buffer pointer: 0x1f002dbbc48 (aligned: true)
Created staging buffer at: 0x1f002dbbc48
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a4f000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(16341936870030053919), dst: vk.Buffer(16655718796899647951)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1efff479658, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479658, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479658 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbd88, alignment: 0
Returning buffer pointer: 0x1f002dbbd88 (aligned: true)
Created staging buffer at: 0x1f002dbbd88
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a52000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(2304909523841716769), dst: vk.Buffer(15589100158980194763)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1efff479818, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479818, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479818 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5558, alignment: 0
Returning buffer pointer: 0x1f002df5558 (aligned: true)
Created staging buffer at: 0x1f002df5558
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a1c000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(15904071757431050787), dst: vk.Buffer(170787141142446541)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5a28, size: 64, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5a28, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5a28 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5598, alignment: 0
Returning buffer pointer: 0x1f002df5598 (aligned: true)
Created staging buffer at: 0x1f002df5598
Staging buffer cast successful
About to map memory for staging buffer - size: 64
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb18f7000
About to memcpy 64 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(15424779245720703525), dst: vk.Buffer(1025278100226703827)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [5.6e1,1.1e2,9.6e1] to [6.4e1,1.2e2,1.0e2]
Buffer handles - SDF: vk.Buffer(15589100158980194763), Params: vk.Buffer(16655718796899647951), Output: vk.Buffer(15344826058683711953)
generateWorldAdaptive called - offset: 0, max_workgroups: 1
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 1x1x1 workgroups for 8x8x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
getBufferDeviceAddress called for buffer: vk.Buffer(170787141142446541)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534177280
Using actual brush buffer with address: 0x238480000
Dispatching brush chunk: offset=0, size=1 (of 1 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002df5218, alignment: 0
Returning buffer pointer: 0x1f002df5218 (aligned: true)
Submitting readback 375 at frame 385 (will be ready at frame 388)
Successfully queued 14 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 42.9ms (target: 10.0ms), Workgroups: 14 -> 14 (PID: 16)
DeferredReadbackManager: advanced to frame 386
Processing readbacks: 3 pending, completed_frame: 386, frames_in_flight: 3
Checking readback 373: submitted frame 383, current frame 386, 3 frames elapsed (need 3)
Readback 373 ready (submitted frame 383, current frame 386)
Checking readback 374: submitted frame 385, current frame 386, 1 frames elapsed (need 3)
Processing 1 completed readbacks
Minichunk batch readback complete for workspace 1 (13 minichunks, 26624 bytes)
Adding minichunk at offset (32, 0, 32) with 512 non-empty voxels
Minichunk 316/512 completed
Adding minichunk at offset (40, 0, 32) with 512 non-empty voxels
Minichunk 317/512 completed
Adding minichunk at offset (48, 0, 32) with 512 non-empty voxels
Minichunk 318/512 completed
Adding minichunk at offset (56, 0, 32) with 512 non-empty voxels
Minichunk 319/512 completed
Adding minichunk at offset (0, 8, 32) with 512 non-empty voxels
Minichunk 320/512 completed
Adding minichunk at offset (8, 8, 32) with 512 non-empty voxels
Minichunk 321/512 completed
Adding minichunk at offset (16, 8, 32) with 512 non-empty voxels
Minichunk 322/512 completed
Adding minichunk at offset (24, 8, 32) with 512 non-empty voxels
Minichunk 323/512 completed
Adding minichunk at offset (32, 8, 32) with 512 non-empty voxels
Minichunk 324/512 completed
Adding minichunk at offset (40, 8, 32) with 512 non-empty voxels
Minichunk 325/512 completed
Adding minichunk at offset (48, 8, 32) with 512 non-empty voxels
Minichunk 326/512 completed
Adding minichunk at offset (56, 8, 32) with 512 non-empty voxels
Minichunk 327/512 completed
Adding minichunk at offset (0, 16, 32) with 512 non-empty voxels
Minichunk 328/512 completed
Releasing workspace 1 (was in_use: true)
Available workspaces after release: 1/3
Force processing old readbacks: 2 pending, max age: 3 frames, current frame: 386
Velocity: [0.00, 0.00, 11626.18] speed=11626.18 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -62416.03] | Torque: [257919.484, 622672.875, 197908.625]
  Angular vel: current=[-2536.831, -6124.452, -1946.579] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 243.74] -> [5.00, 5.00, 243.70]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-2536.39, -6123.40, -1946.24] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 7, pending meshes: 0
Checking 7 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing readbacks: 2 pending, completed_frame: 386, frames_in_flight: 3
Checking readback 374: submitted frame 385, current frame 386, 1 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 8 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(0, 1, 1) with 26 minichunks (available workspaces: 1)
Allocating workspace 1 (current_index: 1)
Available workspaces after allocation: 0/3
Processing 14 minichunks in workspace 1
Overall bounds: [0, 104, 88] to [64, 120, 96]
renderer_buffer_write called - buffer: anyopaque@1f002cf5c68, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5c68, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5c68 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5718, alignment: 0
Returning buffer pointer: 0x1f002df5718 (aligned: true)
Created staging buffer at: 0x1f002df5718
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b12000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(974936960348983850), dst: vk.Buffer(17645821321130541531)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5768, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5768, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5768 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5298, alignment: 0
Returning buffer pointer: 0x1f002df5298 (aligned: true)
Created staging buffer at: 0x1f002df5298
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a33000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(12190920934873371180), dst: vk.Buffer(14073195781184029143)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5928, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5928, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5928 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5758, alignment: 0
Returning buffer pointer: 0x1f002df5758 (aligned: true)
Created staging buffer at: 0x1f002df5758
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a45000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(13895126574530826798), dst: vk.Buffer(16705046187056562649)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf57e8, size: 896, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf57e8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf57e8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df52d8, alignment: 0
Returning buffer pointer: 0x1f002df52d8 (aligned: true)
Created staging buffer at: 0x1f002df52d8
Staging buffer cast successful
About to map memory for staging buffer - size: 896
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b0c000
About to memcpy 896 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(2865386675612160560), dst: vk.Buffer(18334454249699672543)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,1.0e2,8.8e1] to [6.4e1,1.2e2,9.6e1]
Buffer handles - SDF: vk.Buffer(14073195781184029143), Params: vk.Buffer(17645821321130541531), Output: vk.Buffer(18233758775804690909)
generateWorldAdaptive called - offset: 0, max_workgroups: 14
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
getBufferDeviceAddress called for buffer: vk.Buffer(16705046187056562649)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545711616
Using actual brush buffer with address: 0x238f80000
Dispatching brush chunk: offset=0, size=14 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=14, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002df5118, alignment: 0
Returning buffer pointer: 0x1f002df5118 (aligned: true)
Submitting readback 376 at frame 386 (will be ready at frame 389)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 1: No available workspace in ring buffer
Re-queuing 12 remaining minichunks from batch
Successfully queued 14 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 43.7ms (target: 10.0ms), Workgroups: 15 -> 15 (PID: 16)
DeferredReadbackManager: advanced to frame 387
Processing readbacks: 3 pending, completed_frame: 387, frames_in_flight: 3
Checking readback 374: submitted frame 385, current frame 387, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 3 pending, max age: 3 frames, current frame: 387
Velocity: [0.00, 0.00, 3403.76] speed=3403.76 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -29501.19] | Torque: [150963.312, 364457.688, 115838.234]
  Angular vel: current=[-4104.704, -9909.632, -3149.650] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 243.70] -> [5.00, 5.00, 243.66]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-4103.98, -9907.89, -3149.10] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 7, pending meshes: 0
Checking 7 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 0
Command buffer begun in frame_begin
Processing readbacks: 3 pending, completed_frame: 387, frames_in_flight: 3
Checking readback 374: submitted frame 385, current frame 387, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 8 batches waiting, 1 active chunks
No available workspaces, stopping batch processing
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 39.7ms (target: 10.0ms), Workgroups: 14 -> 14 (PID: 4)
DeferredReadbackManager: advanced to frame 388
Processing readbacks: 3 pending, completed_frame: 388, frames_in_flight: 3
Checking readback 374: submitted frame 385, current frame 388, 3 frames elapsed (need 3)
Readback 374 ready (submitted frame 385, current frame 388)
Checking readback 375: submitted frame 385, current frame 388, 3 frames elapsed (need 3)
Readback 375 ready (submitted frame 385, current frame 388)
Checking readback 376: submitted frame 386, current frame 388, 2 frames elapsed (need 3)
Processing 2 completed readbacks
Minichunk batch readback complete for workspace 2 (13 minichunks, 26624 bytes)
Adding minichunk at offset (16, 40, 32) with 512 non-empty voxels
Minichunk 329/512 completed
Adding minichunk at offset (24, 40, 32) with 512 non-empty voxels
Minichunk 330/512 completed
Adding minichunk at offset (32, 40, 32) with 512 non-empty voxels
Minichunk 331/512 completed
Adding minichunk at offset (40, 40, 32) with 512 non-empty voxels
Minichunk 332/512 completed
Adding minichunk at offset (48, 40, 32) with 512 non-empty voxels
Minichunk 333/512 completed
Adding minichunk at offset (56, 40, 32) with 512 non-empty voxels
Minichunk 334/512 completed
Adding minichunk at offset (0, 48, 32) with 512 non-empty voxels
Minichunk 335/512 completed
Adding minichunk at offset (8, 48, 32) with 512 non-empty voxels
Minichunk 336/512 completed
Adding minichunk at offset (16, 48, 32) with 512 non-empty voxels
Minichunk 337/512 completed
Adding minichunk at offset (24, 48, 32) with 512 non-empty voxels
Minichunk 338/512 completed
Adding minichunk at offset (32, 48, 32) with 512 non-empty voxels
Minichunk 339/512 completed
Adding minichunk at offset (40, 48, 32) with 512 non-empty voxels
Minichunk 340/512 completed
Adding minichunk at offset (48, 48, 32) with 512 non-empty voxels
Minichunk 341/512 completed
Releasing workspace 2 (was in_use: true)
Available workspaces after release: 1/3
Minichunk batch readback complete for workspace 0 (1 minichunks, 2048 bytes)
Adding minichunk at offset (56, 48, 32) with 512 non-empty voxels
Minichunk 342/512 completed
Releasing workspace 0 (was in_use: true)
Available workspaces after release: 2/3
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 388
Velocity: [0.00, 0.00, 5507.40] speed=5507.40 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -28789.25] | Torque: [177673.219, 428941.094, 136333.500]
  Angular vel: current=[-7040.941, -16998.338, -5402.705] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.042 units: [5.00, 5.00, 243.66] -> [5.00, 5.00, 243.61]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-7039.71, -16995.36, -5401.76] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 7, pending meshes: 0
Checking 7 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 1
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 388, frames_in_flight: 3
Checking readback 376: submitted frame 386, current frame 388, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 8 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(0, 1, 1) with 1 minichunks (available workspaces: 2)
Allocating workspace 2 (current_index: 2)
Available workspaces after allocation: 1/3
Processing 1 minichunks in workspace 2
Overall bounds: [8, 80, 104] to [16, 88, 112]
renderer_buffer_write called - buffer: anyopaque@1f002cf5be8, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5be8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5be8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df51d8, alignment: 0
Returning buffer pointer: 0x1f002df51d8 (aligned: true)
Created staging buffer at: 0x1f002df51d8
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a0b000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(13824717148422935093), dst: vk.Buffer(10094846052541661671)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5ba8, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ba8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5ba8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5218, alignment: 0
Returning buffer pointer: 0x1f002df5218 (aligned: true)
Created staging buffer at: 0x1f002df5218
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a47000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(3697737868559520311), dst: vk.Buffer(16700742698545447395)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5ca8, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ca8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5ca8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5318, alignment: 0
Returning buffer pointer: 0x1f002df5318 (aligned: true)
Created staging buffer at: 0x1f002df5318
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a29000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(3776624529317564985), dst: vk.Buffer(17497165150031970789)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf58a8, size: 64, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf58a8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf58a8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5398, alignment: 0
Returning buffer pointer: 0x1f002df5398 (aligned: true)
Created staging buffer at: 0x1f002df5398
Staging buffer cast successful
About to map memory for staging buffer - size: 64
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a0c000
About to memcpy 64 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(9621806463458480699), dst: vk.Buffer(14063823544068866539)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [8.0e0,8.0e1,1.0e2] to [1.6e1,8.8e1,1.1e2]
Buffer handles - SDF: vk.Buffer(16700742698545447395), Params: vk.Buffer(10094846052541661671), Output: vk.Buffer(17114293211007812073)
generateWorldAdaptive called - offset: 0, max_workgroups: 1
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 1x1x1 workgroups for 8x8x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
getBufferDeviceAddress called for buffer: vk.Buffer(17497165150031970789)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557245952
Using actual brush buffer with address: 0x239a80000
Dispatching brush chunk: offset=0, size=1 (of 1 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002df5518, alignment: 0
Returning buffer pointer: 0x1f002df5518 (aligned: true)
Submitting readback 377 at frame 388 (will be ready at frame 391)
Successfully queued 1 minichunks from this batch
Processing pending minichunk batch for chunk ChunkId(0, 1, 1) with 13 minichunks (available workspaces: 1)
Allocating workspace 0 (current_index: 0)
Available workspaces after allocation: 0/3
Processing 13 minichunks in workspace 0
Overall bounds: [0, 80, 96] to [64, 96, 104]
renderer_buffer_write called - buffer: anyopaque@1efff479918, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479918, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479918 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbcc8, alignment: 0
Returning buffer pointer: 0x1f002dbbcc8 (aligned: true)
Created staging buffer at: 0x1f002dbbcc8
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a23000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(3246836946101604928), dst: vk.Buffer(16655718796899647951)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1efff479658, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479658, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479658 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbb48, alignment: 0
Returning buffer pointer: 0x1f002dbbb48 (aligned: true)
Created staging buffer at: 0x1f002dbbb48
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a24000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(4824752680192709186), dst: vk.Buffer(15589100158980194763)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1efff479818, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479818, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479818 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbf88, alignment: 0
Returning buffer pointer: 0x1f002dbbf88 (aligned: true)
Created staging buffer at: 0x1f002dbbf88
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a53000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(10962448687787151940), dst: vk.Buffer(170787141142446541)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5a28, size: 832, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5a28, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5a28 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbdc8, alignment: 0
Returning buffer pointer: 0x1f002dbbdc8 (aligned: true)
Created staging buffer at: 0x1f002dbbdc8
Staging buffer cast successful
About to map memory for staging buffer - size: 832
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a19000
About to memcpy 832 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(1390436906927395398), dst: vk.Buffer(1025278100226703827)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,8.0e1,9.6e1] to [6.4e1,9.6e1,1.0e2]
Buffer handles - SDF: vk.Buffer(15589100158980194763), Params: vk.Buffer(16655718796899647951), Output: vk.Buffer(15344826058683711953)
generateWorldAdaptive called - offset: 0, max_workgroups: 13
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
getBufferDeviceAddress called for buffer: vk.Buffer(170787141142446541)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534177280
Using actual brush buffer with address: 0x238480000
Dispatching brush chunk: offset=0, size=13 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=13, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002dbbfc8, alignment: 0
Returning buffer pointer: 0x1f002dbbfc8 (aligned: true)
Submitting readback 378 at frame 388 (will be ready at frame 391)
Successfully queued 13 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 45.9ms (target: 10.0ms), Workgroups: 15 -> 15 (PID: 16)
DeferredReadbackManager: advanced to frame 389
Processing readbacks: 3 pending, completed_frame: 389, frames_in_flight: 3
Checking readback 376: submitted frame 386, current frame 389, 3 frames elapsed (need 3)
Readback 376 ready (submitted frame 386, current frame 389)
Checking readback 377: submitted frame 388, current frame 389, 1 frames elapsed (need 3)
Processing 1 completed readbacks
Minichunk batch readback complete for workspace 1 (14 minichunks, 28672 bytes)
Adding minichunk at offset (16, 40, 24) with 512 non-empty voxels
Minichunk 343/512 completed
Adding minichunk at offset (24, 40, 24) with 512 non-empty voxels
Minichunk 344/512 completed
Adding minichunk at offset (32, 40, 24) with 512 non-empty voxels
Minichunk 345/512 completed
Adding minichunk at offset (40, 40, 24) with 512 non-empty voxels
Minichunk 346/512 completed
Adding minichunk at offset (48, 40, 24) with 512 non-empty voxels
Minichunk 347/512 completed
Adding minichunk at offset (56, 40, 24) with 512 non-empty voxels
Minichunk 348/512 completed
Adding minichunk at offset (0, 48, 24) with 512 non-empty voxels
Minichunk 349/512 completed
Adding minichunk at offset (8, 48, 24) with 512 non-empty voxels
Minichunk 350/512 completed
Adding minichunk at offset (16, 48, 24) with 512 non-empty voxels
Minichunk 351/512 completed
Adding minichunk at offset (24, 48, 24) with 512 non-empty voxels
Minichunk 352/512 completed
Adding minichunk at offset (32, 48, 24) with 512 non-empty voxels
Minichunk 353/512 completed
Adding minichunk at offset (40, 48, 24) with 512 non-empty voxels
Minichunk 354/512 completed
Adding minichunk at offset (48, 48, 24) with 512 non-empty voxels
Minichunk 355/512 completed
Adding minichunk at offset (56, 48, 24) with 512 non-empty voxels
Minichunk 356/512 completed
Releasing workspace 1 (was in_use: true)
Available workspaces after release: 1/3
Force processing old readbacks: 2 pending, max age: 3 frames, current frame: 389
Velocity: [0.00, 0.00, 9447.01] speed=9447.01 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -53375.29] | Torque: [224415.859, 541787.875, 172200.375]
  Angular vel: current=[-2554.637, -6167.440, -1960.242] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 243.61] -> [5.00, 5.00, 243.57]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-2554.19, -6166.37, -1959.90] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 7, pending meshes: 0
Checking 7 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing readbacks: 2 pending, completed_frame: 389, frames_in_flight: 3
Checking readback 377: submitted frame 388, current frame 389, 1 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 6 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(0, 1, 1) with 26 minichunks (available workspaces: 1)
Allocating workspace 1 (current_index: 1)
Available workspaces after allocation: 0/3
Processing 15 minichunks in workspace 1
Overall bounds: [0, 80, 88] to [64, 96, 96]
renderer_buffer_write called - buffer: anyopaque@1f002cf5c68, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5c68, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5c68 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbd08, alignment: 0
Returning buffer pointer: 0x1f002dbbd08 (aligned: true)
Created staging buffer at: 0x1f002dbbd08
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a3d000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(6013279669841826379), dst: vk.Buffer(17645821321130541531)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5768, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5768, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5768 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbbc8, alignment: 0
Returning buffer pointer: 0x1f002dbbbc8 (aligned: true)
Created staging buffer at: 0x1f002dbbbc8
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a1d000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(6218054914422084173), dst: vk.Buffer(14073195781184029143)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5928, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5928, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5928 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbe48, alignment: 0
Returning buffer pointer: 0x1f002dbbe48 (aligned: true)
Created staging buffer at: 0x1f002dbbe48
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a55000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(424580813112218191), dst: vk.Buffer(16705046187056562649)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf57e8, size: 960, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf57e8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf57e8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbf08, alignment: 0
Returning buffer pointer: 0x1f002dbbf08 (aligned: true)
Created staging buffer at: 0x1f002dbbf08
Staging buffer cast successful
About to map memory for staging buffer - size: 960
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a46000
About to memcpy 960 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(7863245366970290769), dst: vk.Buffer(18334454249699672543)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,8.0e1,8.8e1] to [6.4e1,9.6e1,9.6e1]
Buffer handles - SDF: vk.Buffer(14073195781184029143), Params: vk.Buffer(17645821321130541531), Output: vk.Buffer(18233758775804690909)
generateWorldAdaptive called - offset: 0, max_workgroups: 15
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
getBufferDeviceAddress called for buffer: vk.Buffer(16705046187056562649)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545711616
Using actual brush buffer with address: 0x238f80000
Dispatching brush chunk: offset=0, size=15 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=15, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002df53d8, alignment: 0
Returning buffer pointer: 0x1f002df53d8 (aligned: true)
Submitting readback 379 at frame 389 (will be ready at frame 392)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 1: No available workspace in ring buffer
Re-queuing 11 remaining minichunks from batch
Successfully queued 15 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 46.2ms (target: 10.0ms), Workgroups: 16 -> 16 (PID: 16)
DeferredReadbackManager: advanced to frame 390
Processing readbacks: 3 pending, completed_frame: 390, frames_in_flight: 3
Checking readback 377: submitted frame 388, current frame 390, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 3 pending, max age: 3 frames, current frame: 390
Velocity: [0.00, 0.00, 3427.60] speed=3427.60 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -29504.96] | Torque: [151669.312, 366162.125, 116379.953]
  Angular vel: current=[-4173.758, -10076.345, -3202.638] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 243.57] -> [5.00, 5.00, 243.53]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-4173.02, -10074.56, -3202.07] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 7, pending meshes: 0
Checking 7 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 0
Command buffer begun in frame_begin
Processing readbacks: 3 pending, completed_frame: 390, frames_in_flight: 3
Checking readback 377: submitted frame 388, current frame 390, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 6 batches waiting, 1 active chunks
No available workspaces, stopping batch processing
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 40.9ms (target: 10.0ms), Workgroups: 15 -> 15 (PID: 4)
DeferredReadbackManager: advanced to frame 391
Processing readbacks: 3 pending, completed_frame: 391, frames_in_flight: 3
Checking readback 377: submitted frame 388, current frame 391, 3 frames elapsed (need 3)
Readback 377 ready (submitted frame 388, current frame 391)
Checking readback 378: submitted frame 388, current frame 391, 3 frames elapsed (need 3)
Readback 378 ready (submitted frame 388, current frame 391)
Checking readback 379: submitted frame 389, current frame 391, 2 frames elapsed (need 3)
Processing 2 completed readbacks
Minichunk batch readback complete for workspace 2 (1 minichunks, 2048 bytes)
Adding minichunk at offset (8, 16, 40) with 512 non-empty voxels
Minichunk 357/512 completed
Releasing workspace 2 (was in_use: true)
Available workspaces after release: 1/3
Minichunk batch readback complete for workspace 0 (13 minichunks, 26624 bytes)
Adding minichunk at offset (8, 16, 32) with 512 non-empty voxels
Minichunk 358/512 completed
Adding minichunk at offset (16, 16, 32) with 512 non-empty voxels
Minichunk 359/512 completed
Adding minichunk at offset (24, 16, 32) with 512 non-empty voxels
Minichunk 360/512 completed
Adding minichunk at offset (32, 16, 32) with 512 non-empty voxels
Minichunk 361/512 completed
Adding minichunk at offset (40, 16, 32) with 512 non-empty voxels
Minichunk 362/512 completed
Adding minichunk at offset (48, 16, 32) with 512 non-empty voxels
Minichunk 363/512 completed
Adding minichunk at offset (56, 16, 32) with 512 non-empty voxels
Minichunk 364/512 completed
Adding minichunk at offset (0, 24, 32) with 512 non-empty voxels
Minichunk 365/512 completed
Adding minichunk at offset (8, 24, 32) with 512 non-empty voxels
Minichunk 366/512 completed
Adding minichunk at offset (16, 24, 32) with 512 non-empty voxels
Minichunk 367/512 completed
Adding minichunk at offset (24, 24, 32) with 512 non-empty voxels
Minichunk 368/512 completed
Adding minichunk at offset (32, 24, 32) with 512 non-empty voxels
Minichunk 369/512 completed
Adding minichunk at offset (40, 24, 32) with 512 non-empty voxels
Minichunk 370/512 completed
Releasing workspace 0 (was in_use: true)
Available workspaces after release: 2/3
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 391
Velocity: [0.00, 0.00, 5599.97] speed=5599.97 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, 32313.76] | Torque: [-17410.844, -42033.375, -13359.781]
  Angular vel: current=[-10298.994, -24863.975, -7902.698] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 243.53] -> [5.00, 5.00, 243.48]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-10297.18, -24859.58, -7901.30] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 7, pending meshes: 0
Checking 7 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 1
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 391, frames_in_flight: 3
Checking readback 379: submitted frame 389, current frame 391, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 6 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(0, 1, 1) with 26 minichunks (available workspaces: 2)
Allocating workspace 2 (current_index: 2)
Available workspaces after allocation: 1/3
Processing 15 minichunks in workspace 2
Overall bounds: [0, 88, 80] to [64, 112, 88]
renderer_buffer_write called - buffer: anyopaque@1f002cf5be8, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5be8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5be8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5418, alignment: 0
Returning buffer pointer: 0x1f002df5418 (aligned: true)
Created staging buffer at: 0x1f002df5418
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a1e000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(4942210208853135958), dst: vk.Buffer(10094846052541661671)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5ba8, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ba8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5ba8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5518, alignment: 0
Returning buffer pointer: 0x1f002df5518 (aligned: true)
Created staging buffer at: 0x1f002df5518
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a56000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(8502809290615034456), dst: vk.Buffer(16700742698545447395)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5ca8, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ca8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5ca8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5698, alignment: 0
Returning buffer pointer: 0x1f002df5698 (aligned: true)
Created staging buffer at: 0x1f002df5698
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a22000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(8316563015986057818), dst: vk.Buffer(17497165150031970789)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf58a8, size: 960, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf58a8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf58a8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5118, alignment: 0
Returning buffer pointer: 0x1f002df5118 (aligned: true)
Created staging buffer at: 0x1f002df5118
Staging buffer cast successful
About to map memory for staging buffer - size: 960
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a5f000
About to memcpy 960 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(8733473635982905948), dst: vk.Buffer(14063823544068866539)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,8.8e1,8.0e1] to [6.4e1,1.1e2,8.8e1]
Buffer handles - SDF: vk.Buffer(16700742698545447395), Params: vk.Buffer(10094846052541661671), Output: vk.Buffer(17114293211007812073)
generateWorldAdaptive called - offset: 0, max_workgroups: 15
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x3x1 workgroups for 64x24x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=3, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
getBufferDeviceAddress called for buffer: vk.Buffer(17497165150031970789)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557245952
Using actual brush buffer with address: 0x239a80000
Dispatching brush chunk: offset=0, size=15 (of 24 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=15, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002df5498, alignment: 0
Returning buffer pointer: 0x1f002df5498 (aligned: true)
Submitting readback 380 at frame 391 (will be ready at frame 394)
Allocating workspace 0 (current_index: 0)
Available workspaces after allocation: 0/3
Processing 11 minichunks in workspace 0
Overall bounds: [0, 104, 80] to [64, 120, 88]
renderer_buffer_write called - buffer: anyopaque@1efff479918, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479918, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479918 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d83e38, alignment: 0
Returning buffer pointer: 0x1f002d83e38 (aligned: true)
Created staging buffer at: 0x1f002d83e38
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a60000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(8693193027499332193), dst: vk.Buffer(16655718796899647951)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1efff479658, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479658, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479658 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d84278, alignment: 0
Returning buffer pointer: 0x1f002d84278 (aligned: true)
Created staging buffer at: 0x1f002d84278
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a13000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(9352532767281255011), dst: vk.Buffer(15589100158980194763)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1efff479818, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479818, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479818 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d83fb8, alignment: 0
Returning buffer pointer: 0x1f002d83fb8 (aligned: true)
Created staging buffer at: 0x1f002d83fb8
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a14000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(7868229453178999397), dst: vk.Buffer(170787141142446541)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5a28, size: 704, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5a28, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5a28 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d83cb8, alignment: 0
Returning buffer pointer: 0x1f002d83cb8 (aligned: true)
Created staging buffer at: 0x1f002d83cb8
Staging buffer cast successful
About to map memory for staging buffer - size: 704
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a3e000
About to memcpy 704 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(5721597926690525799), dst: vk.Buffer(1025278100226703827)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,1.0e2,8.0e1] to [6.4e1,1.2e2,8.8e1]
Buffer handles - SDF: vk.Buffer(15589100158980194763), Params: vk.Buffer(16655718796899647951), Output: vk.Buffer(15344826058683711953)
generateWorldAdaptive called - offset: 0, max_workgroups: 11
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
getBufferDeviceAddress called for buffer: vk.Buffer(170787141142446541)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534177280
Using actual brush buffer with address: 0x238480000
Dispatching brush chunk: offset=0, size=11 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=11, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002d83bb8, alignment: 0
Returning buffer pointer: 0x1f002d83bb8 (aligned: true)
Submitting readback 381 at frame 391 (will be ready at frame 394)
Successfully queued 26 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 43.8ms (target: 10.0ms), Workgroups: 16 -> 16 (PID: 16)
DeferredReadbackManager: advanced to frame 392
Processing readbacks: 3 pending, completed_frame: 392, frames_in_flight: 3
Checking readback 379: submitted frame 389, current frame 392, 3 frames elapsed (need 3)
Readback 379 ready (submitted frame 389, current frame 392)
Checking readback 380: submitted frame 391, current frame 392, 1 frames elapsed (need 3)
Processing 1 completed readbacks
Minichunk batch readback complete for workspace 1 (15 minichunks, 30720 bytes)
Adding minichunk at offset (0, 16, 24) with 512 non-empty voxels
Minichunk 371/512 completed
Adding minichunk at offset (8, 16, 24) with 512 non-empty voxels
Minichunk 372/512 completed
Adding minichunk at offset (16, 16, 24) with 512 non-empty voxels
Minichunk 373/512 completed
Adding minichunk at offset (24, 16, 24) with 512 non-empty voxels
Minichunk 374/512 completed
Adding minichunk at offset (32, 16, 24) with 512 non-empty voxels
Minichunk 375/512 completed
Adding minichunk at offset (40, 16, 24) with 512 non-empty voxels
Minichunk 376/512 completed
Adding minichunk at offset (48, 16, 24) with 512 non-empty voxels
Minichunk 377/512 completed
Adding minichunk at offset (56, 16, 24) with 512 non-empty voxels
Minichunk 378/512 completed
Adding minichunk at offset (0, 24, 24) with 512 non-empty voxels
Minichunk 379/512 completed
Adding minichunk at offset (8, 24, 24) with 512 non-empty voxels
Minichunk 380/512 completed
Adding minichunk at offset (16, 24, 24) with 512 non-empty voxels
Minichunk 381/512 completed
Adding minichunk at offset (24, 24, 24) with 512 non-empty voxels
Minichunk 382/512 completed
Adding minichunk at offset (32, 24, 24) with 512 non-empty voxels
Minichunk 383/512 completed
Adding minichunk at offset (40, 24, 24) with 512 non-empty voxels
Minichunk 384/512 completed
Adding minichunk at offset (48, 24, 24) with 512 non-empty voxels
Minichunk 385/512 completed
Releasing workspace 1 (was in_use: true)
Available workspaces after release: 1/3
Force processing old readbacks: 2 pending, max age: 3 frames, current frame: 392
Velocity: [0.00, 0.00, 13818.22] speed=13818.22 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -83626.09] | Torque: [342479.969, 826819.875, 262794.188]
  Angular vel: current=[-3089.555, -7458.848, -2370.700] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 243.48] -> [5.00, 5.00, 243.44]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-3089.01, -7457.54, -2370.28] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 7, pending meshes: 0
Checking 7 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing readbacks: 2 pending, completed_frame: 392, frames_in_flight: 3
Checking readback 380: submitted frame 391, current frame 392, 1 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 5 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(0, 1, 1) with 12 minichunks (available workspaces: 1)
Allocating workspace 1 (current_index: 1)
Available workspaces after allocation: 0/3
Processing 12 minichunks in workspace 1
Overall bounds: [0, 64, 88] to [64, 128, 104]
renderer_buffer_write called - buffer: anyopaque@1f002cf5c68, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5c68, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5c68 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d840b8, alignment: 0
Returning buffer pointer: 0x1f002d840b8 (aligned: true)
Created staging buffer at: 0x1f002d840b8
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a2f000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(10700156890446303852), dst: vk.Buffer(17645821321130541531)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5768, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5768, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5768 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d83cf8, alignment: 0
Returning buffer pointer: 0x1f002d83cf8 (aligned: true)
Created staging buffer at: 0x1f002d83cf8
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a61000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(1419949998040158830), dst: vk.Buffer(14073195781184029143)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5928, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5928, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5928 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d83d38, alignment: 0
Returning buffer pointer: 0x1f002d83d38 (aligned: true)
Created staging buffer at: 0x1f002d83d38
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a62000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(6416823526979801712), dst: vk.Buffer(16705046187056562649)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf57e8, size: 768, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf57e8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf57e8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df55d8, alignment: 0
Returning buffer pointer: 0x1f002df55d8 (aligned: true)
Created staging buffer at: 0x1f002df55d8
Staging buffer cast successful
About to map memory for staging buffer - size: 768
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a30000
About to memcpy 768 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(11647189345193955954), dst: vk.Buffer(18334454249699672543)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,6.4e1,8.8e1] to [6.4e1,1.3e2,1.0e2]
Buffer handles - SDF: vk.Buffer(14073195781184029143), Params: vk.Buffer(17645821321130541531), Output: vk.Buffer(18233758775804690909)
generateWorldAdaptive called - offset: 0, max_workgroups: 12
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x8x2 workgroups for 64x64x16 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=8, z=2
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
getBufferDeviceAddress called for buffer: vk.Buffer(16705046187056562649)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545711616
Using actual brush buffer with address: 0x238f80000
Dispatching brush chunk: offset=0, size=12 (of 128 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=12, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002df50d8, alignment: 0
Returning buffer pointer: 0x1f002df50d8 (aligned: true)
Submitting readback 382 at frame 392 (will be ready at frame 395)
Successfully queued 12 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 42.6ms (target: 10.0ms), Workgroups: 15 -> 15 (PID: 11)
DeferredReadbackManager: advanced to frame 393
Processing readbacks: 3 pending, completed_frame: 393, frames_in_flight: 3
Checking readback 380: submitted frame 391, current frame 393, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 3 pending, max age: 3 frames, current frame: 393
Velocity: [0.00, 0.00, 4145.26] speed=4145.26 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -31512.41] | Torque: [168427.719, 406620.531, 129239.172]
  Angular vel: current=[-5101.513, -12316.143, -3914.529] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 243.44] -> [5.00, 5.00, 243.40]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-5100.61, -12313.97, -3913.84] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 7, pending meshes: 0
Checking 7 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 0
Command buffer begun in frame_begin
Processing readbacks: 3 pending, completed_frame: 393, frames_in_flight: 3
Checking readback 380: submitted frame 391, current frame 393, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 4 batches waiting, 1 active chunks
No available workspaces, stopping batch processing
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 38.2ms (target: 10.0ms), Workgroups: 14 -> 14 (PID: 4)
DeferredReadbackManager: advanced to frame 394
Processing readbacks: 3 pending, completed_frame: 394, frames_in_flight: 3
Checking readback 380: submitted frame 391, current frame 394, 3 frames elapsed (need 3)
Readback 380 ready (submitted frame 391, current frame 394)
Checking readback 381: submitted frame 391, current frame 394, 3 frames elapsed (need 3)
Readback 381 ready (submitted frame 391, current frame 394)
Checking readback 382: submitted frame 392, current frame 394, 2 frames elapsed (need 3)
Processing 2 completed readbacks
Minichunk batch readback complete for workspace 2 (15 minichunks, 30720 bytes)
Adding minichunk at offset (32, 24, 16) with 512 non-empty voxels
Minichunk 386/512 completed
Adding minichunk at offset (40, 24, 16) with 512 non-empty voxels
Minichunk 387/512 completed
Adding minichunk at offset (48, 24, 16) with 512 non-empty voxels
Minichunk 388/512 completed
Adding minichunk at offset (56, 24, 16) with 512 non-empty voxels
Minichunk 389/512 completed
Adding minichunk at offset (0, 32, 16) with 512 non-empty voxels
Minichunk 390/512 completed
Adding minichunk at offset (8, 32, 16) with 512 non-empty voxels
Minichunk 391/512 completed
Adding minichunk at offset (16, 32, 16) with 512 non-empty voxels
Minichunk 392/512 completed
Adding minichunk at offset (24, 32, 16) with 512 non-empty voxels
Minichunk 393/512 completed
Adding minichunk at offset (32, 32, 16) with 512 non-empty voxels
Minichunk 394/512 completed
Adding minichunk at offset (40, 32, 16) with 512 non-empty voxels
Minichunk 395/512 completed
Adding minichunk at offset (48, 32, 16) with 512 non-empty voxels
Minichunk 396/512 completed
Adding minichunk at offset (56, 32, 16) with 512 non-empty voxels
Minichunk 397/512 completed
Adding minichunk at offset (0, 40, 16) with 512 non-empty voxels
Minichunk 398/512 completed
Adding minichunk at offset (8, 40, 16) with 512 non-empty voxels
Minichunk 399/512 completed
Adding minichunk at offset (16, 40, 16) with 512 non-empty voxels
Minichunk 400/512 completed
Releasing workspace 2 (was in_use: true)
Available workspaces after release: 1/3
Minichunk batch readback complete for workspace 0 (11 minichunks, 22528 bytes)
Adding minichunk at offset (24, 40, 16) with 512 non-empty voxels
Minichunk 401/512 completed
Adding minichunk at offset (32, 40, 16) with 512 non-empty voxels
Minichunk 402/512 completed
Adding minichunk at offset (40, 40, 16) with 512 non-empty voxels
Minichunk 403/512 completed
Adding minichunk at offset (48, 40, 16) with 512 non-empty voxels
Minichunk 404/512 completed
Adding minichunk at offset (56, 40, 16) with 512 non-empty voxels
Minichunk 405/512 completed
Adding minichunk at offset (0, 48, 16) with 512 non-empty voxels
Minichunk 406/512 completed
Adding minichunk at offset (8, 48, 16) with 512 non-empty voxels
Minichunk 407/512 completed
Adding minichunk at offset (16, 48, 16) with 512 non-empty voxels
Minichunk 408/512 completed
Adding minichunk at offset (24, 48, 16) with 512 non-empty voxels
Minichunk 409/512 completed
Adding minichunk at offset (32, 48, 16) with 512 non-empty voxels
Minichunk 410/512 completed
Adding minichunk at offset (40, 48, 16) with 512 non-empty voxels
Minichunk 411/512 completed
Releasing workspace 0 (was in_use: true)
Available workspaces after release: 2/3
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 394
Velocity: [0.00, 0.00, 6844.68] speed=6844.68 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -38746.37] | Torque: [220212.438, 531639.875, 168975.000]
  Angular vel: current=[-7584.631, -18310.920, -5819.893] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 243.40] -> [5.00, 5.00, 243.36]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-7583.30, -18307.70, -5818.87] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 7, pending meshes: 0
Checking 7 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 1
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 394, frames_in_flight: 3
Checking readback 382: submitted frame 392, current frame 394, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 4 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(0, 1, 1) with 11 minichunks (available workspaces: 2)
Allocating workspace 2 (current_index: 2)
Available workspaces after allocation: 1/3
Processing 11 minichunks in workspace 2
Overall bounds: [0, 88, 88] to [64, 112, 96]
renderer_buffer_write called - buffer: anyopaque@1f002cf5be8, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5be8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5be8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5498, alignment: 0
Returning buffer pointer: 0x1f002df5498 (aligned: true)
Created staging buffer at: 0x1f002df5498
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a0f000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(12186986882273911), dst: vk.Buffer(10094846052541661671)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5ba8, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ba8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5ba8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df53d8, alignment: 0
Returning buffer pointer: 0x1f002df53d8 (aligned: true)
Created staging buffer at: 0x1f002df53d8
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a10000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(12201159587151221369), dst: vk.Buffer(16700742698545447395)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5ca8, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ca8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5ca8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5258, alignment: 0
Returning buffer pointer: 0x1f002df5258 (aligned: true)
Created staging buffer at: 0x1f002df5258
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b0d000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(5712191604714902139), dst: vk.Buffer(17497165150031970789)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf58a8, size: 704, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf58a8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf58a8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5098, alignment: 0
Returning buffer pointer: 0x1f002df5098 (aligned: true)
Created staging buffer at: 0x1f002df5098
Staging buffer cast successful
About to map memory for staging buffer - size: 704
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b0e000
About to memcpy 704 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(878085379104707197), dst: vk.Buffer(14063823544068866539)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,8.8e1,8.8e1] to [6.4e1,1.1e2,9.6e1]
Buffer handles - SDF: vk.Buffer(16700742698545447395), Params: vk.Buffer(10094846052541661671), Output: vk.Buffer(17114293211007812073)
generateWorldAdaptive called - offset: 0, max_workgroups: 11
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x3x1 workgroups for 64x24x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=3, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
getBufferDeviceAddress called for buffer: vk.Buffer(17497165150031970789)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557245952
Using actual brush buffer with address: 0x239a80000
Dispatching brush chunk: offset=0, size=11 (of 24 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=11, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002df5458, alignment: 0
Returning buffer pointer: 0x1f002df5458 (aligned: true)
Submitting readback 383 at frame 394 (will be ready at frame 397)
Successfully queued 11 minichunks from this batch
Processing pending minichunk batch for chunk ChunkId(0, 1, 1) with 26 minichunks (available workspaces: 1)
Allocating workspace 0 (current_index: 0)
Available workspaces after allocation: 0/3
Processing 14 minichunks in workspace 0
Overall bounds: [0, 64, 80] to [64, 80, 88]
renderer_buffer_write called - buffer: anyopaque@1efff479918, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479918, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479918 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5198, alignment: 0
Returning buffer pointer: 0x1f002df5198 (aligned: true)
Created staging buffer at: 0x1f002df5198
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a31000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(13535341081155080834), dst: vk.Buffer(16655718796899647951)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1efff479658, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479658, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479658 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df54d8, alignment: 0
Returning buffer pointer: 0x1f002df54d8 (aligned: true)
Created staging buffer at: 0x1f002df54d8
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a32000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(4534763085436555908), dst: vk.Buffer(15589100158980194763)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1efff479818, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479818, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479818 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5618, alignment: 0
Returning buffer pointer: 0x1f002df5618 (aligned: true)
Created staging buffer at: 0x1f002df5618
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a0d000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(2414374702479839878), dst: vk.Buffer(170787141142446541)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5a28, size: 896, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5a28, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5a28 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c7c8, alignment: 0
Returning buffer pointer: 0x1f002d9c7c8 (aligned: true)
Created staging buffer at: 0x1f002d9c7c8
Staging buffer cast successful
About to map memory for staging buffer - size: 896
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b1b000
About to memcpy 896 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(13293037305695572616), dst: vk.Buffer(1025278100226703827)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,6.4e1,8.0e1] to [6.4e1,8.0e1,8.8e1]
Buffer handles - SDF: vk.Buffer(15589100158980194763), Params: vk.Buffer(16655718796899647951), Output: vk.Buffer(15344826058683711953)
generateWorldAdaptive called - offset: 0, max_workgroups: 14
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
getBufferDeviceAddress called for buffer: vk.Buffer(170787141142446541)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534177280
Using actual brush buffer with address: 0x238480000
Dispatching brush chunk: offset=0, size=14 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=14, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002d9c608, alignment: 0
Returning buffer pointer: 0x1f002d9c608 (aligned: true)
Submitting readback 384 at frame 394 (will be ready at frame 397)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 1: No available workspace in ring buffer
Re-queuing 12 remaining minichunks from batch
Successfully queued 14 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 40.6ms (target: 10.0ms), Workgroups: 15 -> 15 (PID: 16)
DeferredReadbackManager: advanced to frame 395
Processing readbacks: 3 pending, completed_frame: 395, frames_in_flight: 3
Checking readback 382: submitted frame 392, current frame 395, 3 frames elapsed (need 3)
Readback 382 ready (submitted frame 392, current frame 395)
Checking readback 383: submitted frame 394, current frame 395, 1 frames elapsed (need 3)
Processing 1 completed readbacks
Minichunk batch readback complete for workspace 1 (12 minichunks, 24576 bytes)
Adding minichunk at offset (0, 56, 24) with 512 non-empty voxels
Minichunk 412/512 completed
Adding minichunk at offset (8, 56, 24) with 512 non-empty voxels
Minichunk 413/512 completed
Adding minichunk at offset (16, 56, 24) with 512 non-empty voxels
Minichunk 414/512 completed
Adding minichunk at offset (24, 56, 24) with 512 non-empty voxels
Minichunk 415/512 completed
Adding minichunk at offset (32, 56, 24) with 512 non-empty voxels
Minichunk 416/512 completed
Adding minichunk at offset (40, 56, 24) with 512 non-empty voxels
Minichunk 417/512 completed
Adding minichunk at offset (48, 56, 24) with 512 non-empty voxels
Minichunk 418/512 completed
Adding minichunk at offset (56, 56, 24) with 512 non-empty voxels
Minichunk 419/512 completed
Adding minichunk at offset (0, 0, 32) with 512 non-empty voxels
Minichunk 420/512 completed
Adding minichunk at offset (8, 0, 32) with 512 non-empty voxels
Minichunk 421/512 completed
Adding minichunk at offset (16, 0, 32) with 512 non-empty voxels
Minichunk 422/512 completed
Adding minichunk at offset (24, 0, 32) with 512 non-empty voxels
Minichunk 423/512 completed
Releasing workspace 1 (was in_use: true)
Available workspaces after release: 1/3
Force processing old readbacks: 2 pending, max age: 3 frames, current frame: 395
Velocity: [0.00, 0.00, 10176.25] speed=10176.25 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -69770.00] | Torque: [294789.531, 711684.875, 226199.969]
  Angular vel: current=[-3482.922, -8408.520, -2672.541] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 243.36] -> [5.00, 5.00, 243.31]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-3482.31, -8407.05, -2672.07] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 7, pending meshes: 0
Checking 7 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing readbacks: 2 pending, completed_frame: 395, frames_in_flight: 3
Checking readback 383: submitted frame 394, current frame 395, 1 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 3 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(0, 1, 1) with 26 minichunks (available workspaces: 1)
Allocating workspace 1 (current_index: 1)
Available workspaces after allocation: 0/3
Processing 15 minichunks in workspace 1
Overall bounds: [0, 64, 64] to [64, 128, 80]
renderer_buffer_write called - buffer: anyopaque@1f002cf5c68, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5c68, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5c68 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c408, alignment: 0
Returning buffer pointer: 0x1f002d9c408 (aligned: true)
Created staging buffer at: 0x1f002d9c408
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a48000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(2986633121341903501), dst: vk.Buffer(17645821321130541531)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5768, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5768, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5768 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c688, alignment: 0
Returning buffer pointer: 0x1f002d9c688 (aligned: true)
Created staging buffer at: 0x1f002d9c688
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a54000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(14926236484431254159), dst: vk.Buffer(14073195781184029143)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5928, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5928, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5928 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c788, alignment: 0
Returning buffer pointer: 0x1f002d9c788 (aligned: true)
Created staging buffer at: 0x1f002d9c788
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a15000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(10072831630730334865), dst: vk.Buffer(16705046187056562649)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf57e8, size: 960, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf57e8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf57e8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c248, alignment: 0
Returning buffer pointer: 0x1f002d9c248 (aligned: true)
Created staging buffer at: 0x1f002d9c248
Staging buffer cast successful
About to map memory for staging buffer - size: 960
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a16000
About to memcpy 960 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(2652726833149121171), dst: vk.Buffer(18334454249699672543)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,6.4e1,6.4e1] to [6.4e1,1.3e2,8.0e1]
Buffer handles - SDF: vk.Buffer(14073195781184029143), Params: vk.Buffer(17645821321130541531), Output: vk.Buffer(18233758775804690909)
generateWorldAdaptive called - offset: 0, max_workgroups: 15
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x8x2 workgroups for 64x64x16 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=8, z=2
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
getBufferDeviceAddress called for buffer: vk.Buffer(16705046187056562649)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545711616
Using actual brush buffer with address: 0x238f80000
Dispatching brush chunk: offset=0, size=15 (of 128 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=15, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002d9c348, alignment: 0
Returning buffer pointer: 0x1f002d9c348 (aligned: true)
Submitting readback 385 at frame 395 (will be ready at frame 398)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 1: No available workspace in ring buffer
Re-queuing 11 remaining minichunks from batch
Successfully queued 15 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 39.8ms (target: 10.0ms), Workgroups: 14 -> 14 (PID: 11)
DeferredReadbackManager: advanced to frame 396
Processing readbacks: 3 pending, completed_frame: 396, frames_in_flight: 3
Checking readback 383: submitted frame 394, current frame 396, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 3 pending, max age: 3 frames, current frame: 396
Velocity: [0.00, 0.00, 4673.00] speed=4673.00 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -37116.69] | Torque: [186553.750, 450380.625, 143147.719]
  Angular vel: current=[-4825.844, -11650.618, -3703.001] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.042 units: [5.00, 5.00, 243.31] -> [5.00, 5.00, 243.27]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-4825.00, -11648.58, -3702.35] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 7, pending meshes: 0
Checking 7 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 0
Command buffer begun in frame_begin
Processing readbacks: 3 pending, completed_frame: 396, frames_in_flight: 3
Checking readback 383: submitted frame 394, current frame 396, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 3 batches waiting, 1 active chunks
No available workspaces, stopping batch processing
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 35.2ms (target: 10.0ms), Workgroups: 13 -> 13 (PID: 4)
DeferredReadbackManager: advanced to frame 397
Processing readbacks: 3 pending, completed_frame: 397, frames_in_flight: 3
Checking readback 383: submitted frame 394, current frame 397, 3 frames elapsed (need 3)
Readback 383 ready (submitted frame 394, current frame 397)
Checking readback 384: submitted frame 394, current frame 397, 3 frames elapsed (need 3)
Readback 384 ready (submitted frame 394, current frame 397)
Checking readback 385: submitted frame 395, current frame 397, 2 frames elapsed (need 3)
Processing 2 completed readbacks
Minichunk batch readback complete for workspace 2 (11 minichunks, 22528 bytes)
Adding minichunk at offset (56, 24, 24) with 512 non-empty voxels
Minichunk 424/512 completed
Adding minichunk at offset (0, 32, 24) with 512 non-empty voxels
Minichunk 425/512 completed
Adding minichunk at offset (8, 32, 24) with 512 non-empty voxels
Minichunk 426/512 completed
Adding minichunk at offset (16, 32, 24) with 512 non-empty voxels
Minichunk 427/512 completed
Adding minichunk at offset (24, 32, 24) with 512 non-empty voxels
Minichunk 428/512 completed
Adding minichunk at offset (32, 32, 24) with 512 non-empty voxels
Minichunk 429/512 completed
Adding minichunk at offset (40, 32, 24) with 512 non-empty voxels
Minichunk 430/512 completed
Adding minichunk at offset (48, 32, 24) with 512 non-empty voxels
Minichunk 431/512 completed
Adding minichunk at offset (56, 32, 24) with 512 non-empty voxels
Minichunk 432/512 completed
Adding minichunk at offset (0, 40, 24) with 512 non-empty voxels
Minichunk 433/512 completed
Adding minichunk at offset (8, 40, 24) with 512 non-empty voxels
Minichunk 434/512 completed
Releasing workspace 2 (was in_use: true)
Available workspaces after release: 1/3
Minichunk batch readback complete for workspace 0 (14 minichunks, 28672 bytes)
Adding minichunk at offset (16, 0, 16) with 512 non-empty voxels
Minichunk 435/512 completed
Adding minichunk at offset (24, 0, 16) with 512 non-empty voxels
Minichunk 436/512 completed
Adding minichunk at offset (32, 0, 16) with 512 non-empty voxels
Minichunk 437/512 completed
Adding minichunk at offset (40, 0, 16) with 512 non-empty voxels
Minichunk 438/512 completed
Adding minichunk at offset (48, 0, 16) with 512 non-empty voxels
Minichunk 439/512 completed
Adding minichunk at offset (56, 0, 16) with 512 non-empty voxels
Minichunk 440/512 completed
Adding minichunk at offset (0, 8, 16) with 512 non-empty voxels
Minichunk 441/512 completed
Adding minichunk at offset (8, 8, 16) with 512 non-empty voxels
Minichunk 442/512 completed
Adding minichunk at offset (16, 8, 16) with 512 non-empty voxels
Minichunk 443/512 completed
Adding minichunk at offset (24, 8, 16) with 512 non-empty voxels
Minichunk 444/512 completed
Adding minichunk at offset (32, 8, 16) with 512 non-empty voxels
Minichunk 445/512 completed
Adding minichunk at offset (40, 8, 16) with 512 non-empty voxels
Minichunk 446/512 completed
Adding minichunk at offset (48, 8, 16) with 512 non-empty voxels
Minichunk 447/512 completed
Adding minichunk at offset (56, 8, 16) with 512 non-empty voxels
Minichunk 448/512 completed
Releasing workspace 0 (was in_use: true)
Available workspaces after release: 2/3
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 397
Velocity: [0.00, 0.00, 6474.76] speed=6474.76 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -21306.55] | Torque: [163871.375, 395620.375, 125742.938]
  Angular vel: current=[-8448.479, -20396.434, -6482.747] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.042 units: [5.00, 5.00, 243.27] -> [5.00, 5.00, 243.23]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-8447.01, -20392.88, -6481.62] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 7, pending meshes: 0
Checking 7 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 1
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 397, frames_in_flight: 3
Checking readback 385: submitted frame 395, current frame 397, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 3 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(0, 1, 1) with 26 minichunks (available workspaces: 2)
Allocating workspace 2 (current_index: 2)
Available workspaces after allocation: 1/3
Processing 13 minichunks in workspace 2
Overall bounds: [0, 104, 72] to [64, 120, 80]
renderer_buffer_write called - buffer: anyopaque@1f002cf5be8, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5be8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5be8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c648, alignment: 0
Returning buffer pointer: 0x1f002d9c648 (aligned: true)
Created staging buffer at: 0x1f002d9c648
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a63000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(15909187785035092632), dst: vk.Buffer(10094846052541661671)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5ba8, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ba8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5ba8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002cf5d28, alignment: 0
Returning buffer pointer: 0x1f002cf5d28 (aligned: true)
Created staging buffer at: 0x1f002cf5d28
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a5d000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(11341779099858244250), dst: vk.Buffer(16700742698545447395)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5ca8, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ca8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5ca8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002cf5d68, alignment: 0
Returning buffer pointer: 0x1f002cf5d68 (aligned: true)
Created staging buffer at: 0x1f002cf5d68
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a5e000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(1881886718706061980), dst: vk.Buffer(17497165150031970789)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf58a8, size: 832, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf58a8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf58a8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002cf56a8, alignment: 0
Returning buffer pointer: 0x1f002cf56a8 (aligned: true)
Created staging buffer at: 0x1f002cf56a8
Staging buffer cast successful
About to map memory for staging buffer - size: 832
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a57000
About to memcpy 832 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(15026959446116930206), dst: vk.Buffer(14063823544068866539)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,1.0e2,7.2e1] to [6.4e1,1.2e2,8.0e1]
Buffer handles - SDF: vk.Buffer(16700742698545447395), Params: vk.Buffer(10094846052541661671), Output: vk.Buffer(17114293211007812073)
generateWorldAdaptive called - offset: 0, max_workgroups: 13
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
getBufferDeviceAddress called for buffer: vk.Buffer(17497165150031970789)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557245952
Using actual brush buffer with address: 0x239a80000
Dispatching brush chunk: offset=0, size=13 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=13, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002cf5968, alignment: 0
Returning buffer pointer: 0x1f002cf5968 (aligned: true)
Submitting readback 386 at frame 397 (will be ready at frame 400)
Allocating workspace 0 (current_index: 0)
Available workspaces after allocation: 0/3
Processing 13 minichunks in workspace 0
Overall bounds: [0, 64, 72] to [64, 128, 88]
renderer_buffer_write called - buffer: anyopaque@1efff479918, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479918, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479918 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002cf57a8, alignment: 0
Returning buffer pointer: 0x1f002cf57a8 (aligned: true)
Created staging buffer at: 0x1f002cf57a8
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b1c000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(17222346616715874979), dst: vk.Buffer(16655718796899647951)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1efff479658, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479658, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479658 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002cf59a8, alignment: 0
Returning buffer pointer: 0x1f002cf59a8 (aligned: true)
Created staging buffer at: 0x1f002cf59a8
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a58000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(858019291897795237), dst: vk.Buffer(15589100158980194763)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1efff479818, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479818, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479818 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002cf59e8, alignment: 0
Returning buffer pointer: 0x1f002cf59e8 (aligned: true)
Created staging buffer at: 0x1f002cf59e8
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a64000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(16587318178535707303), dst: vk.Buffer(170787141142446541)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5a28, size: 832, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5a28, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5a28 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d83f38, alignment: 0
Returning buffer pointer: 0x1f002d83f38 (aligned: true)
Created staging buffer at: 0x1f002d83f38
Staging buffer cast successful
About to map memory for staging buffer - size: 832
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a1a000
About to memcpy 832 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(14231172512351261353), dst: vk.Buffer(1025278100226703827)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,6.4e1,7.2e1] to [6.4e1,1.3e2,8.8e1]
Buffer handles - SDF: vk.Buffer(15589100158980194763), Params: vk.Buffer(16655718796899647951), Output: vk.Buffer(15344826058683711953)
generateWorldAdaptive called - offset: 0, max_workgroups: 13
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x8x2 workgroups for 64x64x16 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=8, z=2
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
getBufferDeviceAddress called for buffer: vk.Buffer(170787141142446541)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534177280
Using actual brush buffer with address: 0x238480000
Dispatching brush chunk: offset=0, size=13 (of 128 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=13, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002d83bb8, alignment: 0
Returning buffer pointer: 0x1f002d83bb8 (aligned: true)
Submitting readback 387 at frame 397 (will be ready at frame 400)
Successfully queued 26 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 39.5ms (target: 10.0ms), Workgroups: 14 -> 14 (PID: 16)
DeferredReadbackManager: advanced to frame 398
Processing readbacks: 3 pending, completed_frame: 398, frames_in_flight: 3
Checking readback 385: submitted frame 395, current frame 398, 3 frames elapsed (need 3)
Readback 385 ready (submitted frame 395, current frame 398)
Checking readback 386: submitted frame 397, current frame 398, 1 frames elapsed (need 3)
Processing 1 completed readbacks
Minichunk batch readback complete for workspace 1 (15 minichunks, 30720 bytes)
Adding minichunk at offset (32, 48, 0) with 512 non-empty voxels
Minichunk 449/512 completed
Adding minichunk at offset (40, 48, 0) with 512 non-empty voxels
Minichunk 450/512 completed
Adding minichunk at offset (48, 48, 0) with 512 non-empty voxels
Minichunk 451/512 completed
Adding minichunk at offset (56, 48, 0) with 512 non-empty voxels
Minichunk 452/512 completed
Adding minichunk at offset (0, 56, 0) with 512 non-empty voxels
Minichunk 453/512 completed
Adding minichunk at offset (8, 56, 0) with 512 non-empty voxels
Minichunk 454/512 completed
Adding minichunk at offset (16, 56, 0) with 512 non-empty voxels
Minichunk 455/512 completed
Adding minichunk at offset (24, 56, 0) with 512 non-empty voxels
Minichunk 456/512 completed
Adding minichunk at offset (32, 56, 0) with 512 non-empty voxels
Minichunk 457/512 completed
Adding minichunk at offset (40, 56, 0) with 512 non-empty voxels
Minichunk 458/512 completed
Adding minichunk at offset (48, 56, 0) with 512 non-empty voxels
Minichunk 459/512 completed
Adding minichunk at offset (56, 56, 0) with 512 non-empty voxels
Minichunk 460/512 completed
Adding minichunk at offset (0, 0, 8) with 512 non-empty voxels
Minichunk 461/512 completed
Adding minichunk at offset (8, 0, 8) with 512 non-empty voxels
Minichunk 462/512 completed
Adding minichunk at offset (16, 0, 8) with 512 non-empty voxels
Minichunk 463/512 completed
Releasing workspace 1 (was in_use: true)
Available workspaces after release: 1/3
Force processing old readbacks: 2 pending, max age: 3 frames, current frame: 398
Velocity: [0.00, 0.00, 11335.17] speed=11335.17 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -69486.16] | Torque: [289036.812, 697796.625, 221785.781]
  Angular vel: current=[-3013.160, -7274.413, -2312.080] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.042 units: [5.00, 5.00, 243.23] -> [5.00, 5.00, 243.19]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-3012.64, -7273.15, -2311.68] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 7, pending meshes: 0
Checking 7 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing readbacks: 2 pending, completed_frame: 398, frames_in_flight: 3
Checking readback 386: submitted frame 397, current frame 398, 1 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 2 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(0, 1, 1) with 12 minichunks (available workspaces: 1)
Allocating workspace 1 (current_index: 1)
Available workspaces after allocation: 0/3
Processing 12 minichunks in workspace 1
Overall bounds: [0, 80, 80] to [64, 96, 88]
renderer_buffer_write called - buffer: anyopaque@1f002cf5c68, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5c68, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5c68 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d84038, alignment: 0
Returning buffer pointer: 0x1f002d84038 (aligned: true)
Created staging buffer at: 0x1f002d84038
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a2a000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(18249974373291135662), dst: vk.Buffer(17645821321130541531)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5768, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5768, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5768 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d84178, alignment: 0
Returning buffer pointer: 0x1f002d84178 (aligned: true)
Created staging buffer at: 0x1f002d84178
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a27000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(17599892521415086768), dst: vk.Buffer(14073195781184029143)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5928, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5928, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5928 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5658, alignment: 0
Returning buffer pointer: 0x1f002df5658 (aligned: true)
Created staging buffer at: 0x1f002df5658
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b1d000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(17792001392043365042), dst: vk.Buffer(16705046187056562649)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf57e8, size: 768, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf57e8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf57e8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df56d8, alignment: 0
Returning buffer pointer: 0x1f002df56d8 (aligned: true)
Created staging buffer at: 0x1f002df56d8
Staging buffer cast successful
About to map memory for staging buffer - size: 768
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a11000
About to memcpy 768 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(16934490074517607092), dst: vk.Buffer(18334454249699672543)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,8.0e1,8.0e1] to [6.4e1,9.6e1,8.8e1]
Buffer handles - SDF: vk.Buffer(14073195781184029143), Params: vk.Buffer(17645821321130541531), Output: vk.Buffer(18233758775804690909)
generateWorldAdaptive called - offset: 0, max_workgroups: 12
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
getBufferDeviceAddress called for buffer: vk.Buffer(16705046187056562649)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545711616
Using actual brush buffer with address: 0x238f80000
Dispatching brush chunk: offset=0, size=12 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=12, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002df5358, alignment: 0
Returning buffer pointer: 0x1f002df5358 (aligned: true)
Submitting readback 388 at frame 398 (will be ready at frame 401)
Successfully queued 12 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 40.8ms (target: 10.0ms), Workgroups: 15 -> 15 (PID: 16)
DeferredReadbackManager: advanced to frame 399
Processing readbacks: 3 pending, completed_frame: 399, frames_in_flight: 3
Checking readback 386: submitted frame 397, current frame 399, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 3 pending, max age: 3 frames, current frame: 399
Velocity: [0.00, 0.00, 4042.69] speed=4042.69 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -34001.57] | Torque: [166442.250, 401827.125, 127715.641]
  Angular vel: current=[-3975.247, -9597.096, -3050.315] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.042 units: [5.00, 5.00, 243.19] -> [5.00, 5.00, 243.14]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-3974.55, -9595.42, -3049.78] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 7, pending meshes: 0
Checking 7 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true

=== Camera State ===
Position: [5.00, 5.00, 243.14]
Rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°]
Mesh Generator: SimpleCube
==================
Controls:
  WASD/Left Stick: Move
  Mouse/Right Stick: Look
  Left Click/RT: Place voxel
  Right Click/LT: Remove voxel
  B/Circle: Toggle mesh generator
  Start/Menu: Save/Load world

Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 0
Command buffer begun in frame_begin
Processing readbacks: 3 pending, completed_frame: 399, frames_in_flight: 3
Checking readback 386: submitted frame 397, current frame 399, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 1 batches waiting, 1 active chunks
No available workspaces, stopping batch processing
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 36.7ms (target: 10.0ms), Workgroups: 14 -> 14 (PID: 4)
DeferredReadbackManager: advanced to frame 400
Processing readbacks: 3 pending, completed_frame: 400, frames_in_flight: 3
Checking readback 386: submitted frame 397, current frame 400, 3 frames elapsed (need 3)
Readback 386 ready (submitted frame 397, current frame 400)
Checking readback 387: submitted frame 397, current frame 400, 3 frames elapsed (need 3)
Readback 387 ready (submitted frame 397, current frame 400)
Checking readback 388: submitted frame 398, current frame 400, 2 frames elapsed (need 3)
Processing 2 completed readbacks
Minichunk batch readback complete for workspace 2 (13 minichunks, 26624 bytes)
Adding minichunk at offset (0, 40, 8) with 512 non-empty voxels
Minichunk 464/512 completed
Adding minichunk at offset (8, 40, 8) with 512 non-empty voxels
Minichunk 465/512 completed
Adding minichunk at offset (16, 40, 8) with 512 non-empty voxels
Minichunk 466/512 completed
Adding minichunk at offset (24, 40, 8) with 512 non-empty voxels
Minichunk 467/512 completed
Adding minichunk at offset (32, 40, 8) with 512 non-empty voxels
Minichunk 468/512 completed
Adding minichunk at offset (40, 40, 8) with 512 non-empty voxels
Minichunk 469/512 completed
Adding minichunk at offset (48, 40, 8) with 512 non-empty voxels
Minichunk 470/512 completed
Adding minichunk at offset (56, 40, 8) with 512 non-empty voxels
Minichunk 471/512 completed
Adding minichunk at offset (0, 48, 8) with 512 non-empty voxels
Minichunk 472/512 completed
Adding minichunk at offset (8, 48, 8) with 512 non-empty voxels
Minichunk 473/512 completed
Adding minichunk at offset (16, 48, 8) with 512 non-empty voxels
Minichunk 474/512 completed
Adding minichunk at offset (24, 48, 8) with 512 non-empty voxels
Minichunk 475/512 completed
Adding minichunk at offset (32, 48, 8) with 512 non-empty voxels
Minichunk 476/512 completed
Releasing workspace 2 (was in_use: true)
Available workspaces after release: 1/3
Minichunk batch readback complete for workspace 0 (13 minichunks, 26624 bytes)
Adding minichunk at offset (40, 48, 8) with 512 non-empty voxels
Minichunk 477/512 completed
Adding minichunk at offset (48, 48, 8) with 512 non-empty voxels
Minichunk 478/512 completed
Adding minichunk at offset (56, 48, 8) with 512 non-empty voxels
Minichunk 479/512 completed
Adding minichunk at offset (0, 56, 8) with 512 non-empty voxels
Minichunk 480/512 completed
Adding minichunk at offset (8, 56, 8) with 512 non-empty voxels
Minichunk 481/512 completed
Adding minichunk at offset (16, 56, 8) with 512 non-empty voxels
Minichunk 482/512 completed
Adding minichunk at offset (24, 56, 8) with 512 non-empty voxels
Minichunk 483/512 completed
Adding minichunk at offset (32, 56, 8) with 512 non-empty voxels
Minichunk 484/512 completed
Adding minichunk at offset (40, 56, 8) with 512 non-empty voxels
Minichunk 485/512 completed
Adding minichunk at offset (48, 56, 8) with 512 non-empty voxels
Minichunk 486/512 completed
Adding minichunk at offset (56, 56, 8) with 512 non-empty voxels
Minichunk 487/512 completed
Adding minichunk at offset (0, 0, 16) with 512 non-empty voxels
Minichunk 488/512 completed
Adding minichunk at offset (8, 0, 16) with 512 non-empty voxels
Minichunk 489/512 completed
Releasing workspace 0 (was in_use: true)
Available workspaces after release: 2/3
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 400
Velocity: [0.00, 0.00, 5333.47] speed=5333.47 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -12687.98] | Torque: [127368.312, 307494.312, 97733.172]
  Angular vel: current=[-8009.396, -19336.395, -6145.826] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.042 units: [5.00, 5.00, 243.14] -> [5.00, 5.00, 243.10]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-8008.00, -19333.03, -6144.76] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 7, pending meshes: 0
Checking 7 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 1
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 400, frames_in_flight: 3
Checking readback 388: submitted frame 398, current frame 400, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 1 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(0, 1, 1) with 11 minichunks (available workspaces: 2)
Allocating workspace 2 (current_index: 2)
Available workspaces after allocation: 1/3
Processing 11 minichunks in workspace 2
Overall bounds: [0, 64, 72] to [64, 80, 80]
renderer_buffer_write called - buffer: anyopaque@1f002cf5be8, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5be8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5be8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5798, alignment: 0
Returning buffer pointer: 0x1f002df5798 (aligned: true)
Created staging buffer at: 0x1f002df5798
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a59000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(10055121796941746873), dst: vk.Buffer(10094846052541661671)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5ba8, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ba8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5ba8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5458, alignment: 0
Returning buffer pointer: 0x1f002df5458 (aligned: true)
Created staging buffer at: 0x1f002df5458
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a49000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(16146260084169642683), dst: vk.Buffer(16700742698545447395)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5ca8, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ca8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5ca8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5058, alignment: 0
Returning buffer pointer: 0x1f002df5058 (aligned: true)
Created staging buffer at: 0x1f002df5058
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a37000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(15662908175529546429), dst: vk.Buffer(17497165150031970789)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf58a8, size: 704, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf58a8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf58a8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df50d8, alignment: 0
Returning buffer pointer: 0x1f002df50d8 (aligned: true)
Created staging buffer at: 0x1f002df50d8
Staging buffer cast successful
About to map memory for staging buffer - size: 704
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a4a000
About to memcpy 704 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(11368939236087567039), dst: vk.Buffer(14063823544068866539)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [0.0e0,6.4e1,7.2e1] to [6.4e1,8.0e1,8.0e1]
Buffer handles - SDF: vk.Buffer(16700742698545447395), Params: vk.Buffer(10094846052541661671), Output: vk.Buffer(17114293211007812073)
generateWorldAdaptive called - offset: 0, max_workgroups: 11
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
getBufferDeviceAddress called for buffer: vk.Buffer(17497165150031970789)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557245952
Using actual brush buffer with address: 0x239a80000
Dispatching brush chunk: offset=0, size=11 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=11, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002df5158, alignment: 0
Returning buffer pointer: 0x1f002df5158 (aligned: true)
Submitting readback 389 at frame 400 (will be ready at frame 403)
Successfully queued 11 minichunks from this batch
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 37.8ms (target: 10.0ms), Workgroups: 15 -> 15 (PID: 16)
DeferredReadbackManager: advanced to frame 401
Processing readbacks: 2 pending, completed_frame: 401, frames_in_flight: 3
Checking readback 388: submitted frame 398, current frame 401, 3 frames elapsed (need 3)
Readback 388 ready (submitted frame 398, current frame 401)
Checking readback 389: submitted frame 400, current frame 401, 1 frames elapsed (need 3)
Processing 1 completed readbacks
Minichunk batch readback complete for workspace 1 (12 minichunks, 24576 bytes)
Adding minichunk at offset (0, 16, 16) with 512 non-empty voxels
Minichunk 490/512 completed
Adding minichunk at offset (8, 16, 16) with 512 non-empty voxels
Minichunk 491/512 completed
Adding minichunk at offset (16, 16, 16) with 512 non-empty voxels
Minichunk 492/512 completed
Adding minichunk at offset (24, 16, 16) with 512 non-empty voxels
Minichunk 493/512 completed
Adding minichunk at offset (32, 16, 16) with 512 non-empty voxels
Minichunk 494/512 completed
Adding minichunk at offset (40, 16, 16) with 512 non-empty voxels
Minichunk 495/512 completed
Adding minichunk at offset (48, 16, 16) with 512 non-empty voxels
Minichunk 496/512 completed
Adding minichunk at offset (56, 16, 16) with 512 non-empty voxels
Minichunk 497/512 completed
Adding minichunk at offset (0, 24, 16) with 512 non-empty voxels
Minichunk 498/512 completed
Adding minichunk at offset (8, 24, 16) with 512 non-empty voxels
Minichunk 499/512 completed
Adding minichunk at offset (16, 24, 16) with 512 non-empty voxels
Minichunk 500/512 completed
Adding minichunk at offset (24, 24, 16) with 512 non-empty voxels
Minichunk 501/512 completed
Releasing workspace 1 (was in_use: true)
Available workspaces after release: 2/3
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 401
Velocity: [0.00, 0.00, 10745.94] speed=10745.94 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -84352.09] | Torque: [359552.438, 868036.500, 275894.312]
  Angular vel: current=[-4525.321, -10925.092, -3472.401] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.042 units: [5.00, 5.00, 243.10] -> [5.00, 5.00, 243.06]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-4524.54, -10923.20, -3471.80] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 7, pending meshes: 0
Checking 7 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 401, frames_in_flight: 3
Checking readback 389: submitted frame 400, current frame 401, 1 frames elapsed (need 3)
Processing 0 completed readbacks
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 33.9ms (target: 10.0ms), Workgroups: 14 -> 14 (PID: 4)
DeferredReadbackManager: advanced to frame 402
Processing readbacks: 1 pending, completed_frame: 402, frames_in_flight: 3
Checking readback 389: submitted frame 400, current frame 402, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 402
Velocity: [0.00, 0.00, 6071.46] speed=6071.46 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, 58866.40] | Torque: [-104242.625, -251663.750, -79988.125]
  Angular vel: current=[-11509.989, -27787.572, -8831.927] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.042 units: [5.00, 5.00, 243.06] -> [5.00, 5.00, 243.02]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-11508.00, -27782.78, -8830.40] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 7, pending meshes: 0
Checking 7 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 0
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 402, frames_in_flight: 3
Checking readback 389: submitted frame 400, current frame 402, 2 frames elapsed (need 3)
Processing 0 completed readbacks
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 30.6ms (target: 10.0ms), Workgroups: 13 -> 13 (PID: 4)
DeferredReadbackManager: advanced to frame 403
Processing readbacks: 1 pending, completed_frame: 403, frames_in_flight: 3
Checking readback 389: submitted frame 400, current frame 403, 3 frames elapsed (need 3)
Readback 389 ready (submitted frame 400, current frame 403)
Processing 1 completed readbacks
Minichunk batch readback complete for workspace 2 (11 minichunks, 22528 bytes)
Adding minichunk at offset (24, 0, 8) with 512 non-empty voxels
Minichunk 502/512 completed
Adding minichunk at offset (32, 0, 8) with 512 non-empty voxels
Minichunk 503/512 completed
Adding minichunk at offset (40, 0, 8) with 512 non-empty voxels
Minichunk 504/512 completed
Adding minichunk at offset (48, 0, 8) with 512 non-empty voxels
Minichunk 505/512 completed
Adding minichunk at offset (56, 0, 8) with 512 non-empty voxels
Minichunk 506/512 completed
Adding minichunk at offset (0, 8, 8) with 512 non-empty voxels
Minichunk 507/512 completed
Adding minichunk at offset (8, 8, 8) with 512 non-empty voxels
Minichunk 508/512 completed
Adding minichunk at offset (16, 8, 8) with 512 non-empty voxels
Minichunk 509/512 completed
Adding minichunk at offset (24, 8, 8) with 512 non-empty voxels
Minichunk 510/512 completed
Adding minichunk at offset (32, 8, 8) with 512 non-empty voxels
Minichunk 511/512 completed
Adding minichunk at offset (40, 8, 8) with 512 non-empty voxels
Minichunk 512/512 completed
Chunk ChunkId(0, 1, 1) complete! All 512 minichunks processed
Releasing workspace 2 (was in_use: true)
GPU generation completed successfully
Available workspaces after release: 3/3
GPU generation completed successfully. Voxel count: 262144
Velocity: [0.00, 0.00, 15442.51] speed=15442.51 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -149213.72] | Torque: [632823.375, 1527770.750, 485582.562]
  Angular vel: current=[-7684.399, -18551.783, -5896.448] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
Non-empty voxels: 262144
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.041 units: [5.00, 5.00, 243.02] -> [5.00, 5.00, 242.98]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-7683.08, -18548.60, -5895.44] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 7, pending meshes: 0
Checking 7 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 1
Command buffer begun in frame_begin
Processing 0 completed readbacks
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
GPU pipeline worker: Processing request 11 with priority 7
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
GPU generation thread spawned for bounds: [64.0,0.0,64.0] to [128.0,64.0,128.0]
GPU generation: starting for 262144 voxels
GPU generation: waiting for result...
queue_generation_blocking returned: true
Async generation completed for chunk ChunkId(0, 1, 1)
Sending result for chunk ChunkId(0, 1, 1) through channel
Frame time: 28.5ms (target: 10.0ms), Workgroups: 12 -> 12 (PID: 4)
DeferredReadbackManager: advanced to frame 404
Processing 0 completed readbacks
Result sent successfully for chunk ChunkId(0, 1, 1)
Velocity: [0.00, 0.00, 10309.84] speed=10309.84 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -14756.13] | Torque: [173637.781, 419198.812, 133237.031]
  Angular vel: current=[-11865.776, -28646.521, -9104.932] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.041 units: [5.00, 5.00, 242.98] -> [5.00, 5.00, 242.94]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-11863.75, -28641.64, -9103.38] target: [0.00, 0.00, 0.00]
Received generation result 1 for region RegionId(0, 0, 0)
Processing single chunk workspace for chunk ChunkId(0, 1, 1)
Chunk ChunkId(0, 1, 1) has 262144 non-empty voxels out of 262144
First few non-empty voxels in chunk ChunkId(0, 1, 1):
  Voxel at (0,0,0): type 3735928559
  Voxel at (1,0,0): type 3735928559
  Voxel at (2,0,0): type 3735928559
  Voxel at (3,0,0): type 3735928559
  Voxel at (4,0,0): type 3735928559
  Voxel at (5,0,0): type 3735928559
  Voxel at (6,0,0): type 3735928559
  Voxel at (7,0,0): type 3735928559
  Voxel at (8,0,0): type 3735928559
  Voxel at (9,0,0): type 3735928559
Extracted 1 chunks from region RegionId(0, 0, 0)
  Chunk ChunkId(0, 1, 1): palette size 1, 32768 bytes compressed
Adding chunk ChunkId(0, 1, 1) to active_chunks (total: 8)
Decompressed 262144 voxels for chunk ChunkId(0, 1, 1), 262144 non-empty
  First 10 voxels: [Voxel(3735928559), Voxel(3735928559), Voxel(3735928559), Voxel(3735928559), Voxel(3735928559), Voxel(3735928559), Voxel(3735928559), Voxel(3735928559), Voxel(3735928559), Voxel(3735928559)]
Successfully sent chunk ChunkId(0, 1, 1) to mesh generation
Creating generation params for region RegionId(0, 0, 0)
Region RegionId(0, 0, 0) world bounds: min=[0,0,0] max=[256,256,256]
Creating plane SDF with normal [0, 0, 1] and distance 0
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing 0 completed readbacks
Main thread: Execute GPU worldgen for bounds [64.0,0.0,64.0] to [128.0,64.0,128.0]
Processing chunk ChunkId(1, 0, 1) as minichunks
Creating ChunkAccumulator: 262144 voxels, 512 minichunks (8 per axis)
Queuing 512 minichunks for chunk ChunkId(1, 0, 1)
Processing 512 minichunks in 22 batches of up to 24 each (frames_in_flight: 3)
PID controller: Processing 12 minichunks per workspace (workgroup budget: 12)
Allocating workspace 0 (current_index: 0)
Available workspaces after allocation: 2/3
Processing 12 minichunks in workspace 0
Overall bounds: [64, 0, 64] to [128, 16, 72]
renderer_buffer_write called - buffer: anyopaque@1efff479918, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479918, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479918 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c108, alignment: 0
Returning buffer pointer: 0x1f002d9c108 (aligned: true)
Created staging buffer at: 0x1f002d9c108
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a5a000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(1575965200463434436), dst: vk.Buffer(16655718796899647951)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1efff479658, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479658, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479658 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c0c8, alignment: 0
Returning buffer pointer: 0x1f002d9c0c8 (aligned: true)
Created staging buffer at: 0x1f002d9c0c8
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a39000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(15332318014406136518), dst: vk.Buffer(15589100158980194763)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1efff479818, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479818, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479818 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c208, alignment: 0
Returning buffer pointer: 0x1f002d9c208 (aligned: true)
Created staging buffer at: 0x1f002d9c208
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b18000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(12334682080205083336), dst: vk.Buffer(170787141142446541)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5a28, size: 768, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5a28, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5a28 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c288, alignment: 0
Returning buffer pointer: 0x1f002d9c288 (aligned: true)
Created staging buffer at: 0x1f002d9c288
Staging buffer cast successful
About to map memory for staging buffer - size: 768
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a17000
About to memcpy 768 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(1113596371727815370), dst: vk.Buffer(1025278100226703827)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,0.0e0,6.4e1] to [1.3e2,1.6e1,7.2e1]
Buffer handles - SDF: vk.Buffer(15589100158980194763), Params: vk.Buffer(16655718796899647951), Output: vk.Buffer(15344826058683711953)
generateWorldAdaptive called - offset: 0, max_workgroups: 12
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
getBufferDeviceAddress called for buffer: vk.Buffer(170787141142446541)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534177280
Using actual brush buffer with address: 0x238480000
Dispatching brush chunk: offset=0, size=12 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=12, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002d9c2c8, alignment: 0
Returning buffer pointer: 0x1f002d9c2c8 (aligned: true)
Submitting readback 390 at frame 404 (will be ready at frame 407)
Allocating workspace 1 (current_index: 1)
Available workspaces after allocation: 1/3
Processing 12 minichunks in workspace 1
Overall bounds: [64, 8, 64] to [128, 24, 72]
renderer_buffer_write called - buffer: anyopaque@1f002cf5c68, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5c68, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5c68 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c488, alignment: 0
Returning buffer pointer: 0x1f002d9c488 (aligned: true)
Created staging buffer at: 0x1f002d9c488
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a18000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(11992213894966809295), dst: vk.Buffer(17645821321130541531)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5768, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5768, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5768 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c708, alignment: 0
Returning buffer pointer: 0x1f002d9c708 (aligned: true)
Created staging buffer at: 0x1f002d9c708
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a1f000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(13295647546299912913), dst: vk.Buffer(14073195781184029143)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5928, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5928, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5928 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c308, alignment: 0
Returning buffer pointer: 0x1f002d9c308 (aligned: true)
Created staging buffer at: 0x1f002d9c308
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a20000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(3600666384989688531), dst: vk.Buffer(16705046187056562649)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf57e8, size: 768, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf57e8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf57e8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c348, alignment: 0
Returning buffer pointer: 0x1f002d9c348 (aligned: true)
Created staging buffer at: 0x1f002d9c348
Staging buffer cast successful
About to map memory for staging buffer - size: 768
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a3b000
About to memcpy 768 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(13739986583363261141), dst: vk.Buffer(18334454249699672543)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,8.0e0,6.4e1] to [1.3e2,2.4e1,7.2e1]
Buffer handles - SDF: vk.Buffer(14073195781184029143), Params: vk.Buffer(17645821321130541531), Output: vk.Buffer(18233758775804690909)
generateWorldAdaptive called - offset: 0, max_workgroups: 12
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
getBufferDeviceAddress called for buffer: vk.Buffer(16705046187056562649)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545711616
Using actual brush buffer with address: 0x238f80000
Dispatching brush chunk: offset=0, size=12 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=12, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002d9c448, alignment: 0
Returning buffer pointer: 0x1f002d9c448 (aligned: true)
Submitting readback 391 at frame 404 (will be ready at frame 407)
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 55.7ms (target: 10.0ms), Workgroups: 13 -> 13 (PID: 16)
DeferredReadbackManager: advanced to frame 405
Processing readbacks: 2 pending, completed_frame: 405, frames_in_flight: 3
Checking readback 390: submitted frame 404, current frame 405, 1 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 2 pending, max age: 3 frames, current frame: 405
Velocity: [0.00, 0.00, 15919.80] speed=15919.80 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -59664.71] | Torque: [240046.906, 579524.500, 184194.469]
  Angular vel: current=[-1773.145, -4280.750, -1360.582] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.044 units: [5.00, 5.00, 242.94] -> [5.00, 5.00, 242.89]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-1772.84, -4280.02, -1360.35] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 0
Command buffer begun in frame_begin
Processing readbacks: 2 pending, completed_frame: 405, frames_in_flight: 3
Checking readback 390: submitted frame 404, current frame 405, 1 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 21 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(1, 0, 1) with 24 minichunks (available workspaces: 1)
Allocating workspace 2 (current_index: 2)
Available workspaces after allocation: 0/3
Processing 13 minichunks in workspace 2
Overall bounds: [64, 24, 64] to [128, 40, 72]
renderer_buffer_write called - buffer: anyopaque@1f002cf5be8, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5be8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5be8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c548, alignment: 0
Returning buffer pointer: 0x1f002d9c548 (aligned: true)
Created staging buffer at: 0x1f002d9c548
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a38000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(3902045820697973466), dst: vk.Buffer(10094846052541661671)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5ba8, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ba8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5ba8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c608, alignment: 0
Returning buffer pointer: 0x1f002d9c608 (aligned: true)
Created staging buffer at: 0x1f002d9c608
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb18f6000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(2543463964650509020), dst: vk.Buffer(16700742698545447395)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5ca8, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ca8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5ca8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d842b8, alignment: 0
Returning buffer pointer: 0x1f002d842b8 (aligned: true)
Created staging buffer at: 0x1f002d842b8
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a66000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(10328496671490577118), dst: vk.Buffer(17497165150031970789)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf58a8, size: 832, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf58a8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf58a8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d841f8, alignment: 0
Returning buffer pointer: 0x1f002d841f8 (aligned: true)
Created staging buffer at: 0x1f002d841f8
Staging buffer cast successful
About to map memory for staging buffer - size: 832
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a0e000
About to memcpy 832 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(3033366763568894688), dst: vk.Buffer(14063823544068866539)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,2.4e1,6.4e1] to [1.3e2,4.0e1,7.2e1]
Buffer handles - SDF: vk.Buffer(16700742698545447395), Params: vk.Buffer(10094846052541661671), Output: vk.Buffer(17114293211007812073)
generateWorldAdaptive called - offset: 0, max_workgroups: 13
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
getBufferDeviceAddress called for buffer: vk.Buffer(17497165150031970789)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557245952
Using actual brush buffer with address: 0x239a80000
Dispatching brush chunk: offset=0, size=13 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=13, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002d83bb8, alignment: 0
Returning buffer pointer: 0x1f002d83bb8 (aligned: true)
Submitting readback 392 at frame 405 (will be ready at frame 408)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 1: No available workspace in ring buffer
Re-queuing 11 remaining minichunks from batch
Successfully queued 13 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 55.9ms (target: 10.0ms), Workgroups: 14 -> 14 (PID: 16)
DeferredReadbackManager: advanced to frame 406
Processing readbacks: 3 pending, completed_frame: 406, frames_in_flight: 3
Checking readback 390: submitted frame 404, current frame 406, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 3 pending, max age: 3 frames, current frame: 406
Velocity: [0.00, 0.00, 2378.92] speed=2378.92 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -23464.57] | Torque: [124745.609, 301162.562, 95720.680]
  Angular vel: current=[-3731.455, -9008.529, -2863.246] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.044 units: [5.00, 5.00, 242.89] -> [5.00, 5.00, 242.85]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-3730.78, -9006.90, -2862.73] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 1
Command buffer begun in frame_begin
Processing readbacks: 3 pending, completed_frame: 406, frames_in_flight: 3
Checking readback 390: submitted frame 404, current frame 406, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 21 batches waiting, 1 active chunks
No available workspaces, stopping batch processing
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 51.0ms (target: 10.0ms), Workgroups: 13 -> 13 (PID: 4)
DeferredReadbackManager: advanced to frame 407
Processing readbacks: 3 pending, completed_frame: 407, frames_in_flight: 3
Checking readback 390: submitted frame 404, current frame 407, 3 frames elapsed (need 3)
Readback 390 ready (submitted frame 404, current frame 407)
Checking readback 391: submitted frame 404, current frame 407, 3 frames elapsed (need 3)
Readback 391 ready (submitted frame 404, current frame 407)
Checking readback 392: submitted frame 405, current frame 407, 2 frames elapsed (need 3)
Processing 2 completed readbacks
Minichunk batch readback complete for workspace 0 (12 minichunks, 24576 bytes)
Adding minichunk at offset (0, 0, 0) with 512 non-empty voxels
Minichunk 1/512 completed
Adding minichunk at offset (8, 0, 0) with 512 non-empty voxels
Minichunk 2/512 completed
Adding minichunk at offset (16, 0, 0) with 512 non-empty voxels
Minichunk 3/512 completed
Adding minichunk at offset (24, 0, 0) with 512 non-empty voxels
Minichunk 4/512 completed
Adding minichunk at offset (32, 0, 0) with 512 non-empty voxels
Minichunk 5/512 completed
Adding minichunk at offset (40, 0, 0) with 512 non-empty voxels
Minichunk 6/512 completed
Adding minichunk at offset (48, 0, 0) with 512 non-empty voxels
Minichunk 7/512 completed
Adding minichunk at offset (56, 0, 0) with 512 non-empty voxels
Minichunk 8/512 completed
Adding minichunk at offset (0, 8, 0) with 512 non-empty voxels
Minichunk 9/512 completed
Adding minichunk at offset (8, 8, 0) with 512 non-empty voxels
Minichunk 10/512 completed
Adding minichunk at offset (16, 8, 0) with 512 non-empty voxels
Minichunk 11/512 completed
Adding minichunk at offset (24, 8, 0) with 512 non-empty voxels
Minichunk 12/512 completed
Releasing workspace 0 (was in_use: true)
Available workspaces after release: 1/3
Minichunk batch readback complete for workspace 1 (12 minichunks, 24576 bytes)
Adding minichunk at offset (32, 8, 0) with 512 non-empty voxels
Minichunk 13/512 completed
Adding minichunk at offset (40, 8, 0) with 512 non-empty voxels
Minichunk 14/512 completed
Adding minichunk at offset (48, 8, 0) with 512 non-empty voxels
Minichunk 15/512 completed
Adding minichunk at offset (56, 8, 0) with 512 non-empty voxels
Minichunk 16/512 completed
Adding minichunk at offset (0, 16, 0) with 512 non-empty voxels
Minichunk 17/512 completed
Adding minichunk at offset (8, 16, 0) with 512 non-empty voxels
Minichunk 18/512 completed
Adding minichunk at offset (16, 16, 0) with 512 non-empty voxels
Minichunk 19/512 completed
Adding minichunk at offset (24, 16, 0) with 512 non-empty voxels
Minichunk 20/512 completed
Adding minichunk at offset (32, 16, 0) with 512 non-empty voxels
Minichunk 21/512 completed
Adding minichunk at offset (40, 16, 0) with 512 non-empty voxels
Minichunk 22/512 completed
Adding minichunk at offset (48, 16, 0) with 512 non-empty voxels
Minichunk 23/512 completed
Adding minichunk at offset (56, 16, 0) with 512 non-empty voxels
Minichunk 24/512 completed
Releasing workspace 1 (was in_use: true)
Available workspaces after release: 2/3
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 407
Velocity: [0.00, 0.00, 5006.19] speed=5006.19 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -29350.18] | Torque: [173928.906, 419901.594, 133460.359]
  Angular vel: current=[-6456.671, -15587.783, -4954.379] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.044 units: [5.00, 5.00, 242.85] -> [5.00, 5.00, 242.80]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-6455.51, -15584.97, -4953.48] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 407, frames_in_flight: 3
Checking readback 392: submitted frame 405, current frame 407, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 21 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(1, 0, 1) with 24 minichunks (available workspaces: 2)
Allocating workspace 0 (current_index: 0)
Available workspaces after allocation: 1/3
Processing 13 minichunks in workspace 0
Overall bounds: [64, 8, 72] to [128, 24, 80]
renderer_buffer_write called - buffer: anyopaque@1efff479918, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479918, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479918 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d83bf8, alignment: 0
Returning buffer pointer: 0x1f002d83bf8 (aligned: true)
Created staging buffer at: 0x1f002d83bf8
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a4b000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(6548244853312983781), dst: vk.Buffer(16655718796899647951)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1efff479658, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479658, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479658 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d83ef8, alignment: 0
Returning buffer pointer: 0x1f002d83ef8 (aligned: true)
Created staging buffer at: 0x1f002d83ef8
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a35000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(10456153270010254055), dst: vk.Buffer(15589100158980194763)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1efff479818, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479818, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479818 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d83f78, alignment: 0
Returning buffer pointer: 0x1f002d83f78 (aligned: true)
Created staging buffer at: 0x1f002d83f78
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a50000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(1769226359277621993), dst: vk.Buffer(170787141142446541)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5a28, size: 832, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5a28, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5a28 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c808, alignment: 0
Returning buffer pointer: 0x1f002d9c808 (aligned: true)
Created staging buffer at: 0x1f002d9c808
Staging buffer cast successful
About to map memory for staging buffer - size: 832
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a28000
About to memcpy 832 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(4784753546685846251), dst: vk.Buffer(1025278100226703827)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,8.0e0,7.2e1] to [1.3e2,2.4e1,8.0e1]
Buffer handles - SDF: vk.Buffer(15589100158980194763), Params: vk.Buffer(16655718796899647951), Output: vk.Buffer(15344826058683711953)
generateWorldAdaptive called - offset: 0, max_workgroups: 13
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
getBufferDeviceAddress called for buffer: vk.Buffer(170787141142446541)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534177280
Using actual brush buffer with address: 0x238480000
Dispatching brush chunk: offset=0, size=13 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=13, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002d9c188, alignment: 0
Returning buffer pointer: 0x1f002d9c188 (aligned: true)
Submitting readback 393 at frame 407 (will be ready at frame 410)
Allocating workspace 1 (current_index: 1)
Available workspaces after allocation: 0/3
Processing 11 minichunks in workspace 1
Overall bounds: [64, 16, 72] to [128, 32, 80]
renderer_buffer_write called - buffer: anyopaque@1f002cf5c68, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5c68, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5c68 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c1c8, alignment: 0
Returning buffer pointer: 0x1f002d9c1c8 (aligned: true)
Created staging buffer at: 0x1f002d9c1c8
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a3f000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(7164874063913947888), dst: vk.Buffer(17645821321130541531)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5768, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5768, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5768 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c2c8, alignment: 0
Returning buffer pointer: 0x1f002d9c2c8 (aligned: true)
Created staging buffer at: 0x1f002d9c2c8
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b13000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(1096535249799615218), dst: vk.Buffer(14073195781184029143)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5928, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5928, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5928 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c3c8, alignment: 0
Returning buffer pointer: 0x1f002d9c3c8 (aligned: true)
Created staging buffer at: 0x1f002d9c3c8
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a4c000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(7852407480855302900), dst: vk.Buffer(16705046187056562649)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf57e8, size: 704, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf57e8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf57e8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c448, alignment: 0
Returning buffer pointer: 0x1f002d9c448 (aligned: true)
Created staging buffer at: 0x1f002d9c448
Staging buffer cast successful
About to map memory for staging buffer - size: 704
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a36000
About to memcpy 704 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(8476593634873971446), dst: vk.Buffer(18334454249699672543)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,1.6e1,7.2e1] to [1.3e2,3.2e1,8.0e1]
Buffer handles - SDF: vk.Buffer(14073195781184029143), Params: vk.Buffer(17645821321130541531), Output: vk.Buffer(18233758775804690909)
generateWorldAdaptive called - offset: 0, max_workgroups: 11
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
getBufferDeviceAddress called for buffer: vk.Buffer(16705046187056562649)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545711616
Using actual brush buffer with address: 0x238f80000
Dispatching brush chunk: offset=0, size=11 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=11, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1efff479bd8, alignment: 0
Returning buffer pointer: 0x1efff479bd8 (aligned: true)
Submitting readback 394 at frame 407 (will be ready at frame 410)
Successfully queued 24 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 55.5ms (target: 10.0ms), Workgroups: 14 -> 14 (PID: 16)
DeferredReadbackManager: advanced to frame 408
Processing readbacks: 3 pending, completed_frame: 408, frames_in_flight: 3
Checking readback 392: submitted frame 405, current frame 408, 3 frames elapsed (need 3)
Readback 392 ready (submitted frame 405, current frame 408)
Checking readback 393: submitted frame 407, current frame 408, 1 frames elapsed (need 3)
Processing 1 completed readbacks
Minichunk batch readback complete for workspace 2 (13 minichunks, 26624 bytes)
Adding minichunk at offset (0, 24, 0) with 512 non-empty voxels
Minichunk 25/512 completed
Adding minichunk at offset (8, 24, 0) with 512 non-empty voxels
Minichunk 26/512 completed
Adding minichunk at offset (16, 24, 0) with 512 non-empty voxels
Minichunk 27/512 completed
Adding minichunk at offset (24, 24, 0) with 512 non-empty voxels
Minichunk 28/512 completed
Adding minichunk at offset (32, 24, 0) with 512 non-empty voxels
Minichunk 29/512 completed
Adding minichunk at offset (40, 24, 0) with 512 non-empty voxels
Minichunk 30/512 completed
Adding minichunk at offset (48, 24, 0) with 512 non-empty voxels
Minichunk 31/512 completed
Adding minichunk at offset (56, 24, 0) with 512 non-empty voxels
Minichunk 32/512 completed
Adding minichunk at offset (0, 32, 0) with 512 non-empty voxels
Minichunk 33/512 completed
Adding minichunk at offset (8, 32, 0) with 512 non-empty voxels
Minichunk 34/512 completed
Adding minichunk at offset (16, 32, 0) with 512 non-empty voxels
Minichunk 35/512 completed
Adding minichunk at offset (24, 32, 0) with 512 non-empty voxels
Minichunk 36/512 completed
Adding minichunk at offset (32, 32, 0) with 512 non-empty voxels
Minichunk 37/512 completed
Releasing workspace 2 (was in_use: true)
Available workspaces after release: 1/3
Force processing old readbacks: 2 pending, max age: 3 frames, current frame: 408
Velocity: [0.00, 0.00, 8662.37] speed=8662.37 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -51109.54] | Torque: [216753.875, 523290.125, 166321.125]
  Angular vel: current=[-2631.171, -6352.209, -2018.969] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.044 units: [5.00, 5.00, 242.80] -> [5.00, 5.00, 242.76]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-2630.70, -6351.07, -2018.61] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 0
Command buffer begun in frame_begin
Processing readbacks: 2 pending, completed_frame: 408, frames_in_flight: 3
Checking readback 393: submitted frame 407, current frame 408, 1 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 20 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(1, 0, 1) with 24 minichunks (available workspaces: 1)
Allocating workspace 2 (current_index: 2)
Available workspaces after allocation: 0/3
Processing 14 minichunks in workspace 2
Overall bounds: [64, 40, 80] to [128, 56, 88]
renderer_buffer_write called - buffer: anyopaque@1f002cf5be8, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5be8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5be8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1efff479c58, alignment: 0
Returning buffer pointer: 0x1efff479c58 (aligned: true)
Created staging buffer at: 0x1efff479c58
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b14000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(9024453890715685627), dst: vk.Buffer(10094846052541661671)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5ba8, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ba8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5ba8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1efff479cd8, alignment: 0
Returning buffer pointer: 0x1efff479cd8 (aligned: true)
Created staging buffer at: 0x1efff479cd8
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a3c000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(8749107591818253053), dst: vk.Buffer(16700742698545447395)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5ca8, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ca8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5ca8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbb88, alignment: 0
Returning buffer pointer: 0x1f002dbbb88 (aligned: true)
Created staging buffer at: 0x1f002dbbb88
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a12000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(4612056553845953279), dst: vk.Buffer(17497165150031970789)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf58a8, size: 896, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf58a8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf58a8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbc88, alignment: 0
Returning buffer pointer: 0x1f002dbbc88 (aligned: true)
Created staging buffer at: 0x1f002dbbc88
Staging buffer cast successful
About to map memory for staging buffer - size: 896
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b19000
About to memcpy 896 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(7464987961738662657), dst: vk.Buffer(14063823544068866539)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,4.0e1,8.0e1] to [1.3e2,5.6e1,8.8e1]
Buffer handles - SDF: vk.Buffer(16700742698545447395), Params: vk.Buffer(10094846052541661671), Output: vk.Buffer(17114293211007812073)
generateWorldAdaptive called - offset: 0, max_workgroups: 14
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
getBufferDeviceAddress called for buffer: vk.Buffer(17497165150031970789)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557245952
Using actual brush buffer with address: 0x239a80000
Dispatching brush chunk: offset=0, size=14 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=14, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002dbbe08, alignment: 0
Returning buffer pointer: 0x1f002dbbe08 (aligned: true)
Submitting readback 395 at frame 408 (will be ready at frame 411)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 1: No available workspace in ring buffer
Re-queuing 10 remaining minichunks from batch
Successfully queued 14 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 53.8ms (target: 10.0ms), Workgroups: 13 -> 13 (PID: 13)
DeferredReadbackManager: advanced to frame 409
Processing readbacks: 3 pending, completed_frame: 409, frames_in_flight: 3
Checking readback 393: submitted frame 407, current frame 409, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 3 pending, max age: 3 frames, current frame: 409
Velocity: [0.00, 0.00, 3530.00] speed=3530.00 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -27492.07] | Torque: [151169.234, 364954.812, 115996.234]
  Angular vel: current=[-4872.961, -11764.369, -3739.155] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.044 units: [5.00, 5.00, 242.76] -> [5.00, 5.00, 242.72]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-4872.08, -11762.23, -3738.47] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 1
Command buffer begun in frame_begin
Processing readbacks: 3 pending, completed_frame: 409, frames_in_flight: 3
Checking readback 393: submitted frame 407, current frame 409, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 20 batches waiting, 1 active chunks
No available workspaces, stopping batch processing
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 48.4ms (target: 10.0ms), Workgroups: 12 -> 12 (PID: 4)
DeferredReadbackManager: advanced to frame 410
Processing readbacks: 3 pending, completed_frame: 410, frames_in_flight: 3
Checking readback 393: submitted frame 407, current frame 410, 3 frames elapsed (need 3)
Readback 393 ready (submitted frame 407, current frame 410)
Checking readback 394: submitted frame 407, current frame 410, 3 frames elapsed (need 3)
Readback 394 ready (submitted frame 407, current frame 410)
Checking readback 395: submitted frame 408, current frame 410, 2 frames elapsed (need 3)
Processing 2 completed readbacks
Minichunk batch readback complete for workspace 0 (13 minichunks, 26624 bytes)
Adding minichunk at offset (0, 8, 8) with 512 non-empty voxels
Minichunk 38/512 completed
Adding minichunk at offset (8, 8, 8) with 512 non-empty voxels
Minichunk 39/512 completed
Adding minichunk at offset (16, 8, 8) with 512 non-empty voxels
Minichunk 40/512 completed
Adding minichunk at offset (24, 8, 8) with 512 non-empty voxels
Minichunk 41/512 completed
Adding minichunk at offset (32, 8, 8) with 512 non-empty voxels
Minichunk 42/512 completed
Adding minichunk at offset (40, 8, 8) with 512 non-empty voxels
Minichunk 43/512 completed
Adding minichunk at offset (48, 8, 8) with 512 non-empty voxels
Minichunk 44/512 completed
Adding minichunk at offset (56, 8, 8) with 512 non-empty voxels
Minichunk 45/512 completed
Adding minichunk at offset (0, 16, 8) with 512 non-empty voxels
Minichunk 46/512 completed
Adding minichunk at offset (8, 16, 8) with 512 non-empty voxels
Minichunk 47/512 completed
Adding minichunk at offset (16, 16, 8) with 512 non-empty voxels
Minichunk 48/512 completed
Adding minichunk at offset (24, 16, 8) with 512 non-empty voxels
Minichunk 49/512 completed
Adding minichunk at offset (32, 16, 8) with 512 non-empty voxels
Minichunk 50/512 completed
Releasing workspace 0 (was in_use: true)
Available workspaces after release: 1/3
Minichunk batch readback complete for workspace 1 (11 minichunks, 22528 bytes)
Adding minichunk at offset (40, 16, 8) with 512 non-empty voxels
Minichunk 51/512 completed
Adding minichunk at offset (48, 16, 8) with 512 non-empty voxels
Minichunk 52/512 completed
Adding minichunk at offset (56, 16, 8) with 512 non-empty voxels
Minichunk 53/512 completed
Adding minichunk at offset (0, 24, 8) with 512 non-empty voxels
Minichunk 54/512 completed
Adding minichunk at offset (8, 24, 8) with 512 non-empty voxels
Minichunk 55/512 completed
Adding minichunk at offset (16, 24, 8) with 512 non-empty voxels
Minichunk 56/512 completed
Adding minichunk at offset (24, 24, 8) with 512 non-empty voxels
Minichunk 57/512 completed
Adding minichunk at offset (32, 24, 8) with 512 non-empty voxels
Minichunk 58/512 completed
Adding minichunk at offset (40, 24, 8) with 512 non-empty voxels
Minichunk 59/512 completed
Adding minichunk at offset (48, 24, 8) with 512 non-empty voxels
Minichunk 60/512 completed
Adding minichunk at offset (56, 24, 8) with 512 non-empty voxels
Minichunk 61/512 completed
Releasing workspace 1 (was in_use: true)
Available workspaces after release: 2/3
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 410
Velocity: [0.00, 0.00, 6537.57] speed=6537.57 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -38645.23] | Torque: [216518.922, 522722.906, 166140.844]
  Angular vel: current=[-7252.010, -17507.902, -5564.663] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.044 units: [5.00, 5.00, 242.72] -> [5.00, 5.00, 242.67]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-7250.70, -17504.74, -5563.66] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 410, frames_in_flight: 3
Checking readback 395: submitted frame 408, current frame 410, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 20 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(1, 0, 1) with 24 minichunks (available workspaces: 2)
Allocating workspace 0 (current_index: 0)
Available workspaces after allocation: 1/3
Processing 12 minichunks in workspace 0
Overall bounds: [64, 40, 104] to [128, 56, 112]
renderer_buffer_write called - buffer: anyopaque@1efff479918, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479918, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479918 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbe88, alignment: 0
Returning buffer pointer: 0x1f002dbbe88 (aligned: true)
Created staging buffer at: 0x1f002dbbe88
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a5b000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(10309047410306847494), dst: vk.Buffer(16655718796899647951)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1efff479658, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479658, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479658 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbba08, alignment: 0
Returning buffer pointer: 0x1f002dbba08 (aligned: true)
Created staging buffer at: 0x1f002dbba08
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a67000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(5971709334218871560), dst: vk.Buffer(15589100158980194763)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1efff479818, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479818, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479818 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbb948, alignment: 0
Returning buffer pointer: 0x1f002dbb948 (aligned: true)
Created staging buffer at: 0x1f002dbb948
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a2b000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(6072404808113853194), dst: vk.Buffer(170787141142446541)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5a28, size: 768, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5a28, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5a28 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbec8, alignment: 0
Returning buffer pointer: 0x1f002dbbec8 (aligned: true)
Created staging buffer at: 0x1f002dbbec8
Staging buffer cast successful
About to map memory for staging buffer - size: 768
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a2c000
About to memcpy 768 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(9615961459645223692), dst: vk.Buffer(1025278100226703827)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,4.0e1,1.0e2] to [1.3e2,5.6e1,1.1e2]
Buffer handles - SDF: vk.Buffer(15589100158980194763), Params: vk.Buffer(16655718796899647951), Output: vk.Buffer(15344826058683711953)
generateWorldAdaptive called - offset: 0, max_workgroups: 12
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
getBufferDeviceAddress called for buffer: vk.Buffer(170787141142446541)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534177280
Using actual brush buffer with address: 0x238480000
Dispatching brush chunk: offset=0, size=12 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=12, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002dbbf48, alignment: 0
Returning buffer pointer: 0x1f002dbbf48 (aligned: true)
Submitting readback 396 at frame 410 (will be ready at frame 413)
Allocating workspace 1 (current_index: 1)
Available workspaces after allocation: 0/3
Processing 12 minichunks in workspace 1
Overall bounds: [64, 48, 104] to [128, 64, 112]
renderer_buffer_write called - buffer: anyopaque@1f002cf5c68, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5c68, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5c68 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbfc8, alignment: 0
Returning buffer pointer: 0x1f002dbbfc8 (aligned: true)
Created staging buffer at: 0x1f002dbbfc8
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b1a000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(2110331150097453841), dst: vk.Buffer(17645821321130541531)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5768, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5768, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5768 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c508, alignment: 0
Returning buffer pointer: 0x1f002d9c508 (aligned: true)
Created staging buffer at: 0x1f002d9c508
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a5c000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(4765905718362510099), dst: vk.Buffer(14073195781184029143)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5928, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5928, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5928 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c148, alignment: 0
Returning buffer pointer: 0x1f002d9c148 (aligned: true)
Created staging buffer at: 0x1f002d9c148
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a68000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(10951197385300120341), dst: vk.Buffer(16705046187056562649)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf57e8, size: 768, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf57e8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf57e8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c588, alignment: 0
Returning buffer pointer: 0x1f002d9c588 (aligned: true)
Created staging buffer at: 0x1f002d9c588
Staging buffer cast successful
About to map memory for staging buffer - size: 768
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a4d000
About to memcpy 768 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(1383988271230489367), dst: vk.Buffer(18334454249699672543)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,4.8e1,1.0e2] to [1.3e2,6.4e1,1.1e2]
Buffer handles - SDF: vk.Buffer(14073195781184029143), Params: vk.Buffer(17645821321130541531), Output: vk.Buffer(18233758775804690909)
generateWorldAdaptive called - offset: 0, max_workgroups: 12
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
getBufferDeviceAddress called for buffer: vk.Buffer(16705046187056562649)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545711616
Using actual brush buffer with address: 0x238f80000
Dispatching brush chunk: offset=0, size=12 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=12, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002d9c5c8, alignment: 0
Returning buffer pointer: 0x1f002d9c5c8 (aligned: true)
Submitting readback 397 at frame 410 (will be ready at frame 413)
Successfully queued 24 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 51.2ms (target: 10.0ms), Workgroups: 13 -> 13 (PID: 16)
DeferredReadbackManager: advanced to frame 411
Processing readbacks: 3 pending, completed_frame: 411, frames_in_flight: 3
Checking readback 395: submitted frame 408, current frame 411, 3 frames elapsed (need 3)
Readback 395 ready (submitted frame 408, current frame 411)
Checking readback 396: submitted frame 410, current frame 411, 1 frames elapsed (need 3)
Processing 1 completed readbacks
Minichunk batch readback complete for workspace 2 (14 minichunks, 28672 bytes)
Adding minichunk at offset (0, 40, 16) with 512 non-empty voxels
Minichunk 62/512 completed
Adding minichunk at offset (8, 40, 16) with 512 non-empty voxels
Minichunk 63/512 completed
Adding minichunk at offset (16, 40, 16) with 512 non-empty voxels
Minichunk 64/512 completed
Adding minichunk at offset (24, 40, 16) with 512 non-empty voxels
Minichunk 65/512 completed
Adding minichunk at offset (32, 40, 16) with 512 non-empty voxels
Minichunk 66/512 completed
Adding minichunk at offset (40, 40, 16) with 512 non-empty voxels
Minichunk 67/512 completed
Adding minichunk at offset (48, 40, 16) with 512 non-empty voxels
Minichunk 68/512 completed
Adding minichunk at offset (56, 40, 16) with 512 non-empty voxels
Minichunk 69/512 completed
Adding minichunk at offset (0, 48, 16) with 512 non-empty voxels
Minichunk 70/512 completed
Adding minichunk at offset (8, 48, 16) with 512 non-empty voxels
Minichunk 71/512 completed
Adding minichunk at offset (16, 48, 16) with 512 non-empty voxels
Minichunk 72/512 completed
Adding minichunk at offset (24, 48, 16) with 512 non-empty voxels
Minichunk 73/512 completed
Adding minichunk at offset (32, 48, 16) with 512 non-empty voxels
Minichunk 74/512 completed
Adding minichunk at offset (40, 48, 16) with 512 non-empty voxels
Minichunk 75/512 completed
Releasing workspace 2 (was in_use: true)
Available workspaces after release: 1/3
Force processing old readbacks: 2 pending, max age: 3 frames, current frame: 411
Velocity: [0.00, 0.00, 9729.28] speed=9729.28 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -60628.34] | Torque: [255498.938, 616829.062, 196051.250]
  Angular vel: current=[-2958.538, -7142.543, -2270.167] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.044 units: [5.00, 5.00, 242.67] -> [5.00, 5.00, 242.63]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-2958.01, -7141.26, -2269.76] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 0
Command buffer begun in frame_begin
Processing readbacks: 2 pending, completed_frame: 411, frames_in_flight: 3
Checking readback 396: submitted frame 410, current frame 411, 1 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 19 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(1, 0, 1) with 8 minichunks (available workspaces: 1)
Allocating workspace 2 (current_index: 2)
Available workspaces after allocation: 0/3
Processing 8 minichunks in workspace 2
Overall bounds: [64, 56, 120] to [128, 64, 128]
renderer_buffer_write called - buffer: anyopaque@1f002cf5be8, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5be8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5be8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c6c8, alignment: 0
Returning buffer pointer: 0x1f002d9c6c8 (aligned: true)
Created staging buffer at: 0x1f002d9c6c8
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a4e000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(12735178091110863644), dst: vk.Buffer(10094846052541661671)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5ba8, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ba8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5ba8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c188, alignment: 0
Returning buffer pointer: 0x1f002d9c188 (aligned: true)
Created staging buffer at: 0x1f002d9c188
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a3a000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(13143741218829636382), dst: vk.Buffer(16700742698545447395)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5ca8, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ca8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5ca8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c4c8, alignment: 0
Returning buffer pointer: 0x1f002d9c4c8 (aligned: true)
Created staging buffer at: 0x1f002d9c4c8
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a34000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(382925815093924640), dst: vk.Buffer(17497165150031970789)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf58a8, size: 512, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf58a8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf58a8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c388, alignment: 0
Returning buffer pointer: 0x1f002d9c388 (aligned: true)
Created staging buffer at: 0x1f002d9c388
Staging buffer cast successful
About to map memory for staging buffer - size: 512
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a09000
About to memcpy 512 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(13608364046402196258), dst: vk.Buffer(14063823544068866539)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,5.6e1,1.2e2] to [1.3e2,6.4e1,1.3e2]
Buffer handles - SDF: vk.Buffer(16700742698545447395), Params: vk.Buffer(10094846052541661671), Output: vk.Buffer(17114293211007812073)
generateWorldAdaptive called - offset: 0, max_workgroups: 8
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x1x1 workgroups for 64x8x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
getBufferDeviceAddress called for buffer: vk.Buffer(17497165150031970789)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557245952
Using actual brush buffer with address: 0x239a80000
Dispatching brush chunk: offset=0, size=8 (of 8 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002d9c748, alignment: 0
Returning buffer pointer: 0x1f002d9c748 (aligned: true)
Submitting readback 398 at frame 411 (will be ready at frame 414)
Successfully queued 8 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 49.5ms (target: 10.0ms), Workgroups: 12 -> 12 (PID: 12)
DeferredReadbackManager: advanced to frame 412
Processing readbacks: 3 pending, completed_frame: 412, frames_in_flight: 3
Checking readback 396: submitted frame 410, current frame 412, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 3 pending, max age: 3 frames, current frame: 412
Velocity: [0.00, 0.00, 3969.15] speed=3969.15 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -31724.83] | Torque: [165523.453, 399609.000, 127010.633]
  Angular vel: current=[-4731.035, -11421.730, -3630.252] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.044 units: [5.00, 5.00, 242.63] -> [5.00, 5.00, 242.59]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-4730.18, -11419.66, -3629.59] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 1
Command buffer begun in frame_begin
Processing readbacks: 3 pending, completed_frame: 412, frames_in_flight: 3
Checking readback 396: submitted frame 410, current frame 412, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 18 batches waiting, 1 active chunks
No available workspaces, stopping batch processing
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 43.3ms (target: 10.0ms), Workgroups: 11 -> 11 (PID: 4)
DeferredReadbackManager: advanced to frame 413
Processing readbacks: 3 pending, completed_frame: 413, frames_in_flight: 3
Checking readback 396: submitted frame 410, current frame 413, 3 frames elapsed (need 3)
Readback 396 ready (submitted frame 410, current frame 413)
Checking readback 397: submitted frame 410, current frame 413, 3 frames elapsed (need 3)
Readback 397 ready (submitted frame 410, current frame 413)
Checking readback 398: submitted frame 411, current frame 413, 2 frames elapsed (need 3)
Processing 2 completed readbacks
Minichunk batch readback complete for workspace 0 (12 minichunks, 24576 bytes)
Adding minichunk at offset (0, 40, 40) with 512 non-empty voxels
Minichunk 76/512 completed
Adding minichunk at offset (8, 40, 40) with 512 non-empty voxels
Minichunk 77/512 completed
Adding minichunk at offset (16, 40, 40) with 512 non-empty voxels
Minichunk 78/512 completed
Adding minichunk at offset (24, 40, 40) with 512 non-empty voxels
Minichunk 79/512 completed
Adding minichunk at offset (32, 40, 40) with 512 non-empty voxels
Minichunk 80/512 completed
Adding minichunk at offset (40, 40, 40) with 512 non-empty voxels
Minichunk 81/512 completed
Adding minichunk at offset (48, 40, 40) with 512 non-empty voxels
Minichunk 82/512 completed
Adding minichunk at offset (56, 40, 40) with 512 non-empty voxels
Minichunk 83/512 completed
Adding minichunk at offset (0, 48, 40) with 512 non-empty voxels
Minichunk 84/512 completed
Adding minichunk at offset (8, 48, 40) with 512 non-empty voxels
Minichunk 85/512 completed
Adding minichunk at offset (16, 48, 40) with 512 non-empty voxels
Minichunk 86/512 completed
Adding minichunk at offset (24, 48, 40) with 512 non-empty voxels
Minichunk 87/512 completed
Releasing workspace 0 (was in_use: true)
Available workspaces after release: 1/3
Minichunk batch readback complete for workspace 1 (12 minichunks, 24576 bytes)
Adding minichunk at offset (32, 48, 40) with 512 non-empty voxels
Minichunk 88/512 completed
Adding minichunk at offset (40, 48, 40) with 512 non-empty voxels
Minichunk 89/512 completed
Adding minichunk at offset (48, 48, 40) with 512 non-empty voxels
Minichunk 90/512 completed
Adding minichunk at offset (56, 48, 40) with 512 non-empty voxels
Minichunk 91/512 completed
Adding minichunk at offset (0, 56, 40) with 512 non-empty voxels
Minichunk 92/512 completed
Adding minichunk at offset (8, 56, 40) with 512 non-empty voxels
Minichunk 93/512 completed
Adding minichunk at offset (16, 56, 40) with 512 non-empty voxels
Minichunk 94/512 completed
Adding minichunk at offset (24, 56, 40) with 512 non-empty voxels
Minichunk 95/512 completed
Adding minichunk at offset (32, 56, 40) with 512 non-empty voxels
Minichunk 96/512 completed
Adding minichunk at offset (40, 56, 40) with 512 non-empty voxels
Minichunk 97/512 completed
Adding minichunk at offset (48, 56, 40) with 512 non-empty voxels
Minichunk 98/512 completed
Adding minichunk at offset (56, 56, 40) with 512 non-empty voxels
Minichunk 99/512 completed
Releasing workspace 1 (was in_use: true)
Available workspaces after release: 2/3
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 413
Velocity: [0.00, 0.00, 6347.10] speed=6347.10 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -34547.75] | Torque: [202720.953, 489411.688, 155553.328]
  Angular vel: current=[-7398.887, -17862.494, -5677.367] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 242.59] -> [5.00, 5.00, 242.54]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-7397.55, -17859.28, -5676.34] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 413, frames_in_flight: 3
Checking readback 398: submitted frame 411, current frame 413, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 18 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(1, 0, 1) with 11 minichunks (available workspaces: 2)
Allocating workspace 0 (current_index: 0)
Available workspaces after allocation: 1/3
Processing 11 minichunks in workspace 0
Overall bounds: [64, 32, 64] to [128, 48, 72]
renderer_buffer_write called - buffer: anyopaque@1efff479918, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479918, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479918 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c5c8, alignment: 0
Returning buffer pointer: 0x1f002d9c5c8 (aligned: true)
Created staging buffer at: 0x1f002d9c5c8
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a2d000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(14178028717334336295), dst: vk.Buffer(16655718796899647951)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1efff479658, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479658, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479658 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbf48, alignment: 0
Returning buffer pointer: 0x1f002dbbf48 (aligned: true)
Created staging buffer at: 0x1f002dbbf48
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a25000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(4025034992357741353), dst: vk.Buffer(15589100158980194763)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1efff479818, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479818, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479818 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbb888, alignment: 0
Returning buffer pointer: 0x1f002dbb888 (aligned: true)
Created staging buffer at: 0x1f002dbb888
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a0a000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(12905801405020771115), dst: vk.Buffer(170787141142446541)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5a28, size: 704, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5a28, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5a28 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbe08, alignment: 0
Returning buffer pointer: 0x1f002dbbe08 (aligned: true)
Created staging buffer at: 0x1f002dbbe08
Staging buffer cast successful
About to map memory for staging buffer - size: 704
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a26000
About to memcpy 704 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(14447758710837089069), dst: vk.Buffer(1025278100226703827)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,3.2e1,6.4e1] to [1.3e2,4.8e1,7.2e1]
Buffer handles - SDF: vk.Buffer(15589100158980194763), Params: vk.Buffer(16655718796899647951), Output: vk.Buffer(15344826058683711953)
generateWorldAdaptive called - offset: 0, max_workgroups: 11
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
getBufferDeviceAddress called for buffer: vk.Buffer(170787141142446541)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534177280
Using actual brush buffer with address: 0x238480000
Dispatching brush chunk: offset=0, size=11 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=11, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002dbba48, alignment: 0
Returning buffer pointer: 0x1f002dbba48 (aligned: true)
Submitting readback 399 at frame 413 (will be ready at frame 416)
Successfully queued 11 minichunks from this batch
Processing pending minichunk batch for chunk ChunkId(1, 0, 1) with 24 minichunks (available workspaces: 1)
Allocating workspace 1 (current_index: 1)
Available workspaces after allocation: 0/3
Processing 11 minichunks in workspace 1
Overall bounds: [64, 32, 120] to [128, 48, 128]
renderer_buffer_write called - buffer: anyopaque@1f002cf5c68, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5c68, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5c68 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbba88, alignment: 0
Returning buffer pointer: 0x1f002dbba88 (aligned: true)
Created staging buffer at: 0x1f002dbba88
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a2e000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(2889180107237233458), dst: vk.Buffer(17645821321130541531)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5768, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5768, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5768 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbb08, alignment: 0
Returning buffer pointer: 0x1f002dbbb08 (aligned: true)
Created staging buffer at: 0x1f002dbbb08
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b15000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(9335847678329754420), dst: vk.Buffer(14073195781184029143)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5928, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5928, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5928 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbc08, alignment: 0
Returning buffer pointer: 0x1f002dbbc08 (aligned: true)
Created staging buffer at: 0x1f002dbbc08
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b16000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(15773059449423401782), dst: vk.Buffer(16705046187056562649)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf57e8, size: 704, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf57e8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf57e8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1efff479858, alignment: 0
Returning buffer pointer: 0x1efff479858 (aligned: true)
Created staging buffer at: 0x1efff479858
Staging buffer cast successful
About to map memory for staging buffer - size: 704
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a21000
About to memcpy 704 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(16122099415660892984), dst: vk.Buffer(18334454249699672543)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,3.2e1,1.2e2] to [1.3e2,4.8e1,1.3e2]
Buffer handles - SDF: vk.Buffer(14073195781184029143), Params: vk.Buffer(17645821321130541531), Output: vk.Buffer(18233758775804690909)
generateWorldAdaptive called - offset: 0, max_workgroups: 11
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
getBufferDeviceAddress called for buffer: vk.Buffer(16705046187056562649)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545711616
Using actual brush buffer with address: 0x238f80000
Dispatching brush chunk: offset=0, size=11 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=11, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1efff479a58, alignment: 0
Returning buffer pointer: 0x1efff479a58 (aligned: true)
Submitting readback 400 at frame 413 (will be ready at frame 416)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 1: No available workspace in ring buffer
Re-queuing 13 remaining minichunks from batch
Successfully queued 11 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 44.3ms (target: 10.0ms), Workgroups: 12 -> 12 (PID: 16)
DeferredReadbackManager: advanced to frame 414
Processing readbacks: 3 pending, completed_frame: 414, frames_in_flight: 3
Checking readback 398: submitted frame 411, current frame 414, 3 frames elapsed (need 3)
Readback 398 ready (submitted frame 411, current frame 414)
Checking readback 399: submitted frame 413, current frame 414, 1 frames elapsed (need 3)
Processing 1 completed readbacks
Minichunk batch readback complete for workspace 2 (8 minichunks, 16384 bytes)
Adding minichunk at offset (0, 56, 56) with 512 non-empty voxels
Minichunk 100/512 completed
Adding minichunk at offset (8, 56, 56) with 512 non-empty voxels
Minichunk 101/512 completed
Adding minichunk at offset (16, 56, 56) with 512 non-empty voxels
Minichunk 102/512 completed
Adding minichunk at offset (24, 56, 56) with 512 non-empty voxels
Minichunk 103/512 completed
Adding minichunk at offset (32, 56, 56) with 512 non-empty voxels
Minichunk 104/512 completed
Adding minichunk at offset (40, 56, 56) with 512 non-empty voxels
Minichunk 105/512 completed
Adding minichunk at offset (48, 56, 56) with 512 non-empty voxels
Minichunk 106/512 completed
Adding minichunk at offset (56, 56, 56) with 512 non-empty voxels
Minichunk 107/512 completed
Releasing workspace 2 (was in_use: true)
Available workspaces after release: 1/3
Force processing old readbacks: 2 pending, max age: 3 frames, current frame: 414
Velocity: [0.00, 0.00, 9926.23] speed=9926.23 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -66168.91] | Torque: [279550.906, 674895.625, 214507.000]
  Angular vel: current=[-3298.933, -7964.328, -2531.361] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.044 units: [5.00, 5.00, 242.54] -> [5.00, 5.00, 242.50]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-3298.34, -7962.90, -2530.91] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 0
Command buffer begun in frame_begin
Processing readbacks: 2 pending, completed_frame: 414, frames_in_flight: 3
Checking readback 399: submitted frame 413, current frame 414, 1 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 17 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(1, 0, 1) with 10 minichunks (available workspaces: 1)
Allocating workspace 2 (current_index: 2)
Available workspaces after allocation: 0/3
Processing 10 minichunks in workspace 2
Overall bounds: [64, 48, 80] to [128, 64, 88]
renderer_buffer_write called - buffer: anyopaque@1f002cf5be8, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5be8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5be8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1efff479ad8, alignment: 0
Returning buffer pointer: 0x1efff479ad8 (aligned: true)
Created staging buffer at: 0x1efff479ad8
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a65000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(10679531151820854077), dst: vk.Buffer(10094846052541661671)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5ba8, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ba8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5ba8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1efff479b58, alignment: 0
Returning buffer pointer: 0x1efff479b58 (aligned: true)
Created staging buffer at: 0x1efff479b58
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b0f000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(1403736599576974143), dst: vk.Buffer(16700742698545447395)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5ca8, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ca8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5ca8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1efff479bd8, alignment: 0
Returning buffer pointer: 0x1efff479bd8 (aligned: true)
Created staging buffer at: 0x1efff479bd8
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a08000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(14889240117179847489), dst: vk.Buffer(17497165150031970789)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf58a8, size: 640, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf58a8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf58a8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1efff479c18, alignment: 0
Returning buffer pointer: 0x1efff479c18 (aligned: true)
Created staging buffer at: 0x1efff479c18
Staging buffer cast successful
About to map memory for staging buffer - size: 640
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a1b000
About to memcpy 640 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(16147294724611380035), dst: vk.Buffer(14063823544068866539)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,4.8e1,8.0e1] to [1.3e2,6.4e1,8.8e1]
Buffer handles - SDF: vk.Buffer(16700742698545447395), Params: vk.Buffer(10094846052541661671), Output: vk.Buffer(17114293211007812073)
generateWorldAdaptive called - offset: 0, max_workgroups: 10
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
getBufferDeviceAddress called for buffer: vk.Buffer(17497165150031970789)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557245952
Using actual brush buffer with address: 0x239a80000
Dispatching brush chunk: offset=0, size=10 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=10, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002dbbac8, alignment: 0
Returning buffer pointer: 0x1f002dbbac8 (aligned: true)
Submitting readback 401 at frame 414 (will be ready at frame 417)
Successfully queued 10 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 40.9ms (target: 10.0ms), Workgroups: 11 -> 11 (PID: 4)
DeferredReadbackManager: advanced to frame 415
Processing readbacks: 3 pending, completed_frame: 415, frames_in_flight: 3
Checking readback 399: submitted frame 413, current frame 415, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 3 pending, max age: 3 frames, current frame: 415
Velocity: [0.00, 0.00, 4425.78] speed=4425.78 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -34427.45] | Torque: [178065.062, 429887.125, 136634.156]
  Angular vel: current=[-4978.005, -12017.970, -3819.758] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 242.50] -> [5.00, 5.00, 242.45]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-4977.11, -12015.81, -3819.07] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 1
Command buffer begun in frame_begin
Processing readbacks: 3 pending, completed_frame: 415, frames_in_flight: 3
Checking readback 399: submitted frame 413, current frame 415, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 16 batches waiting, 1 active chunks
No available workspaces, stopping batch processing
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 36.0ms (target: 10.0ms), Workgroups: 10 -> 10 (PID: 4)
DeferredReadbackManager: advanced to frame 416
Processing readbacks: 3 pending, completed_frame: 416, frames_in_flight: 3
Checking readback 399: submitted frame 413, current frame 416, 3 frames elapsed (need 3)
Readback 399 ready (submitted frame 413, current frame 416)
Checking readback 400: submitted frame 413, current frame 416, 3 frames elapsed (need 3)
Readback 400 ready (submitted frame 413, current frame 416)
Checking readback 401: submitted frame 414, current frame 416, 2 frames elapsed (need 3)
Processing 2 completed readbacks
Minichunk batch readback complete for workspace 0 (11 minichunks, 22528 bytes)
Adding minichunk at offset (40, 32, 0) with 512 non-empty voxels
Minichunk 108/512 completed
Adding minichunk at offset (48, 32, 0) with 512 non-empty voxels
Minichunk 109/512 completed
Adding minichunk at offset (56, 32, 0) with 512 non-empty voxels
Minichunk 110/512 completed
Adding minichunk at offset (0, 40, 0) with 512 non-empty voxels
Minichunk 111/512 completed
Adding minichunk at offset (8, 40, 0) with 512 non-empty voxels
Minichunk 112/512 completed
Adding minichunk at offset (16, 40, 0) with 512 non-empty voxels
Minichunk 113/512 completed
Adding minichunk at offset (24, 40, 0) with 512 non-empty voxels
Minichunk 114/512 completed
Adding minichunk at offset (32, 40, 0) with 512 non-empty voxels
Minichunk 115/512 completed
Adding minichunk at offset (40, 40, 0) with 512 non-empty voxels
Minichunk 116/512 completed
Adding minichunk at offset (48, 40, 0) with 512 non-empty voxels
Minichunk 117/512 completed
Adding minichunk at offset (56, 40, 0) with 512 non-empty voxels
Minichunk 118/512 completed
Releasing workspace 0 (was in_use: true)
Available workspaces after release: 1/3
Minichunk batch readback complete for workspace 1 (11 minichunks, 22528 bytes)
Adding minichunk at offset (0, 32, 56) with 512 non-empty voxels
Minichunk 119/512 completed
Adding minichunk at offset (8, 32, 56) with 512 non-empty voxels
Minichunk 120/512 completed
Adding minichunk at offset (16, 32, 56) with 512 non-empty voxels
Minichunk 121/512 completed
Adding minichunk at offset (24, 32, 56) with 512 non-empty voxels
Minichunk 122/512 completed
Adding minichunk at offset (32, 32, 56) with 512 non-empty voxels
Minichunk 123/512 completed
Adding minichunk at offset (40, 32, 56) with 512 non-empty voxels
Minichunk 124/512 completed
Adding minichunk at offset (48, 32, 56) with 512 non-empty voxels
Minichunk 125/512 completed
Adding minichunk at offset (56, 32, 56) with 512 non-empty voxels
Minichunk 126/512 completed
Adding minichunk at offset (0, 40, 56) with 512 non-empty voxels
Minichunk 127/512 completed
Adding minichunk at offset (8, 40, 56) with 512 non-empty voxels
Minichunk 128/512 completed
Adding minichunk at offset (16, 40, 56) with 512 non-empty voxels
Minichunk 129/512 completed
Releasing workspace 1 (was in_use: true)
Available workspaces after release: 2/3
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 416
Velocity: [0.00, 0.00, 6678.37] speed=6678.37 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -11515.19] | Torque: [134341.656, 324329.562, 103083.984]
  Angular vel: current=[-9143.454, -22074.254, -7016.021] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 242.45] -> [5.00, 5.00, 242.41]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-9141.82, -22070.31, -7014.77] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 416, frames_in_flight: 3
Checking readback 401: submitted frame 414, current frame 416, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 16 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(1, 0, 1) with 24 minichunks (available workspaces: 2)
Allocating workspace 0 (current_index: 0)
Available workspaces after allocation: 1/3
Processing 10 minichunks in workspace 0
Overall bounds: [64, 8, 120] to [128, 24, 128]
renderer_buffer_write called - buffer: anyopaque@1efff479918, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479918, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479918 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbba48, alignment: 0
Returning buffer pointer: 0x1f002dbba48 (aligned: true)
Created staging buffer at: 0x1f002dbba48
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a1c000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(138771561564869448), dst: vk.Buffer(16655718796899647951)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1efff479658, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479658, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479658 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbb988, alignment: 0
Returning buffer pointer: 0x1f002dbb988 (aligned: true)
Created staging buffer at: 0x1f002dbb988
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b0c000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(17944523446025196362), dst: vk.Buffer(15589100158980194763)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1efff479818, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479818, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479818 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbd88, alignment: 0
Returning buffer pointer: 0x1f002dbbd88 (aligned: true)
Created staging buffer at: 0x1f002dbbd88
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b12000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(18419307960061662028), dst: vk.Buffer(170787141142446541)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5a28, size: 640, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5a28, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5a28 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbb9c8, alignment: 0
Returning buffer pointer: 0x1f002dbb9c8 (aligned: true)
Created staging buffer at: 0x1f002dbb9c8
Staging buffer cast successful
About to map memory for staging buffer - size: 640
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b17000
About to memcpy 640 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(18181107561997013838), dst: vk.Buffer(1025278100226703827)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,8.0e0,1.2e2] to [1.3e2,2.4e1,1.3e2]
Buffer handles - SDF: vk.Buffer(15589100158980194763), Params: vk.Buffer(16655718796899647951), Output: vk.Buffer(15344826058683711953)
generateWorldAdaptive called - offset: 0, max_workgroups: 10
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
getBufferDeviceAddress called for buffer: vk.Buffer(170787141142446541)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534177280
Using actual brush buffer with address: 0x238480000
Dispatching brush chunk: offset=0, size=10 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=10, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002dbbd48, alignment: 0
Returning buffer pointer: 0x1f002dbbd48 (aligned: true)
Submitting readback 402 at frame 416 (will be ready at frame 419)
Allocating workspace 1 (current_index: 1)
Available workspaces after allocation: 0/3
Processing 10 minichunks in workspace 1
Overall bounds: [64, 16, 120] to [128, 32, 128]
renderer_buffer_write called - buffer: anyopaque@1f002cf5c68, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5c68, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5c68 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbc48, alignment: 0
Returning buffer pointer: 0x1f002dbbc48 (aligned: true)
Created staging buffer at: 0x1f002dbbc48
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a51000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(16958788181979829075), dst: vk.Buffer(17645821321130541531)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5768, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5768, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5768 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5558, alignment: 0
Returning buffer pointer: 0x1f002df5558 (aligned: true)
Created staging buffer at: 0x1f002df5558
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a4f000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(14754836915312137045), dst: vk.Buffer(14073195781184029143)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5928, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5928, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5928 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5718, alignment: 0
Returning buffer pointer: 0x1f002df5718 (aligned: true)
Created staging buffer at: 0x1f002df5718
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a52000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(16281871649316279127), dst: vk.Buffer(16705046187056562649)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf57e8, size: 640, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf57e8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf57e8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5298, alignment: 0
Returning buffer pointer: 0x1f002df5298 (aligned: true)
Created staging buffer at: 0x1f002df5298
Staging buffer cast successful
About to map memory for staging buffer - size: 640
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb18f7000
About to memcpy 640 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(9853332825942528857), dst: vk.Buffer(18334454249699672543)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,1.6e1,1.2e2] to [1.3e2,3.2e1,1.3e2]
Buffer handles - SDF: vk.Buffer(14073195781184029143), Params: vk.Buffer(17645821321130541531), Output: vk.Buffer(18233758775804690909)
generateWorldAdaptive called - offset: 0, max_workgroups: 10
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
getBufferDeviceAddress called for buffer: vk.Buffer(16705046187056562649)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545711616
Using actual brush buffer with address: 0x238f80000
Dispatching brush chunk: offset=0, size=10 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=10, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002df5758, alignment: 0
Returning buffer pointer: 0x1f002df5758 (aligned: true)
Submitting readback 403 at frame 416 (will be ready at frame 419)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 2: No available workspace in ring buffer
Re-queuing 4 remaining minichunks from batch
Successfully queued 20 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 40.0ms (target: 10.0ms), Workgroups: 11 -> 11 (PID: 16)
DeferredReadbackManager: advanced to frame 417
Processing readbacks: 3 pending, completed_frame: 417, frames_in_flight: 3
Checking readback 401: submitted frame 414, current frame 417, 3 frames elapsed (need 3)
Readback 401 ready (submitted frame 414, current frame 417)
Checking readback 402: submitted frame 416, current frame 417, 1 frames elapsed (need 3)
Processing 1 completed readbacks
Minichunk batch readback complete for workspace 2 (10 minichunks, 20480 bytes)
Adding minichunk at offset (48, 48, 16) with 512 non-empty voxels
Minichunk 130/512 completed
Adding minichunk at offset (56, 48, 16) with 512 non-empty voxels
Minichunk 131/512 completed
Adding minichunk at offset (0, 56, 16) with 512 non-empty voxels
Minichunk 132/512 completed
Adding minichunk at offset (8, 56, 16) with 512 non-empty voxels
Minichunk 133/512 completed
Adding minichunk at offset (16, 56, 16) with 512 non-empty voxels
Minichunk 134/512 completed
Adding minichunk at offset (24, 56, 16) with 512 non-empty voxels
Minichunk 135/512 completed
Adding minichunk at offset (32, 56, 16) with 512 non-empty voxels
Minichunk 136/512 completed
Adding minichunk at offset (40, 56, 16) with 512 non-empty voxels
Minichunk 137/512 completed
Adding minichunk at offset (48, 56, 16) with 512 non-empty voxels
Minichunk 138/512 completed
Adding minichunk at offset (56, 56, 16) with 512 non-empty voxels
Minichunk 139/512 completed
Releasing workspace 2 (was in_use: true)
Available workspaces after release: 1/3
Force processing old readbacks: 2 pending, max age: 3 frames, current frame: 417
Velocity: [0.00, 0.00, 12266.61] speed=12266.61 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -75305.45] | Torque: [311269.375, 751470.750, 238845.438]
  Angular vel: current=[-3065.988, -7401.949, -2352.615] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 242.41] -> [5.00, 5.00, 242.37]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-3065.44, -7400.64, -2352.20] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 0
Command buffer begun in frame_begin
Processing readbacks: 2 pending, completed_frame: 417, frames_in_flight: 3
Checking readback 402: submitted frame 416, current frame 417, 1 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 16 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(1, 0, 1) with 24 minichunks (available workspaces: 1)
Allocating workspace 2 (current_index: 2)
Available workspaces after allocation: 0/3
Processing 11 minichunks in workspace 2
Overall bounds: [64, 48, 112] to [128, 64, 120]
renderer_buffer_write called - buffer: anyopaque@1f002cf5be8, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5be8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5be8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5318, alignment: 0
Returning buffer pointer: 0x1f002df5318 (aligned: true)
Created staging buffer at: 0x1f002df5318
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a33000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(15645985592066446174), dst: vk.Buffer(10094846052541661671)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5ba8, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ba8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5ba8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5598, alignment: 0
Returning buffer pointer: 0x1f002df5598 (aligned: true)
Created staging buffer at: 0x1f002df5598
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a45000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(16102667746663207776), dst: vk.Buffer(16700742698545447395)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5ca8, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ca8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5ca8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df52d8, alignment: 0
Returning buffer pointer: 0x1f002df52d8 (aligned: true)
Created staging buffer at: 0x1f002df52d8
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a47000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(11112307724606509922), dst: vk.Buffer(17497165150031970789)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf58a8, size: 704, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf58a8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf58a8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df51d8, alignment: 0
Returning buffer pointer: 0x1f002df51d8 (aligned: true)
Created staging buffer at: 0x1f002df51d8
Staging buffer cast successful
About to map memory for staging buffer - size: 704
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a23000
About to memcpy 704 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(2660623525659808612), dst: vk.Buffer(14063823544068866539)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,4.8e1,1.1e2] to [1.3e2,6.4e1,1.2e2]
Buffer handles - SDF: vk.Buffer(16700742698545447395), Params: vk.Buffer(10094846052541661671), Output: vk.Buffer(17114293211007812073)
generateWorldAdaptive called - offset: 0, max_workgroups: 11
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
getBufferDeviceAddress called for buffer: vk.Buffer(17497165150031970789)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557245952
Using actual brush buffer with address: 0x239a80000
Dispatching brush chunk: offset=0, size=11 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=11, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002df5218, alignment: 0
Returning buffer pointer: 0x1f002df5218 (aligned: true)
Submitting readback 404 at frame 417 (will be ready at frame 420)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 1: No available workspace in ring buffer
Re-queuing 13 remaining minichunks from batch
Successfully queued 11 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 39.4ms (target: 10.0ms), Workgroups: 12 -> 12 (PID: 12)
DeferredReadbackManager: advanced to frame 418
Processing readbacks: 3 pending, completed_frame: 418, frames_in_flight: 3
Checking readback 402: submitted frame 416, current frame 418, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 3 pending, max age: 3 frames, current frame: 418
Velocity: [0.00, 0.00, 4113.23] speed=4113.23 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -32078.26] | Torque: [168687.688, 407248.156, 129438.633]
  Angular vel: current=[-4915.519, -11867.112, -3771.810] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 242.37] -> [5.00, 5.00, 242.33]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-4914.64, -11864.99, -3771.14] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 1
Command buffer begun in frame_begin
Processing readbacks: 3 pending, completed_frame: 418, frames_in_flight: 3
Checking readback 402: submitted frame 416, current frame 418, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 16 batches waiting, 1 active chunks
No available workspaces, stopping batch processing
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 35.3ms (target: 10.0ms), Workgroups: 11 -> 11 (PID: 4)
DeferredReadbackManager: advanced to frame 419
Processing readbacks: 3 pending, completed_frame: 419, frames_in_flight: 3
Checking readback 402: submitted frame 416, current frame 419, 3 frames elapsed (need 3)
Readback 402 ready (submitted frame 416, current frame 419)
Checking readback 403: submitted frame 416, current frame 419, 3 frames elapsed (need 3)
Readback 403 ready (submitted frame 416, current frame 419)
Checking readback 404: submitted frame 417, current frame 419, 2 frames elapsed (need 3)
Processing 2 completed readbacks
Minichunk batch readback complete for workspace 0 (10 minichunks, 20480 bytes)
Adding minichunk at offset (0, 8, 56) with 512 non-empty voxels
Minichunk 140/512 completed
Adding minichunk at offset (8, 8, 56) with 512 non-empty voxels
Minichunk 141/512 completed
Adding minichunk at offset (16, 8, 56) with 512 non-empty voxels
Minichunk 142/512 completed
Adding minichunk at offset (24, 8, 56) with 512 non-empty voxels
Minichunk 143/512 completed
Adding minichunk at offset (32, 8, 56) with 512 non-empty voxels
Minichunk 144/512 completed
Adding minichunk at offset (40, 8, 56) with 512 non-empty voxels
Minichunk 145/512 completed
Adding minichunk at offset (48, 8, 56) with 512 non-empty voxels
Minichunk 146/512 completed
Adding minichunk at offset (56, 8, 56) with 512 non-empty voxels
Minichunk 147/512 completed
Adding minichunk at offset (0, 16, 56) with 512 non-empty voxels
Minichunk 148/512 completed
Adding minichunk at offset (8, 16, 56) with 512 non-empty voxels
Minichunk 149/512 completed
Releasing workspace 0 (was in_use: true)
Available workspaces after release: 1/3
Minichunk batch readback complete for workspace 1 (10 minichunks, 20480 bytes)
Adding minichunk at offset (16, 16, 56) with 512 non-empty voxels
Minichunk 150/512 completed
Adding minichunk at offset (24, 16, 56) with 512 non-empty voxels
Minichunk 151/512 completed
Adding minichunk at offset (32, 16, 56) with 512 non-empty voxels
Minichunk 152/512 completed
Adding minichunk at offset (40, 16, 56) with 512 non-empty voxels
Minichunk 153/512 completed
Adding minichunk at offset (48, 16, 56) with 512 non-empty voxels
Minichunk 154/512 completed
Adding minichunk at offset (56, 16, 56) with 512 non-empty voxels
Minichunk 155/512 completed
Adding minichunk at offset (0, 24, 56) with 512 non-empty voxels
Minichunk 156/512 completed
Adding minichunk at offset (8, 24, 56) with 512 non-empty voxels
Minichunk 157/512 completed
Adding minichunk at offset (16, 24, 56) with 512 non-empty voxels
Minichunk 158/512 completed
Adding minichunk at offset (24, 24, 56) with 512 non-empty voxels
Minichunk 159/512 completed
Releasing workspace 1 (was in_use: true)
Available workspaces after release: 2/3
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 419
Velocity: [0.00, 0.00, 6594.47] speed=6594.47 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -19489.79] | Torque: [159034.281, 383942.688, 122031.328]
  Angular vel: current=[-8641.065, -20861.379, -6630.523] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 242.33] -> [5.00, 5.00, 242.28]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-8639.53, -20857.67, -6629.34] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 419, frames_in_flight: 3
Checking readback 404: submitted frame 417, current frame 419, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 16 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(1, 0, 1) with 24 minichunks (available workspaces: 2)
Allocating workspace 0 (current_index: 0)
Available workspaces after allocation: 1/3
Processing 11 minichunks in workspace 0
Overall bounds: [64, 24, 112] to [128, 40, 120]
renderer_buffer_write called - buffer: anyopaque@1efff479918, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479918, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479918 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5758, alignment: 0
Returning buffer pointer: 0x1f002df5758 (aligned: true)
Created staging buffer at: 0x1f002df5758
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a53000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(14908043965038072681), dst: vk.Buffer(16655718796899647951)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1efff479658, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479658, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479658 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5398, alignment: 0
Returning buffer pointer: 0x1f002df5398 (aligned: true)
Created staging buffer at: 0x1f002df5398
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a19000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(12525144981926581099), dst: vk.Buffer(15589100158980194763)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1efff479818, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479818, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479818 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbf88, alignment: 0
Returning buffer pointer: 0x1f002dbbf88 (aligned: true)
Created staging buffer at: 0x1f002dbbf88
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a29000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(745502968492594029), dst: vk.Buffer(170787141142446541)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5a28, size: 704, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5a28, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5a28 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbac8, alignment: 0
Returning buffer pointer: 0x1f002dbbac8 (aligned: true)
Created staging buffer at: 0x1f002dbbac8
Staging buffer cast successful
About to map memory for staging buffer - size: 704
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a46000
About to memcpy 704 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(13213980220635222895), dst: vk.Buffer(1025278100226703827)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,2.4e1,1.1e2] to [1.3e2,4.0e1,1.2e2]
Buffer handles - SDF: vk.Buffer(15589100158980194763), Params: vk.Buffer(16655718796899647951), Output: vk.Buffer(15344826058683711953)
generateWorldAdaptive called - offset: 0, max_workgroups: 11
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
getBufferDeviceAddress called for buffer: vk.Buffer(170787141142446541)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534177280
Using actual brush buffer with address: 0x238480000
Dispatching brush chunk: offset=0, size=11 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=11, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002dbbcc8, alignment: 0
Returning buffer pointer: 0x1f002dbbcc8 (aligned: true)
Submitting readback 405 at frame 419 (will be ready at frame 422)
Allocating workspace 1 (current_index: 1)
Available workspaces after allocation: 0/3
Processing 11 minichunks in workspace 1
Overall bounds: [64, 32, 112] to [128, 48, 120]
renderer_buffer_write called - buffer: anyopaque@1f002cf5c68, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5c68, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5c68 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbe48, alignment: 0
Returning buffer pointer: 0x1f002dbbe48 (aligned: true)
Created staging buffer at: 0x1f002dbbe48
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a24000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(13788295825752855412), dst: vk.Buffer(17645821321130541531)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5768, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5768, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5768 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbbc8, alignment: 0
Returning buffer pointer: 0x1f002dbbbc8 (aligned: true)
Created staging buffer at: 0x1f002dbbbc8
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a3d000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(4041817937844114294), dst: vk.Buffer(14073195781184029143)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5928, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5928, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5928 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbf08, alignment: 0
Returning buffer pointer: 0x1f002dbbf08 (aligned: true)
Created staging buffer at: 0x1f002dbbf08
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a1d000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(12001796138802877304), dst: vk.Buffer(16705046187056562649)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf57e8, size: 704, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf57e8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf57e8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbb48, alignment: 0
Returning buffer pointer: 0x1f002dbbb48 (aligned: true)
Created staging buffer at: 0x1f002dbbb48
Staging buffer cast successful
About to map memory for staging buffer - size: 704
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a0b000
About to memcpy 704 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(4988141207591850874), dst: vk.Buffer(18334454249699672543)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,3.2e1,1.1e2] to [1.3e2,4.8e1,1.2e2]
Buffer handles - SDF: vk.Buffer(14073195781184029143), Params: vk.Buffer(17645821321130541531), Output: vk.Buffer(18233758775804690909)
generateWorldAdaptive called - offset: 0, max_workgroups: 11
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
getBufferDeviceAddress called for buffer: vk.Buffer(16705046187056562649)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545711616
Using actual brush buffer with address: 0x238f80000
Dispatching brush chunk: offset=0, size=11 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=11, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002dbbd08, alignment: 0
Returning buffer pointer: 0x1f002dbbd08 (aligned: true)
Submitting readback 406 at frame 419 (will be ready at frame 422)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 2: No available workspace in ring buffer
Re-queuing 2 remaining minichunks from batch
Successfully queued 22 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 39.6ms (target: 10.0ms), Workgroups: 12 -> 12 (PID: 16)
DeferredReadbackManager: advanced to frame 420
Processing readbacks: 3 pending, completed_frame: 420, frames_in_flight: 3
Checking readback 404: submitted frame 417, current frame 420, 3 frames elapsed (need 3)
Readback 404 ready (submitted frame 417, current frame 420)
Checking readback 405: submitted frame 419, current frame 420, 1 frames elapsed (need 3)
Processing 1 completed readbacks
Minichunk batch readback complete for workspace 2 (11 minichunks, 22528 bytes)
Adding minichunk at offset (0, 48, 48) with 512 non-empty voxels
Minichunk 160/512 completed
Adding minichunk at offset (8, 48, 48) with 512 non-empty voxels
Minichunk 161/512 completed
Adding minichunk at offset (16, 48, 48) with 512 non-empty voxels
Minichunk 162/512 completed
Adding minichunk at offset (24, 48, 48) with 512 non-empty voxels
Minichunk 163/512 completed
Adding minichunk at offset (32, 48, 48) with 512 non-empty voxels
Minichunk 164/512 completed
Adding minichunk at offset (40, 48, 48) with 512 non-empty voxels
Minichunk 165/512 completed
Adding minichunk at offset (48, 48, 48) with 512 non-empty voxels
Minichunk 166/512 completed
Adding minichunk at offset (56, 48, 48) with 512 non-empty voxels
Minichunk 167/512 completed
Adding minichunk at offset (0, 56, 48) with 512 non-empty voxels
Minichunk 168/512 completed
Adding minichunk at offset (8, 56, 48) with 512 non-empty voxels
Minichunk 169/512 completed
Adding minichunk at offset (16, 56, 48) with 512 non-empty voxels
Minichunk 170/512 completed
Releasing workspace 2 (was in_use: true)
Available workspaces after release: 1/3
Force processing old readbacks: 2 pending, max age: 3 frames, current frame: 420
Velocity: [0.00, 0.00, 11592.50] speed=11592.50 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -71987.72] | Torque: [299010.875, 721876.125, 229439.125]
  Angular vel: current=[-3076.136, -7426.449, -2360.402] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 242.28] -> [5.00, 5.00, 242.24]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-3075.59, -7425.14, -2359.99] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 0
Command buffer begun in frame_begin
Processing readbacks: 2 pending, completed_frame: 420, frames_in_flight: 3
Checking readback 405: submitted frame 419, current frame 420, 1 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 16 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(1, 0, 1) with 13 minichunks (available workspaces: 1)
Allocating workspace 2 (current_index: 2)
Available workspaces after allocation: 0/3
Processing 12 minichunks in workspace 2
Overall bounds: [64, 40, 120] to [128, 56, 128]
renderer_buffer_write called - buffer: anyopaque@1f002cf5be8, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5be8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5be8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbdc8, alignment: 0
Returning buffer pointer: 0x1f002dbbdc8 (aligned: true)
Created staging buffer at: 0x1f002dbbdc8
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a0c000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(3292673386840331135), dst: vk.Buffer(10094846052541661671)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5ba8, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ba8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5ba8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d842f8, alignment: 0
Returning buffer pointer: 0x1f002d842f8 (aligned: true)
Created staging buffer at: 0x1f002d842f8
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a13000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(10699277281144083329), dst: vk.Buffer(16700742698545447395)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5ca8, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ca8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5ca8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d84278, alignment: 0
Returning buffer pointer: 0x1f002d84278 (aligned: true)
Created staging buffer at: 0x1f002d84278
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a14000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(6287845315483538307), dst: vk.Buffer(17497165150031970789)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf58a8, size: 768, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf58a8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf58a8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d83e38, alignment: 0
Returning buffer pointer: 0x1f002d83e38 (aligned: true)
Created staging buffer at: 0x1f002d83e38
Staging buffer cast successful
About to map memory for staging buffer - size: 768
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a5f000
About to memcpy 768 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(6624060578094650245), dst: vk.Buffer(14063823544068866539)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,4.0e1,1.2e2] to [1.3e2,5.6e1,1.3e2]
Buffer handles - SDF: vk.Buffer(16700742698545447395), Params: vk.Buffer(10094846052541661671), Output: vk.Buffer(17114293211007812073)
generateWorldAdaptive called - offset: 0, max_workgroups: 12
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
getBufferDeviceAddress called for buffer: vk.Buffer(17497165150031970789)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557245952
Using actual brush buffer with address: 0x239a80000
Dispatching brush chunk: offset=0, size=12 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=12, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002d83fb8, alignment: 0
Returning buffer pointer: 0x1f002d83fb8 (aligned: true)
Submitting readback 407 at frame 420 (will be ready at frame 423)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 1: No available workspace in ring buffer
Re-queuing 1 remaining minichunks from batch
Successfully queued 12 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 39.0ms (target: 10.0ms), Workgroups: 12 -> 12 (PID: 12)
DeferredReadbackManager: advanced to frame 421
Processing readbacks: 3 pending, completed_frame: 421, frames_in_flight: 3
Checking readback 405: submitted frame 419, current frame 421, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 3 pending, max age: 3 frames, current frame: 421
Velocity: [0.00, 0.00, 4126.80] speed=4126.80 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -31788.03] | Torque: [168420.031, 406601.875, 129233.242]
  Angular vel: current=[-4996.772, -12063.275, -3834.158] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 242.24] -> [5.00, 5.00, 242.20]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-4995.88, -12061.13, -3833.48] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 1
Command buffer begun in frame_begin
Processing readbacks: 3 pending, completed_frame: 421, frames_in_flight: 3
Checking readback 405: submitted frame 419, current frame 421, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 16 batches waiting, 1 active chunks
No available workspaces, stopping batch processing
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 34.7ms (target: 10.0ms), Workgroups: 11 -> 11 (PID: 4)
DeferredReadbackManager: advanced to frame 422
Processing readbacks: 3 pending, completed_frame: 422, frames_in_flight: 3
Checking readback 405: submitted frame 419, current frame 422, 3 frames elapsed (need 3)
Readback 405 ready (submitted frame 419, current frame 422)
Checking readback 406: submitted frame 419, current frame 422, 3 frames elapsed (need 3)
Readback 406 ready (submitted frame 419, current frame 422)
Checking readback 407: submitted frame 420, current frame 422, 2 frames elapsed (need 3)
Processing 2 completed readbacks
Minichunk batch readback complete for workspace 0 (11 minichunks, 22528 bytes)
Adding minichunk at offset (0, 24, 48) with 512 non-empty voxels
Minichunk 171/512 completed
Adding minichunk at offset (8, 24, 48) with 512 non-empty voxels
Minichunk 172/512 completed
Adding minichunk at offset (16, 24, 48) with 512 non-empty voxels
Minichunk 173/512 completed
Adding minichunk at offset (24, 24, 48) with 512 non-empty voxels
Minichunk 174/512 completed
Adding minichunk at offset (32, 24, 48) with 512 non-empty voxels
Minichunk 175/512 completed
Adding minichunk at offset (40, 24, 48) with 512 non-empty voxels
Minichunk 176/512 completed
Adding minichunk at offset (48, 24, 48) with 512 non-empty voxels
Minichunk 177/512 completed
Adding minichunk at offset (56, 24, 48) with 512 non-empty voxels
Minichunk 178/512 completed
Adding minichunk at offset (0, 32, 48) with 512 non-empty voxels
Minichunk 179/512 completed
Adding minichunk at offset (8, 32, 48) with 512 non-empty voxels
Minichunk 180/512 completed
Adding minichunk at offset (16, 32, 48) with 512 non-empty voxels
Minichunk 181/512 completed
Releasing workspace 0 (was in_use: true)
Available workspaces after release: 1/3
Minichunk batch readback complete for workspace 1 (11 minichunks, 22528 bytes)
Adding minichunk at offset (24, 32, 48) with 512 non-empty voxels
Minichunk 182/512 completed
Adding minichunk at offset (32, 32, 48) with 512 non-empty voxels
Minichunk 183/512 completed
Adding minichunk at offset (40, 32, 48) with 512 non-empty voxels
Minichunk 184/512 completed
Adding minichunk at offset (48, 32, 48) with 512 non-empty voxels
Minichunk 185/512 completed
Adding minichunk at offset (56, 32, 48) with 512 non-empty voxels
Minichunk 186/512 completed
Adding minichunk at offset (0, 40, 48) with 512 non-empty voxels
Minichunk 187/512 completed
Adding minichunk at offset (8, 40, 48) with 512 non-empty voxels
Minichunk 188/512 completed
Adding minichunk at offset (16, 40, 48) with 512 non-empty voxels
Minichunk 189/512 completed
Adding minichunk at offset (24, 40, 48) with 512 non-empty voxels
Minichunk 190/512 completed
Adding minichunk at offset (32, 40, 48) with 512 non-empty voxels
Minichunk 191/512 completed
Adding minichunk at offset (40, 40, 48) with 512 non-empty voxels
Minichunk 192/512 completed
Releasing workspace 1 (was in_use: true)
Available workspaces after release: 2/3
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 422
Velocity: [0.00, 0.00, 6703.41] speed=6703.41 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -12358.73] | Torque: [137205.594, 331243.688, 105281.594]
  Angular vel: current=[-9115.424, -22006.582, -6994.512] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 242.20] -> [5.00, 5.00, 242.15]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-9113.81, -22002.69, -6993.27] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 422, frames_in_flight: 3
Checking readback 407: submitted frame 420, current frame 422, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 16 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(1, 0, 1) with 24 minichunks (available workspaces: 2)
Allocating workspace 0 (current_index: 0)
Available workspaces after allocation: 1/3
Processing 11 minichunks in workspace 0
Overall bounds: [64, 0, 112] to [128, 16, 120]
renderer_buffer_write called - buffer: anyopaque@1efff479918, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479918, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479918 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d840b8, alignment: 0
Returning buffer pointer: 0x1f002d840b8 (aligned: true)
Created staging buffer at: 0x1f002d840b8
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a1e000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(11237891743707829130), dst: vk.Buffer(16655718796899647951)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1efff479658, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479658, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479658 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d83bb8, alignment: 0
Returning buffer pointer: 0x1f002d83bb8 (aligned: true)
Created staging buffer at: 0x1f002d83bb8
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a2f000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(6966863014867768204), dst: vk.Buffer(15589100158980194763)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1efff479818, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479818, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479818 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d83cf8, alignment: 0
Returning buffer pointer: 0x1f002d83cf8 (aligned: true)
Created staging buffer at: 0x1f002d83cf8
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a30000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(5267108198279549838), dst: vk.Buffer(170787141142446541)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5a28, size: 704, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5a28, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5a28 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d83cb8, alignment: 0
Returning buffer pointer: 0x1f002d83cb8 (aligned: true)
Created staging buffer at: 0x1f002d83cb8
Staging buffer cast successful
About to map memory for staging buffer - size: 704
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a55000
About to memcpy 704 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(7895470953268777872), dst: vk.Buffer(1025278100226703827)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,0.0e0,1.1e2] to [1.3e2,1.6e1,1.2e2]
Buffer handles - SDF: vk.Buffer(15589100158980194763), Params: vk.Buffer(16655718796899647951), Output: vk.Buffer(15344826058683711953)
generateWorldAdaptive called - offset: 0, max_workgroups: 11
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
getBufferDeviceAddress called for buffer: vk.Buffer(170787141142446541)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534177280
Using actual brush buffer with address: 0x238480000
Dispatching brush chunk: offset=0, size=11 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=11, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002d83d38, alignment: 0
Returning buffer pointer: 0x1f002d83d38 (aligned: true)
Submitting readback 408 at frame 422 (will be ready at frame 425)
Allocating workspace 1 (current_index: 1)
Available workspaces after allocation: 0/3
Processing 11 minichunks in workspace 1
Overall bounds: [64, 8, 112] to [128, 24, 120]
renderer_buffer_write called - buffer: anyopaque@1f002cf5c68, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5c68, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5c68 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df55d8, alignment: 0
Returning buffer pointer: 0x1f002df55d8 (aligned: true)
Created staging buffer at: 0x1f002df55d8
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a56000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(8216241376044520341), dst: vk.Buffer(17645821321130541531)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5768, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5768, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5768 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5418, alignment: 0
Returning buffer pointer: 0x1f002df5418 (aligned: true)
Created staging buffer at: 0x1f002df5418
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a22000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(8402755931510674327), dst: vk.Buffer(14073195781184029143)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5928, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5928, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5928 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5518, alignment: 0
Returning buffer pointer: 0x1f002df5518 (aligned: true)
Created staging buffer at: 0x1f002df5518
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a60000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(8922422510192956313), dst: vk.Buffer(16705046187056562649)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf57e8, size: 704, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf57e8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf57e8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5698, alignment: 0
Returning buffer pointer: 0x1f002df5698 (aligned: true)
Created staging buffer at: 0x1f002df5698
Staging buffer cast successful
About to map memory for staging buffer - size: 704
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a61000
About to memcpy 704 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(9099578022683480987), dst: vk.Buffer(18334454249699672543)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,8.0e0,1.1e2] to [1.3e2,2.4e1,1.2e2]
Buffer handles - SDF: vk.Buffer(14073195781184029143), Params: vk.Buffer(17645821321130541531), Output: vk.Buffer(18233758775804690909)
generateWorldAdaptive called - offset: 0, max_workgroups: 11
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
getBufferDeviceAddress called for buffer: vk.Buffer(16705046187056562649)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545711616
Using actual brush buffer with address: 0x238f80000
Dispatching brush chunk: offset=0, size=11 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=11, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002df5118, alignment: 0
Returning buffer pointer: 0x1f002df5118 (aligned: true)
Submitting readback 409 at frame 422 (will be ready at frame 425)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 2: No available workspace in ring buffer
Re-queuing 2 remaining minichunks from batch
Successfully queued 22 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 39.6ms (target: 10.0ms), Workgroups: 12 -> 12 (PID: 16)
DeferredReadbackManager: advanced to frame 423
Processing readbacks: 3 pending, completed_frame: 423, frames_in_flight: 3
Checking readback 407: submitted frame 420, current frame 423, 3 frames elapsed (need 3)
Readback 407 ready (submitted frame 420, current frame 423)
Checking readback 408: submitted frame 422, current frame 423, 1 frames elapsed (need 3)
Processing 1 completed readbacks
Minichunk batch readback complete for workspace 2 (12 minichunks, 24576 bytes)
Adding minichunk at offset (24, 40, 56) with 512 non-empty voxels
Minichunk 193/512 completed
Adding minichunk at offset (32, 40, 56) with 512 non-empty voxels
Minichunk 194/512 completed
Adding minichunk at offset (40, 40, 56) with 512 non-empty voxels
Minichunk 195/512 completed
Adding minichunk at offset (48, 40, 56) with 512 non-empty voxels
Minichunk 196/512 completed
Adding minichunk at offset (56, 40, 56) with 512 non-empty voxels
Minichunk 197/512 completed
Adding minichunk at offset (0, 48, 56) with 512 non-empty voxels
Minichunk 198/512 completed
Adding minichunk at offset (8, 48, 56) with 512 non-empty voxels
Minichunk 199/512 completed
Adding minichunk at offset (16, 48, 56) with 512 non-empty voxels
Minichunk 200/512 completed
Adding minichunk at offset (24, 48, 56) with 512 non-empty voxels
Minichunk 201/512 completed
Adding minichunk at offset (32, 48, 56) with 512 non-empty voxels
Minichunk 202/512 completed
Adding minichunk at offset (40, 48, 56) with 512 non-empty voxels
Minichunk 203/512 completed
Adding minichunk at offset (48, 48, 56) with 512 non-empty voxels
Minichunk 204/512 completed
Releasing workspace 2 (was in_use: true)
Available workspaces after release: 1/3
Force processing old readbacks: 2 pending, max age: 3 frames, current frame: 423
Velocity: [0.00, 0.00, 12228.77] speed=12228.77 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -71720.72] | Torque: [296006.500, 714623.000, 227133.812]
  Angular vel: current=[-2874.908, -6940.643, -2205.995] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 242.15] -> [5.00, 5.00, 242.11]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-2874.40, -6939.42, -2205.61] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true

=== Camera State ===
Position: [5.00, 5.00, 242.11]
Rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°]
Mesh Generator: SimpleCube
==================
Controls:
  WASD/Left Stick: Move
  Mouse/Right Stick: Look
  Left Click/RT: Place voxel
  Right Click/LT: Remove voxel
  B/Circle: Toggle mesh generator
  Start/Menu: Save/Load world

Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 0
Command buffer begun in frame_begin
Processing readbacks: 2 pending, completed_frame: 423, frames_in_flight: 3
Checking readback 408: submitted frame 422, current frame 423, 1 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 16 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(1, 0, 1) with 4 minichunks (available workspaces: 1)
Allocating workspace 2 (current_index: 2)
Available workspaces after allocation: 0/3
Processing 4 minichunks in workspace 2
Overall bounds: [96, 24, 120] to [128, 32, 128]
renderer_buffer_write called - buffer: anyopaque@1f002cf5be8, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5be8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5be8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5098, alignment: 0
Returning buffer pointer: 0x1f002df5098 (aligned: true)
Created staging buffer at: 0x1f002df5098
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a40000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(7368425552052491168), dst: vk.Buffer(10094846052541661671)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5ba8, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ba8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5ba8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5198, alignment: 0
Returning buffer pointer: 0x1f002df5198 (aligned: true)
Created staging buffer at: 0x1f002df5198
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a0f000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(5293446999322923938), dst: vk.Buffer(16700742698545447395)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5ca8, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ca8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5ca8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df53d8, alignment: 0
Returning buffer pointer: 0x1f002df53d8 (aligned: true)
Created staging buffer at: 0x1f002df53d8
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b0d000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(8195473800419087268), dst: vk.Buffer(17497165150031970789)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf58a8, size: 256, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf58a8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf58a8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5218, alignment: 0
Returning buffer pointer: 0x1f002df5218 (aligned: true)
Created staging buffer at: 0x1f002df5218
Staging buffer cast successful
About to map memory for staging buffer - size: 256
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a31000
About to memcpy 256 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(7927951626264908710), dst: vk.Buffer(14063823544068866539)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [9.6e1,2.4e1,1.2e2] to [1.3e2,3.2e1,1.3e2]
Buffer handles - SDF: vk.Buffer(16700742698545447395), Params: vk.Buffer(10094846052541661671), Output: vk.Buffer(17114293211007812073)
generateWorldAdaptive called - offset: 0, max_workgroups: 4
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 4x1x1 workgroups for 32x8x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=4, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
getBufferDeviceAddress called for buffer: vk.Buffer(17497165150031970789)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557245952
Using actual brush buffer with address: 0x239a80000
Dispatching brush chunk: offset=0, size=4 (of 4 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=4, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002df5258, alignment: 0
Returning buffer pointer: 0x1f002df5258 (aligned: true)
Submitting readback 410 at frame 423 (will be ready at frame 426)
Successfully queued 4 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 41.6ms (target: 10.0ms), Workgroups: 13 -> 13 (PID: 16)
DeferredReadbackManager: advanced to frame 424
Processing readbacks: 3 pending, completed_frame: 424, frames_in_flight: 3
Checking readback 408: submitted frame 422, current frame 424, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 3 pending, max age: 3 frames, current frame: 424
Velocity: [0.00, 0.00, 3856.81] speed=3856.81 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -32772.50] | Torque: [159381.469, 384780.938, 122297.719]
  Angular vel: current=[-3725.918, -8995.163, -2858.998] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 242.11] -> [5.00, 5.00, 242.07]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-3725.26, -8993.57, -2858.49] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 1
Command buffer begun in frame_begin
Processing readbacks: 3 pending, completed_frame: 424, frames_in_flight: 3
Checking readback 408: submitted frame 422, current frame 424, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 15 batches waiting, 1 active chunks
No available workspaces, stopping batch processing
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 37.7ms (target: 10.0ms), Workgroups: 12 -> 12 (PID: 4)
DeferredReadbackManager: advanced to frame 425
Processing readbacks: 3 pending, completed_frame: 425, frames_in_flight: 3
Checking readback 408: submitted frame 422, current frame 425, 3 frames elapsed (need 3)
Readback 408 ready (submitted frame 422, current frame 425)
Checking readback 409: submitted frame 422, current frame 425, 3 frames elapsed (need 3)
Readback 409 ready (submitted frame 422, current frame 425)
Checking readback 410: submitted frame 423, current frame 425, 2 frames elapsed (need 3)
Processing 2 completed readbacks
Minichunk batch readback complete for workspace 0 (11 minichunks, 22528 bytes)
Adding minichunk at offset (0, 0, 48) with 512 non-empty voxels
Minichunk 205/512 completed
Adding minichunk at offset (8, 0, 48) with 512 non-empty voxels
Minichunk 206/512 completed
Adding minichunk at offset (16, 0, 48) with 512 non-empty voxels
Minichunk 207/512 completed
Adding minichunk at offset (24, 0, 48) with 512 non-empty voxels
Minichunk 208/512 completed
Adding minichunk at offset (32, 0, 48) with 512 non-empty voxels
Minichunk 209/512 completed
Adding minichunk at offset (40, 0, 48) with 512 non-empty voxels
Minichunk 210/512 completed
Adding minichunk at offset (48, 0, 48) with 512 non-empty voxels
Minichunk 211/512 completed
Adding minichunk at offset (56, 0, 48) with 512 non-empty voxels
Minichunk 212/512 completed
Adding minichunk at offset (0, 8, 48) with 512 non-empty voxels
Minichunk 213/512 completed
Adding minichunk at offset (8, 8, 48) with 512 non-empty voxels
Minichunk 214/512 completed
Adding minichunk at offset (16, 8, 48) with 512 non-empty voxels
Minichunk 215/512 completed
Releasing workspace 0 (was in_use: true)
Available workspaces after release: 1/3
Minichunk batch readback complete for workspace 1 (11 minichunks, 22528 bytes)
Adding minichunk at offset (24, 8, 48) with 512 non-empty voxels
Minichunk 216/512 completed
Adding minichunk at offset (32, 8, 48) with 512 non-empty voxels
Minichunk 217/512 completed
Adding minichunk at offset (40, 8, 48) with 512 non-empty voxels
Minichunk 218/512 completed
Adding minichunk at offset (48, 8, 48) with 512 non-empty voxels
Minichunk 219/512 completed
Adding minichunk at offset (56, 8, 48) with 512 non-empty voxels
Minichunk 220/512 completed
Adding minichunk at offset (0, 16, 48) with 512 non-empty voxels
Minichunk 221/512 completed
Adding minichunk at offset (8, 16, 48) with 512 non-empty voxels
Minichunk 222/512 completed
Adding minichunk at offset (16, 16, 48) with 512 non-empty voxels
Minichunk 223/512 completed
Adding minichunk at offset (24, 16, 48) with 512 non-empty voxels
Minichunk 224/512 completed
Adding minichunk at offset (32, 16, 48) with 512 non-empty voxels
Minichunk 225/512 completed
Adding minichunk at offset (40, 16, 48) with 512 non-empty voxels
Minichunk 226/512 completed
Releasing workspace 1 (was in_use: true)
Available workspaces after release: 2/3
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 425
Velocity: [0.00, 0.00, 4998.44] speed=4998.44 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -10675.22] | Torque: [118176.750, 285303.812, 90680.203]
  Angular vel: current=[-7839.806, -18926.967, -6015.695] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 242.07] -> [5.00, 5.00, 242.02]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-7838.41, -18923.61, -6014.63] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 425, frames_in_flight: 3
Checking readback 410: submitted frame 423, current frame 425, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 15 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(1, 0, 1) with 13 minichunks (available workspaces: 2)
Allocating workspace 0 (current_index: 0)
Available workspaces after allocation: 1/3
Processing 12 minichunks in workspace 0
Overall bounds: [64, 0, 112] to [128, 64, 128]
renderer_buffer_write called - buffer: anyopaque@1efff479918, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479918, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479918 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5118, alignment: 0
Returning buffer pointer: 0x1f002df5118 (aligned: true)
Created staging buffer at: 0x1f002df5118
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b0e000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(6268451029881197483), dst: vk.Buffer(16655718796899647951)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1efff479658, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479658, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479658 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5618, alignment: 0
Returning buffer pointer: 0x1f002df5618 (aligned: true)
Created staging buffer at: 0x1f002df5618
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a54000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(7147297271032320941), dst: vk.Buffer(15589100158980194763)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1efff479818, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479818, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479818 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df54d8, alignment: 0
Returning buffer pointer: 0x1f002df54d8 (aligned: true)
Created staging buffer at: 0x1f002df54d8
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a32000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(11271031024168997807), dst: vk.Buffer(170787141142446541)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5a28, size: 768, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5a28, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5a28 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c688, alignment: 0
Returning buffer pointer: 0x1f002d9c688 (aligned: true)
Created staging buffer at: 0x1f002d9c688
Staging buffer cast successful
About to map memory for staging buffer - size: 768
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a62000
About to memcpy 768 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(6511581638084793265), dst: vk.Buffer(1025278100226703827)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,0.0e0,1.1e2] to [1.3e2,6.4e1,1.3e2]
Buffer handles - SDF: vk.Buffer(15589100158980194763), Params: vk.Buffer(16655718796899647951), Output: vk.Buffer(15344826058683711953)
generateWorldAdaptive called - offset: 0, max_workgroups: 12
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x8x2 workgroups for 64x64x16 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=8, z=2
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
getBufferDeviceAddress called for buffer: vk.Buffer(170787141142446541)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534177280
Using actual brush buffer with address: 0x238480000
Dispatching brush chunk: offset=0, size=12 (of 128 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=12, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002d9c748, alignment: 0
Returning buffer pointer: 0x1f002d9c748 (aligned: true)
Submitting readback 411 at frame 425 (will be ready at frame 428)
Allocating workspace 1 (current_index: 1)
Available workspaces after allocation: 0/3
Processing 1 minichunks in workspace 1
Overall bounds: [120, 0, 120] to [128, 8, 128]
renderer_buffer_write called - buffer: anyopaque@1f002cf5c68, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5c68, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5c68 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c248, alignment: 0
Returning buffer pointer: 0x1f002d9c248 (aligned: true)
Created staging buffer at: 0x1f002d9c248
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a48000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(6149012181267518390), dst: vk.Buffer(17645821321130541531)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5768, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5768, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5768 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c788, alignment: 0
Returning buffer pointer: 0x1f002d9c788 (aligned: true)
Created staging buffer at: 0x1f002d9c788
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a10000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(10511048587050226616), dst: vk.Buffer(14073195781184029143)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5928, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5928, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5928 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c7c8, alignment: 0
Returning buffer pointer: 0x1f002d9c7c8 (aligned: true)
Created staging buffer at: 0x1f002d9c7c8
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a15000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(2947409143532622778), dst: vk.Buffer(16705046187056562649)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf57e8, size: 64, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf57e8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf57e8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c408, alignment: 0
Returning buffer pointer: 0x1f002d9c408 (aligned: true)
Created staging buffer at: 0x1f002d9c408
Staging buffer cast successful
About to map memory for staging buffer - size: 64
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a16000
About to memcpy 64 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(4866450559164486588), dst: vk.Buffer(18334454249699672543)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [1.2e2,0.0e0,1.2e2] to [1.3e2,8.0e0,1.3e2]
Buffer handles - SDF: vk.Buffer(14073195781184029143), Params: vk.Buffer(17645821321130541531), Output: vk.Buffer(18233758775804690909)
generateWorldAdaptive called - offset: 0, max_workgroups: 1
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 1x1x1 workgroups for 8x8x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
getBufferDeviceAddress called for buffer: vk.Buffer(16705046187056562649)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545711616
Using actual brush buffer with address: 0x238f80000
Dispatching brush chunk: offset=0, size=1 (of 1 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002cf5968, alignment: 0
Returning buffer pointer: 0x1f002cf5968 (aligned: true)
Submitting readback 412 at frame 425 (will be ready at frame 428)
Successfully queued 13 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 46.0ms (target: 10.0ms), Workgroups: 13 -> 13 (PID: 16)
DeferredReadbackManager: advanced to frame 426
Processing readbacks: 3 pending, completed_frame: 426, frames_in_flight: 3
Checking readback 410: submitted frame 423, current frame 426, 3 frames elapsed (need 3)
Readback 410 ready (submitted frame 423, current frame 426)
Checking readback 411: submitted frame 425, current frame 426, 1 frames elapsed (need 3)
Processing 1 completed readbacks
Minichunk batch readback complete for workspace 2 (4 minichunks, 8192 bytes)
Adding minichunk at offset (32, 24, 56) with 512 non-empty voxels
Minichunk 227/512 completed
Adding minichunk at offset (40, 24, 56) with 512 non-empty voxels
Minichunk 228/512 completed
Adding minichunk at offset (48, 24, 56) with 512 non-empty voxels
Minichunk 229/512 completed
Adding minichunk at offset (56, 24, 56) with 512 non-empty voxels
Minichunk 230/512 completed
Releasing workspace 2 (was in_use: true)
Available workspaces after release: 1/3
Force processing old readbacks: 2 pending, max age: 3 frames, current frame: 426
Velocity: [0.00, 0.00, 10517.33] speed=10517.33 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -52326.96] | Torque: [217228.344, 524435.625, 166685.188]
  Angular vel: current=[-2223.689, -5368.461, -1706.297] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.044 units: [5.00, 5.00, 242.02] -> [5.00, 5.00, 241.98]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-2223.30, -5367.51, -1706.00] target: [0.00, 0.00, 0.00]

Region Loading Status:
  Camera region: RegionId(0, 0, 0)
  View distance: 1 regions
  Loaded regions: 2
  Pending generations: 1
  Active chunks: 8
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 0
Command buffer begun in frame_begin
Processing readbacks: 2 pending, completed_frame: 426, frames_in_flight: 3
Checking readback 411: submitted frame 425, current frame 426, 1 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 14 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(1, 0, 1) with 2 minichunks (available workspaces: 1)
Allocating workspace 2 (current_index: 2)
Available workspaces after allocation: 0/3
Processing 2 minichunks in workspace 2
Overall bounds: [112, 40, 112] to [128, 48, 120]
renderer_buffer_write called - buffer: anyopaque@1f002cf5be8, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5be8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5be8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002cf5828, alignment: 0
Returning buffer pointer: 0x1f002cf5828 (aligned: true)
Created staging buffer at: 0x1f002cf5828
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a41000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(11750381809995617217), dst: vk.Buffer(10094846052541661671)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5ba8, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ba8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5ba8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002cf5d28, alignment: 0
Returning buffer pointer: 0x1f002cf5d28 (aligned: true)
Created staging buffer at: 0x1f002cf5d28
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a5d000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(4578801824663868355), dst: vk.Buffer(16700742698545447395)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5ca8, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ca8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5ca8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002cf5668, alignment: 0
Returning buffer pointer: 0x1f002cf5668 (aligned: true)
Created staging buffer at: 0x1f002cf5668
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b1b000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(13563472086151730117), dst: vk.Buffer(17497165150031970789)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf58a8, size: 128, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf58a8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf58a8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002cf5d68, alignment: 0
Returning buffer pointer: 0x1f002cf5d68 (aligned: true)
Created staging buffer at: 0x1f002cf5d68
Staging buffer cast successful
About to map memory for staging buffer - size: 128
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a57000
About to memcpy 128 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(13110506280856851399), dst: vk.Buffer(14063823544068866539)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [1.1e2,4.0e1,1.1e2] to [1.3e2,4.8e1,1.2e2]
Buffer handles - SDF: vk.Buffer(16700742698545447395), Params: vk.Buffer(10094846052541661671), Output: vk.Buffer(17114293211007812073)
generateWorldAdaptive called - offset: 0, max_workgroups: 2
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 2x1x1 workgroups for 16x8x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=2, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
getBufferDeviceAddress called for buffer: vk.Buffer(17497165150031970789)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557245952
Using actual brush buffer with address: 0x239a80000
Dispatching brush chunk: offset=0, size=2 (of 2 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=2, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002cf56a8, alignment: 0
Returning buffer pointer: 0x1f002cf56a8 (aligned: true)
Submitting readback 413 at frame 426 (will be ready at frame 429)
Successfully queued 2 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 46.0ms (target: 10.0ms), Workgroups: 14 -> 14 (PID: 16)
DeferredReadbackManager: advanced to frame 427
Processing readbacks: 3 pending, completed_frame: 427, frames_in_flight: 3
Checking readback 411: submitted frame 425, current frame 427, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 3 pending, max age: 3 frames, current frame: 427
Velocity: [0.00, 0.00, 2983.12] speed=2983.12 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -26164.66] | Torque: [139504.516, 336793.688, 107045.586]
  Angular vel: current=[-4200.438, -10140.756, -3223.110] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.044 units: [5.00, 5.00, 241.98] -> [5.00, 5.00, 241.94]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-4199.68, -10138.92, -3222.53] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 1
Command buffer begun in frame_begin
Processing readbacks: 3 pending, completed_frame: 427, frames_in_flight: 3
Checking readback 411: submitted frame 425, current frame 427, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 13 batches waiting, 1 active chunks
No available workspaces, stopping batch processing
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 41.4ms (target: 10.0ms), Workgroups: 13 -> 13 (PID: 4)
DeferredReadbackManager: advanced to frame 428
Processing readbacks: 3 pending, completed_frame: 428, frames_in_flight: 3
Checking readback 411: submitted frame 425, current frame 428, 3 frames elapsed (need 3)
Readback 411 ready (submitted frame 425, current frame 428)
Checking readback 412: submitted frame 425, current frame 428, 3 frames elapsed (need 3)
Readback 412 ready (submitted frame 425, current frame 428)
Checking readback 413: submitted frame 426, current frame 428, 2 frames elapsed (need 3)
Processing 2 completed readbacks
Minichunk batch readback complete for workspace 0 (12 minichunks, 24576 bytes)
Adding minichunk at offset (24, 56, 48) with 512 non-empty voxels
Minichunk 231/512 completed
Adding minichunk at offset (32, 56, 48) with 512 non-empty voxels
Minichunk 232/512 completed
Adding minichunk at offset (40, 56, 48) with 512 non-empty voxels
Minichunk 233/512 completed
Adding minichunk at offset (48, 56, 48) with 512 non-empty voxels
Minichunk 234/512 completed
Adding minichunk at offset (56, 56, 48) with 512 non-empty voxels
Minichunk 235/512 completed
Adding minichunk at offset (0, 0, 56) with 512 non-empty voxels
Minichunk 236/512 completed
Adding minichunk at offset (8, 0, 56) with 512 non-empty voxels
Minichunk 237/512 completed
Adding minichunk at offset (16, 0, 56) with 512 non-empty voxels
Minichunk 238/512 completed
Adding minichunk at offset (24, 0, 56) with 512 non-empty voxels
Minichunk 239/512 completed
Adding minichunk at offset (32, 0, 56) with 512 non-empty voxels
Minichunk 240/512 completed
Adding minichunk at offset (40, 0, 56) with 512 non-empty voxels
Minichunk 241/512 completed
Adding minichunk at offset (48, 0, 56) with 512 non-empty voxels
Minichunk 242/512 completed
Releasing workspace 0 (was in_use: true)
Available workspaces after release: 1/3
Minichunk batch readback complete for workspace 1 (1 minichunks, 2048 bytes)
Adding minichunk at offset (56, 0, 56) with 512 non-empty voxels
Minichunk 243/512 completed
Releasing workspace 1 (was in_use: true)
Available workspaces after release: 2/3
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 428
Velocity: [0.00, 0.00, 5634.92] speed=5634.92 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -6979.23] | Torque: [111520.469, 269234.250, 85572.688]
  Angular vel: current=[-8551.434, -20644.990, -6561.747] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.044 units: [5.00, 5.00, 241.94] -> [5.00, 5.00, 241.89]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-8549.89, -20641.25, -6560.56] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 428, frames_in_flight: 3
Checking readback 413: submitted frame 426, current frame 428, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 13 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(1, 0, 1) with 1 minichunks (available workspaces: 2)
Allocating workspace 0 (current_index: 0)
Available workspaces after allocation: 1/3
Processing 1 minichunks in workspace 0
Overall bounds: [120, 48, 120] to [128, 56, 128]
renderer_buffer_write called - buffer: anyopaque@1efff479918, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479918, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479918 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002cf59a8, alignment: 0
Returning buffer pointer: 0x1f002cf59a8 (aligned: true)
Created staging buffer at: 0x1f002cf59a8
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a63000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(1006848086321927116), dst: vk.Buffer(16655718796899647951)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1efff479658, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479658, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479658 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002cf5968, alignment: 0
Returning buffer pointer: 0x1f002cf5968 (aligned: true)
Created staging buffer at: 0x1f002cf5968
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a1a000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(12592303152151139278), dst: vk.Buffer(15589100158980194763)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1efff479818, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479818, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479818 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002cf57a8, alignment: 0
Returning buffer pointer: 0x1f002cf57a8 (aligned: true)
Created staging buffer at: 0x1f002cf57a8
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a2a000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(13866186328976135120), dst: vk.Buffer(170787141142446541)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5a28, size: 64, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5a28, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5a28 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002cf59e8, alignment: 0
Returning buffer pointer: 0x1f002cf59e8 (aligned: true)
Created staging buffer at: 0x1f002cf59e8
Staging buffer cast successful
About to map memory for staging buffer - size: 64
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a3e000
About to memcpy 64 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(2816426522338923474), dst: vk.Buffer(1025278100226703827)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [1.2e2,4.8e1,1.2e2] to [1.3e2,5.6e1,1.3e2]
Buffer handles - SDF: vk.Buffer(15589100158980194763), Params: vk.Buffer(16655718796899647951), Output: vk.Buffer(15344826058683711953)
generateWorldAdaptive called - offset: 0, max_workgroups: 1
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 1x1x1 workgroups for 8x8x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
getBufferDeviceAddress called for buffer: vk.Buffer(170787141142446541)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534177280
Using actual brush buffer with address: 0x238480000
Dispatching brush chunk: offset=0, size=1 (of 1 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002cf5a68, alignment: 0
Returning buffer pointer: 0x1f002cf5a68 (aligned: true)
Submitting readback 414 at frame 428 (will be ready at frame 431)
Successfully queued 1 minichunks from this batch
Processing pending minichunk batch for chunk ChunkId(1, 0, 1) with 24 minichunks (available workspaces: 1)
Allocating workspace 1 (current_index: 1)
Available workspaces after allocation: 0/3
Processing 13 minichunks in workspace 1
Overall bounds: [64, 16, 104] to [128, 32, 112]
renderer_buffer_write called - buffer: anyopaque@1f002cf5c68, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5c68, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5c68 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d83f38, alignment: 0
Returning buffer pointer: 0x1f002d83f38 (aligned: true)
Created staging buffer at: 0x1f002d83f38
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a58000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(11505941683443340247), dst: vk.Buffer(17645821321130541531)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5768, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5768, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5768 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d83fb8, alignment: 0
Returning buffer pointer: 0x1f002d83fb8 (aligned: true)
Created staging buffer at: 0x1f002d83fb8
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b1c000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(15139579123615142873), dst: vk.Buffer(14073195781184029143)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5928, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5928, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5928 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d83d38, alignment: 0
Returning buffer pointer: 0x1f002d83d38 (aligned: true)
Created staging buffer at: 0x1f002d83d38
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a0d000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(15388928569585439707), dst: vk.Buffer(16705046187056562649)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf57e8, size: 832, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf57e8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf57e8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d84038, alignment: 0
Returning buffer pointer: 0x1f002d84038 (aligned: true)
Created staging buffer at: 0x1f002d84038
Staging buffer cast successful
About to map memory for staging buffer - size: 832
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a27000
About to memcpy 832 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(9595476458508129245), dst: vk.Buffer(18334454249699672543)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,1.6e1,1.0e2] to [1.3e2,3.2e1,1.1e2]
Buffer handles - SDF: vk.Buffer(14073195781184029143), Params: vk.Buffer(17645821321130541531), Output: vk.Buffer(18233758775804690909)
generateWorldAdaptive called - offset: 0, max_workgroups: 13
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
getBufferDeviceAddress called for buffer: vk.Buffer(16705046187056562649)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545711616
Using actual brush buffer with address: 0x238f80000
Dispatching brush chunk: offset=0, size=13 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=13, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002df5258, alignment: 0
Returning buffer pointer: 0x1f002df5258 (aligned: true)
Submitting readback 415 at frame 428 (will be ready at frame 431)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 1: No available workspace in ring buffer
Re-queuing 11 remaining minichunks from batch
Successfully queued 13 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 44.1ms (target: 10.0ms), Workgroups: 14 -> 14 (PID: 16)
DeferredReadbackManager: advanced to frame 429
Processing readbacks: 3 pending, completed_frame: 429, frames_in_flight: 3
Checking readback 413: submitted frame 426, current frame 429, 3 frames elapsed (need 3)
Readback 413 ready (submitted frame 426, current frame 429)
Checking readback 414: submitted frame 428, current frame 429, 1 frames elapsed (need 3)
Processing 1 completed readbacks
Minichunk batch readback complete for workspace 2 (2 minichunks, 4096 bytes)
Adding minichunk at offset (48, 40, 48) with 512 non-empty voxels
Minichunk 244/512 completed
Adding minichunk at offset (56, 40, 48) with 512 non-empty voxels
Minichunk 245/512 completed
Releasing workspace 2 (was in_use: true)
Available workspaces after release: 1/3
Force processing old readbacks: 2 pending, max age: 3 frames, current frame: 429
Velocity: [0.00, 0.00, 11471.79] speed=11471.79 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -75665.26] | Torque: [315450.312, 761564.500, 242053.594]
  Angular vel: current=[-3348.646, -8084.347, -2569.507] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.044 units: [5.00, 5.00, 241.89] -> [5.00, 5.00, 241.85]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-3348.04, -8082.89, -2569.04] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 0
Command buffer begun in frame_begin
Processing readbacks: 2 pending, completed_frame: 429, frames_in_flight: 3
Checking readback 414: submitted frame 428, current frame 429, 1 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 12 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(1, 0, 1) with 2 minichunks (available workspaces: 1)
Allocating workspace 2 (current_index: 2)
Available workspaces after allocation: 0/3
Processing 2 minichunks in workspace 2
Overall bounds: [112, 16, 112] to [128, 24, 120]
renderer_buffer_write called - buffer: anyopaque@1f002cf5be8, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5be8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5be8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5658, alignment: 0
Returning buffer pointer: 0x1f002df5658 (aligned: true)
Created staging buffer at: 0x1f002df5658
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a59000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(17051301090340901858), dst: vk.Buffer(10094846052541661671)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5ba8, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ba8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5ba8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5458, alignment: 0
Returning buffer pointer: 0x1f002df5458 (aligned: true)
Created staging buffer at: 0x1f002df5458
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b18000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(14000813831215911908), dst: vk.Buffer(16700742698545447395)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5ca8, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ca8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5ca8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df56d8, alignment: 0
Returning buffer pointer: 0x1f002df56d8 (aligned: true)
Created staging buffer at: 0x1f002df56d8
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a5e000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(17813530929226847206), dst: vk.Buffer(17497165150031970789)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf58a8, size: 128, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf58a8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf58a8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5498, alignment: 0
Returning buffer pointer: 0x1f002df5498 (aligned: true)
Created staging buffer at: 0x1f002df5498
Staging buffer cast successful
About to map memory for staging buffer - size: 128
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a11000
About to memcpy 128 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(17357416122630018024), dst: vk.Buffer(14063823544068866539)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [1.1e2,1.6e1,1.1e2] to [1.3e2,2.4e1,1.2e2]
Buffer handles - SDF: vk.Buffer(16700742698545447395), Params: vk.Buffer(10094846052541661671), Output: vk.Buffer(17114293211007812073)
generateWorldAdaptive called - offset: 0, max_workgroups: 2
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 2x1x1 workgroups for 16x8x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=2, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
getBufferDeviceAddress called for buffer: vk.Buffer(17497165150031970789)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557245952
Using actual brush buffer with address: 0x239a80000
Dispatching brush chunk: offset=0, size=2 (of 2 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=2, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002df50d8, alignment: 0
Returning buffer pointer: 0x1f002df50d8 (aligned: true)
Submitting readback 416 at frame 429 (will be ready at frame 432)
Successfully queued 2 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 43.2ms (target: 10.0ms), Workgroups: 13 -> 13 (PID: 12)
DeferredReadbackManager: advanced to frame 430
Processing readbacks: 3 pending, completed_frame: 430, frames_in_flight: 3
Checking readback 414: submitted frame 428, current frame 430, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 3 pending, max age: 3 frames, current frame: 430
Velocity: [0.00, 0.00, 4492.21] speed=4492.21 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -36137.47] | Torque: [181083.875, 437175.219, 138950.562]
  Angular vel: current=[-4641.894, -11206.524, -3561.851] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 241.85] -> [5.00, 5.00, 241.81]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-4641.06, -11204.50, -3561.21] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 1
Command buffer begun in frame_begin
Processing readbacks: 3 pending, completed_frame: 430, frames_in_flight: 3
Checking readback 414: submitted frame 428, current frame 430, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 11 batches waiting, 1 active chunks
No available workspaces, stopping batch processing
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 38.2ms (target: 10.0ms), Workgroups: 12 -> 12 (PID: 4)
DeferredReadbackManager: advanced to frame 431
Processing readbacks: 3 pending, completed_frame: 431, frames_in_flight: 3
Checking readback 414: submitted frame 428, current frame 431, 3 frames elapsed (need 3)
Readback 414 ready (submitted frame 428, current frame 431)
Checking readback 415: submitted frame 428, current frame 431, 3 frames elapsed (need 3)
Readback 415 ready (submitted frame 428, current frame 431)
Checking readback 416: submitted frame 429, current frame 431, 2 frames elapsed (need 3)
Processing 2 completed readbacks
Minichunk batch readback complete for workspace 0 (1 minichunks, 2048 bytes)
Adding minichunk at offset (56, 48, 56) with 512 non-empty voxels
Minichunk 246/512 completed
Releasing workspace 0 (was in_use: true)
Available workspaces after release: 1/3
Minichunk batch readback complete for workspace 1 (13 minichunks, 26624 bytes)
Adding minichunk at offset (0, 16, 40) with 512 non-empty voxels
Minichunk 247/512 completed
Adding minichunk at offset (8, 16, 40) with 512 non-empty voxels
Minichunk 248/512 completed
Adding minichunk at offset (16, 16, 40) with 512 non-empty voxels
Minichunk 249/512 completed
Adding minichunk at offset (24, 16, 40) with 512 non-empty voxels
Minichunk 250/512 completed
Adding minichunk at offset (32, 16, 40) with 512 non-empty voxels
Minichunk 251/512 completed
Adding minichunk at offset (40, 16, 40) with 512 non-empty voxels
Minichunk 252/512 completed
Adding minichunk at offset (48, 16, 40) with 512 non-empty voxels
Minichunk 253/512 completed
Adding minichunk at offset (56, 16, 40) with 512 non-empty voxels
Minichunk 254/512 completed
Adding minichunk at offset (0, 24, 40) with 512 non-empty voxels
Minichunk 255/512 completed
Adding minichunk at offset (8, 24, 40) with 512 non-empty voxels
Minichunk 256/512 completed
Adding minichunk at offset (16, 24, 40) with 512 non-empty voxels
Minichunk 257/512 completed
Adding minichunk at offset (24, 24, 40) with 512 non-empty voxels
Minichunk 258/512 completed
Adding minichunk at offset (32, 24, 40) with 512 non-empty voxels
Minichunk 259/512 completed
Releasing workspace 1 (was in_use: true)
Available workspaces after release: 2/3
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 431
Velocity: [0.00, 0.00, 6227.08] speed=6227.08 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -210.08] | Torque: [94166.156, 227337.438, 72256.281]
  Angular vel: current=[-9338.521, -22545.186, -7165.701] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 241.81] -> [5.00, 5.00, 241.76]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-9336.84, -22541.14, -7164.41] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 431, frames_in_flight: 3
Checking readback 416: submitted frame 429, current frame 431, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 11 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(1, 0, 1) with 24 minichunks (available workspaces: 2)
Allocating workspace 0 (current_index: 0)
Available workspaces after allocation: 1/3
Processing 12 minichunks in workspace 0
Overall bounds: [64, 0, 96] to [128, 64, 112]
renderer_buffer_write called - buffer: anyopaque@1efff479918, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479918, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479918 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5058, alignment: 0
Returning buffer pointer: 0x1f002df5058 (aligned: true)
Created staging buffer at: 0x1f002df5058
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a17000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(17363640457954857965), dst: vk.Buffer(16655718796899647951)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1efff479658, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479658, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479658 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5258, alignment: 0
Returning buffer pointer: 0x1f002df5258 (aligned: true)
Created staging buffer at: 0x1f002df5258
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a1f000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(17992718339205501935), dst: vk.Buffer(15589100158980194763)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1efff479818, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479818, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479818 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c488, alignment: 0
Returning buffer pointer: 0x1f002d9c488 (aligned: true)
Created staging buffer at: 0x1f002d9c488
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a64000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(363538126561350641), dst: vk.Buffer(170787141142446541)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5a28, size: 768, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5a28, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5a28 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c648, alignment: 0
Returning buffer pointer: 0x1f002d9c648 (aligned: true)
Created staging buffer at: 0x1f002d9c648
Staging buffer cast successful
About to map memory for staging buffer - size: 768
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a5a000
About to memcpy 768 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(17052279655689622515), dst: vk.Buffer(1025278100226703827)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,0.0e0,9.6e1] to [1.3e2,6.4e1,1.1e2]
Buffer handles - SDF: vk.Buffer(15589100158980194763), Params: vk.Buffer(16655718796899647951), Output: vk.Buffer(15344826058683711953)
generateWorldAdaptive called - offset: 0, max_workgroups: 12
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x8x2 workgroups for 64x64x16 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=8, z=2
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
getBufferDeviceAddress called for buffer: vk.Buffer(170787141142446541)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534177280
Using actual brush buffer with address: 0x238480000
Dispatching brush chunk: offset=0, size=12 (of 128 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=12, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002d9c208, alignment: 0
Returning buffer pointer: 0x1f002d9c208 (aligned: true)
Submitting readback 417 at frame 431 (will be ready at frame 434)
Allocating workspace 1 (current_index: 1)
Available workspaces after allocation: 0/3
Processing 12 minichunks in workspace 1
Overall bounds: [64, 0, 104] to [128, 16, 112]
renderer_buffer_write called - buffer: anyopaque@1f002cf5c68, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5c68, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5c68 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c708, alignment: 0
Returning buffer pointer: 0x1f002d9c708 (aligned: true)
Created staging buffer at: 0x1f002d9c708
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a18000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(14137499619222885368), dst: vk.Buffer(17645821321130541531)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5768, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5768, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5768 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c108, alignment: 0
Returning buffer pointer: 0x1f002d9c108 (aligned: true)
Created staging buffer at: 0x1f002d9c108
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a20000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(1722784087631991802), dst: vk.Buffer(14073195781184029143)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5928, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5928, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5928 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c748, alignment: 0
Returning buffer pointer: 0x1f002d9c748 (aligned: true)
Created staging buffer at: 0x1f002d9c748
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a37000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(10583275505878832124), dst: vk.Buffer(16705046187056562649)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf57e8, size: 768, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf57e8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf57e8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c288, alignment: 0
Returning buffer pointer: 0x1f002d9c288 (aligned: true)
Created staging buffer at: 0x1f002d9c288
Staging buffer cast successful
About to map memory for staging buffer - size: 768
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a39000
About to memcpy 768 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(15588377779840750590), dst: vk.Buffer(18334454249699672543)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,0.0e0,1.0e2] to [1.3e2,1.6e1,1.1e2]
Buffer handles - SDF: vk.Buffer(14073195781184029143), Params: vk.Buffer(17645821321130541531), Output: vk.Buffer(18233758775804690909)
generateWorldAdaptive called - offset: 0, max_workgroups: 12
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
getBufferDeviceAddress called for buffer: vk.Buffer(16705046187056562649)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545711616
Using actual brush buffer with address: 0x238f80000
Dispatching brush chunk: offset=0, size=12 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=12, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002d9c0c8, alignment: 0
Returning buffer pointer: 0x1f002d9c0c8 (aligned: true)
Submitting readback 418 at frame 431 (will be ready at frame 434)
Successfully queued 24 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 41.8ms (target: 10.0ms), Workgroups: 13 -> 13 (PID: 16)
DeferredReadbackManager: advanced to frame 432
Processing readbacks: 3 pending, completed_frame: 432, frames_in_flight: 3
Checking readback 416: submitted frame 429, current frame 432, 3 frames elapsed (need 3)
Readback 416 ready (submitted frame 429, current frame 432)
Checking readback 417: submitted frame 431, current frame 432, 1 frames elapsed (need 3)
Processing 1 completed readbacks
Minichunk batch readback complete for workspace 2 (2 minichunks, 4096 bytes)
Adding minichunk at offset (48, 16, 48) with 512 non-empty voxels
Minichunk 260/512 completed
Adding minichunk at offset (56, 16, 48) with 512 non-empty voxels
Minichunk 261/512 completed
Releasing workspace 2 (was in_use: true)
Available workspaces after release: 1/3
Force processing old readbacks: 2 pending, max age: 3 frames, current frame: 432
Velocity: [0.00, 0.00, 12527.56] speed=12527.56 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -77599.33] | Torque: [320291.188, 773251.312, 245768.094]
  Angular vel: current=[-3111.711, -7512.335, -2387.700] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 241.76] -> [5.00, 5.00, 241.72]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-3111.16, -7511.00, -2387.27] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 0
Command buffer begun in frame_begin
Processing readbacks: 2 pending, completed_frame: 432, frames_in_flight: 3
Checking readback 417: submitted frame 431, current frame 432, 1 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 10 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(1, 0, 1) with 24 minichunks (available workspaces: 1)
Allocating workspace 2 (current_index: 2)
Available workspaces after allocation: 0/3
Processing 13 minichunks in workspace 2
Overall bounds: [64, 32, 96] to [128, 48, 104]
renderer_buffer_write called - buffer: anyopaque@1f002cf5be8, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5be8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5be8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c548, alignment: 0
Returning buffer pointer: 0x1f002d9c548 (aligned: true)
Created staging buffer at: 0x1f002d9c548
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a66000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(15590738431305585667), dst: vk.Buffer(10094846052541661671)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5ba8, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ba8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5ba8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c808, alignment: 0
Returning buffer pointer: 0x1f002d9c808 (aligned: true)
Created staging buffer at: 0x1f002d9c808
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb18f6000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(9323260469214974981), dst: vk.Buffer(16700742698545447395)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5ca8, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ca8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5ca8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c348, alignment: 0
Returning buffer pointer: 0x1f002d9c348 (aligned: true)
Created staging buffer at: 0x1f002d9c348
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a0e000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(3065581354751104007), dst: vk.Buffer(17497165150031970789)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf58a8, size: 832, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf58a8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf58a8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c608, alignment: 0
Returning buffer pointer: 0x1f002d9c608 (aligned: true)
Created staging buffer at: 0x1f002d9c608
Staging buffer cast successful
About to map memory for staging buffer - size: 832
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a28000
About to memcpy 832 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(14983937755145311241), dst: vk.Buffer(14063823544068866539)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,3.2e1,9.6e1] to [1.3e2,4.8e1,1.0e2]
Buffer handles - SDF: vk.Buffer(16700742698545447395), Params: vk.Buffer(10094846052541661671), Output: vk.Buffer(17114293211007812073)
generateWorldAdaptive called - offset: 0, max_workgroups: 13
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
getBufferDeviceAddress called for buffer: vk.Buffer(17497165150031970789)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557245952
Using actual brush buffer with address: 0x239a80000
Dispatching brush chunk: offset=0, size=13 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=13, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002d84178, alignment: 0
Returning buffer pointer: 0x1f002d84178 (aligned: true)
Submitting readback 419 at frame 432 (will be ready at frame 435)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 1: No available workspace in ring buffer
Re-queuing 11 remaining minichunks from batch
Successfully queued 13 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 40.1ms (target: 10.0ms), Workgroups: 12 -> 12 (PID: 6)
DeferredReadbackManager: advanced to frame 433
Processing readbacks: 3 pending, completed_frame: 433, frames_in_flight: 3
Checking readback 417: submitted frame 431, current frame 433, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 3 pending, max age: 3 frames, current frame: 433
Velocity: [0.00, 0.00, 4174.32] speed=4174.32 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -30941.95] | Torque: [167472.891, 404315.375, 128506.492]
  Angular vel: current=[-5216.792, -12594.451, -4002.986] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 241.72] -> [5.00, 5.00, 241.68]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-5215.86, -12592.19, -4002.27] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 1
Command buffer begun in frame_begin
Processing readbacks: 3 pending, completed_frame: 433, frames_in_flight: 3
Checking readback 417: submitted frame 431, current frame 433, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 10 batches waiting, 1 active chunks
No available workspaces, stopping batch processing
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 35.3ms (target: 10.0ms), Workgroups: 11 -> 11 (PID: 4)
DeferredReadbackManager: advanced to frame 434
Processing readbacks: 3 pending, completed_frame: 434, frames_in_flight: 3
Checking readback 417: submitted frame 431, current frame 434, 3 frames elapsed (need 3)
Readback 417 ready (submitted frame 431, current frame 434)
Checking readback 418: submitted frame 431, current frame 434, 3 frames elapsed (need 3)
Readback 418 ready (submitted frame 431, current frame 434)
Checking readback 419: submitted frame 432, current frame 434, 2 frames elapsed (need 3)
Processing 2 completed readbacks
Minichunk batch readback complete for workspace 0 (12 minichunks, 24576 bytes)
Adding minichunk at offset (0, 56, 32) with 512 non-empty voxels
Minichunk 262/512 completed
Adding minichunk at offset (8, 56, 32) with 512 non-empty voxels
Minichunk 263/512 completed
Adding minichunk at offset (16, 56, 32) with 512 non-empty voxels
Minichunk 264/512 completed
Adding minichunk at offset (24, 56, 32) with 512 non-empty voxels
Minichunk 265/512 completed
Adding minichunk at offset (32, 56, 32) with 512 non-empty voxels
Minichunk 266/512 completed
Adding minichunk at offset (40, 56, 32) with 512 non-empty voxels
Minichunk 267/512 completed
Adding minichunk at offset (48, 56, 32) with 512 non-empty voxels
Minichunk 268/512 completed
Adding minichunk at offset (56, 56, 32) with 512 non-empty voxels
Minichunk 269/512 completed
Adding minichunk at offset (0, 0, 40) with 512 non-empty voxels
Minichunk 270/512 completed
Adding minichunk at offset (8, 0, 40) with 512 non-empty voxels
Minichunk 271/512 completed
Adding minichunk at offset (16, 0, 40) with 512 non-empty voxels
Minichunk 272/512 completed
Adding minichunk at offset (24, 0, 40) with 512 non-empty voxels
Minichunk 273/512 completed
Releasing workspace 0 (was in_use: true)
Available workspaces after release: 1/3
Minichunk batch readback complete for workspace 1 (12 minichunks, 24576 bytes)
Adding minichunk at offset (32, 0, 40) with 512 non-empty voxels
Minichunk 274/512 completed
Adding minichunk at offset (40, 0, 40) with 512 non-empty voxels
Minichunk 275/512 completed
Adding minichunk at offset (48, 0, 40) with 512 non-empty voxels
Minichunk 276/512 completed
Adding minichunk at offset (56, 0, 40) with 512 non-empty voxels
Minichunk 277/512 completed
Adding minichunk at offset (0, 8, 40) with 512 non-empty voxels
Minichunk 278/512 completed
Adding minichunk at offset (8, 8, 40) with 512 non-empty voxels
Minichunk 279/512 completed
Adding minichunk at offset (16, 8, 40) with 512 non-empty voxels
Minichunk 280/512 completed
Adding minichunk at offset (24, 8, 40) with 512 non-empty voxels
Minichunk 281/512 completed
Adding minichunk at offset (32, 8, 40) with 512 non-empty voxels
Minichunk 282/512 completed
Adding minichunk at offset (40, 8, 40) with 512 non-empty voxels
Minichunk 283/512 completed
Adding minichunk at offset (48, 8, 40) with 512 non-empty voxels
Minichunk 284/512 completed
Adding minichunk at offset (56, 8, 40) with 512 non-empty voxels
Minichunk 285/512 completed
Releasing workspace 1 (was in_use: true)
Available workspaces after release: 2/3
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 434
Velocity: [0.00, 0.00, 6998.24] speed=6998.24 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -19169.84] | Torque: [161293.938, 389398.188, 123765.250]
  Angular vel: current=[-8985.852, -21693.766, -6895.087] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 241.68] -> [5.00, 5.00, 241.63]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-8984.25, -21689.90, -6893.86] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 434, frames_in_flight: 3
Checking readback 419: submitted frame 432, current frame 434, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 10 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(1, 0, 1) with 11 minichunks (available workspaces: 2)
Allocating workspace 0 (current_index: 0)
Available workspaces after allocation: 1/3
Processing 11 minichunks in workspace 0
Overall bounds: [64, 24, 104] to [128, 40, 112]
renderer_buffer_write called - buffer: anyopaque@1efff479918, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479918, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479918 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d841f8, alignment: 0
Returning buffer pointer: 0x1f002d841f8 (aligned: true)
Created staging buffer at: 0x1f002d841f8
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a38000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(13225130368052499470), dst: vk.Buffer(16655718796899647951)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1efff479658, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479658, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479658 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d83ef8, alignment: 0
Returning buffer pointer: 0x1f002d83ef8 (aligned: true)
Created staging buffer at: 0x1f002d83ef8
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a50000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(3692621840955479056), dst: vk.Buffer(15589100158980194763)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1efff479818, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479818, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479818 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d83bf8, alignment: 0
Returning buffer pointer: 0x1f002d83bf8 (aligned: true)
Created staging buffer at: 0x1f002d83bf8
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a3b000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(13724638500551136274), dst: vk.Buffer(170787141142446541)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5a28, size: 704, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5a28, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5a28 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d842b8, alignment: 0
Returning buffer pointer: 0x1f002d842b8 (aligned: true)
Created staging buffer at: 0x1f002d842b8
Staging buffer cast successful
About to map memory for staging buffer - size: 704
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a35000
About to memcpy 704 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(11549956233414841364), dst: vk.Buffer(1025278100226703827)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,2.4e1,1.0e2] to [1.3e2,4.0e1,1.1e2]
Buffer handles - SDF: vk.Buffer(15589100158980194763), Params: vk.Buffer(16655718796899647951), Output: vk.Buffer(15344826058683711953)
generateWorldAdaptive called - offset: 0, max_workgroups: 11
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
getBufferDeviceAddress called for buffer: vk.Buffer(170787141142446541)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534177280
Using actual brush buffer with address: 0x238480000
Dispatching brush chunk: offset=0, size=11 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=11, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002d83f78, alignment: 0
Returning buffer pointer: 0x1f002d83f78 (aligned: true)
Submitting readback 420 at frame 434 (will be ready at frame 437)
Successfully queued 11 minichunks from this batch
Processing pending minichunk batch for chunk ChunkId(1, 0, 1) with 24 minichunks (available workspaces: 1)
Allocating workspace 1 (current_index: 1)
Available workspaces after allocation: 0/3
Processing 11 minichunks in workspace 1
Overall bounds: [64, 8, 96] to [128, 24, 104]
renderer_buffer_write called - buffer: anyopaque@1f002cf5c68, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5c68, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5c68 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c1c8, alignment: 0
Returning buffer pointer: 0x1f002d9c1c8 (aligned: true)
Created staging buffer at: 0x1f002d9c1c8
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a36000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(90446926012486681), dst: vk.Buffer(17645821321130541531)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5768, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5768, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5768 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c3c8, alignment: 0
Returning buffer pointer: 0x1f002d9c3c8 (aligned: true)
Created staging buffer at: 0x1f002d9c3c8
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a42000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(12171179203596653595), dst: vk.Buffer(14073195781184029143)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5928, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5928, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5928 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c0c8, alignment: 0
Returning buffer pointer: 0x1f002d9c0c8 (aligned: true)
Created staging buffer at: 0x1f002d9c0c8
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a43000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(5625621556701959197), dst: vk.Buffer(16705046187056562649)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf57e8, size: 704, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf57e8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf57e8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c208, alignment: 0
Returning buffer pointer: 0x1f002d9c208 (aligned: true)
Created staging buffer at: 0x1f002d9c208
Staging buffer cast successful
About to map memory for staging buffer - size: 704
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a44000
About to memcpy 704 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(901857920008852511), dst: vk.Buffer(18334454249699672543)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,8.0e0,9.6e1] to [1.3e2,2.4e1,1.0e2]
Buffer handles - SDF: vk.Buffer(14073195781184029143), Params: vk.Buffer(17645821321130541531), Output: vk.Buffer(18233758775804690909)
generateWorldAdaptive called - offset: 0, max_workgroups: 11
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
getBufferDeviceAddress called for buffer: vk.Buffer(16705046187056562649)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545711616
Using actual brush buffer with address: 0x238f80000
Dispatching brush chunk: offset=0, size=11 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=11, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002d9c2c8, alignment: 0
Returning buffer pointer: 0x1f002d9c2c8 (aligned: true)
Submitting readback 421 at frame 434 (will be ready at frame 437)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 1: No available workspace in ring buffer
Re-queuing 13 remaining minichunks from batch
Successfully queued 11 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 38.8ms (target: 10.0ms), Workgroups: 12 -> 12 (PID: 16)
DeferredReadbackManager: advanced to frame 435
Processing readbacks: 3 pending, completed_frame: 435, frames_in_flight: 3
Checking readback 419: submitted frame 432, current frame 435, 3 frames elapsed (need 3)
Readback 419 ready (submitted frame 432, current frame 435)
Checking readback 420: submitted frame 434, current frame 435, 1 frames elapsed (need 3)
Processing 1 completed readbacks
Minichunk batch readback complete for workspace 2 (13 minichunks, 26624 bytes)
Adding minichunk at offset (0, 32, 32) with 512 non-empty voxels
Minichunk 286/512 completed
Adding minichunk at offset (8, 32, 32) with 512 non-empty voxels
Minichunk 287/512 completed
Adding minichunk at offset (16, 32, 32) with 512 non-empty voxels
Minichunk 288/512 completed
Adding minichunk at offset (24, 32, 32) with 512 non-empty voxels
Minichunk 289/512 completed
Adding minichunk at offset (32, 32, 32) with 512 non-empty voxels
Minichunk 290/512 completed
Adding minichunk at offset (40, 32, 32) with 512 non-empty voxels
Minichunk 291/512 completed
Adding minichunk at offset (48, 32, 32) with 512 non-empty voxels
Minichunk 292/512 completed
Adding minichunk at offset (56, 32, 32) with 512 non-empty voxels
Minichunk 293/512 completed
Adding minichunk at offset (0, 40, 32) with 512 non-empty voxels
Minichunk 294/512 completed
Adding minichunk at offset (8, 40, 32) with 512 non-empty voxels
Minichunk 295/512 completed
Adding minichunk at offset (16, 40, 32) with 512 non-empty voxels
Minichunk 296/512 completed
Adding minichunk at offset (24, 40, 32) with 512 non-empty voxels
Minichunk 297/512 completed
Adding minichunk at offset (32, 40, 32) with 512 non-empty voxels
Minichunk 298/512 completed
Releasing workspace 2 (was in_use: true)
Available workspaces after release: 1/3
Force processing old readbacks: 2 pending, max age: 3 frames, current frame: 435
Velocity: [0.00, 0.00, 12054.35] speed=12054.35 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -76081.45] | Torque: [315207.812, 760979.000, 241867.500]
  Angular vel: current=[-3168.714, -7649.953, -2431.440] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 241.63] -> [5.00, 5.00, 241.59]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-3168.15, -7648.60, -2431.01] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 0
Command buffer begun in frame_begin
Processing readbacks: 2 pending, completed_frame: 435, frames_in_flight: 3
Checking readback 420: submitted frame 434, current frame 435, 1 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 9 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(1, 0, 1) with 24 minichunks (available workspaces: 1)
Allocating workspace 2 (current_index: 2)
Available workspaces after allocation: 0/3
Processing 12 minichunks in workspace 2
Overall bounds: [64, 48, 88] to [128, 64, 96]
renderer_buffer_write called - buffer: anyopaque@1f002cf5be8, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5be8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5be8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c448, alignment: 0
Returning buffer pointer: 0x1f002d9c448 (aligned: true)
Created staging buffer at: 0x1f002d9c448
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b1d000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(11176984297087177764), dst: vk.Buffer(10094846052541661671)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5ba8, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ba8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5ba8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbb88, alignment: 0
Returning buffer pointer: 0x1f002dbbb88 (aligned: true)
Created staging buffer at: 0x1f002dbbb88
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a3f000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(6671560579926201382), dst: vk.Buffer(16700742698545447395)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5ca8, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ca8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5ca8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbb948, alignment: 0
Returning buffer pointer: 0x1f002dbb948 (aligned: true)
Created staging buffer at: 0x1f002dbb948
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a12000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(2173034099206263848), dst: vk.Buffer(17497165150031970789)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf58a8, size: 768, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf58a8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf58a8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbba08, alignment: 0
Returning buffer pointer: 0x1f002dbba08 (aligned: true)
Created staging buffer at: 0x1f002dbba08
Staging buffer cast successful
About to map memory for staging buffer - size: 768
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a3c000
About to memcpy 768 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(11008584195688633386), dst: vk.Buffer(14063823544068866539)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,4.8e1,8.8e1] to [1.3e2,6.4e1,9.6e1]
Buffer handles - SDF: vk.Buffer(16700742698545447395), Params: vk.Buffer(10094846052541661671), Output: vk.Buffer(17114293211007812073)
generateWorldAdaptive called - offset: 0, max_workgroups: 12
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
getBufferDeviceAddress called for buffer: vk.Buffer(17497165150031970789)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557245952
Using actual brush buffer with address: 0x239a80000
Dispatching brush chunk: offset=0, size=12 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=12, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002dbbc88, alignment: 0
Returning buffer pointer: 0x1f002dbbc88 (aligned: true)
Submitting readback 422 at frame 435 (will be ready at frame 438)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 1: No available workspace in ring buffer
Re-queuing 12 remaining minichunks from batch
Successfully queued 12 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 38.3ms (target: 10.0ms), Workgroups: 12 -> 12 (PID: 12)
DeferredReadbackManager: advanced to frame 436
Processing readbacks: 3 pending, completed_frame: 436, frames_in_flight: 3
Checking readback 420: submitted frame 434, current frame 436, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 3 pending, max age: 3 frames, current frame: 436
Velocity: [0.00, 0.00, 4250.75] speed=4250.75 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -33504.43] | Torque: [173213.219, 418173.719, 132911.188]
  Angular vel: current=[-4835.771, -11674.585, -3710.618] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 241.59] -> [5.00, 5.00, 241.55]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-4834.91, -11672.50, -3709.96] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 1
Command buffer begun in frame_begin
Processing readbacks: 3 pending, completed_frame: 436, frames_in_flight: 3
Checking readback 420: submitted frame 434, current frame 436, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 9 batches waiting, 1 active chunks
No available workspaces, stopping batch processing
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 34.3ms (target: 10.0ms), Workgroups: 11 -> 11 (PID: 4)
DeferredReadbackManager: advanced to frame 437
Processing readbacks: 3 pending, completed_frame: 437, frames_in_flight: 3
Checking readback 420: submitted frame 434, current frame 437, 3 frames elapsed (need 3)
Readback 420 ready (submitted frame 434, current frame 437)
Checking readback 421: submitted frame 434, current frame 437, 3 frames elapsed (need 3)
Readback 421 ready (submitted frame 434, current frame 437)
Checking readback 422: submitted frame 435, current frame 437, 2 frames elapsed (need 3)
Processing 2 completed readbacks
Minichunk batch readback complete for workspace 0 (11 minichunks, 22528 bytes)
Adding minichunk at offset (40, 24, 40) with 512 non-empty voxels
Minichunk 299/512 completed
Adding minichunk at offset (48, 24, 40) with 512 non-empty voxels
Minichunk 300/512 completed
Adding minichunk at offset (56, 24, 40) with 512 non-empty voxels
Minichunk 301/512 completed
Adding minichunk at offset (0, 32, 40) with 512 non-empty voxels
Minichunk 302/512 completed
Adding minichunk at offset (8, 32, 40) with 512 non-empty voxels
Minichunk 303/512 completed
Adding minichunk at offset (16, 32, 40) with 512 non-empty voxels
Minichunk 304/512 completed
Adding minichunk at offset (24, 32, 40) with 512 non-empty voxels
Minichunk 305/512 completed
Adding minichunk at offset (32, 32, 40) with 512 non-empty voxels
Minichunk 306/512 completed
Adding minichunk at offset (40, 32, 40) with 512 non-empty voxels
Minichunk 307/512 completed
Adding minichunk at offset (48, 32, 40) with 512 non-empty voxels
Minichunk 308/512 completed
Adding minichunk at offset (56, 32, 40) with 512 non-empty voxels
Minichunk 309/512 completed
Releasing workspace 0 (was in_use: true)
Available workspaces after release: 1/3
Minichunk batch readback complete for workspace 1 (11 minichunks, 22528 bytes)
Adding minichunk at offset (0, 8, 32) with 512 non-empty voxels
Minichunk 310/512 completed
Adding minichunk at offset (8, 8, 32) with 512 non-empty voxels
Minichunk 311/512 completed
Adding minichunk at offset (16, 8, 32) with 512 non-empty voxels
Minichunk 312/512 completed
Adding minichunk at offset (24, 8, 32) with 512 non-empty voxels
Minichunk 313/512 completed
Adding minichunk at offset (32, 8, 32) with 512 non-empty voxels
Minichunk 314/512 completed
Adding minichunk at offset (40, 8, 32) with 512 non-empty voxels
Minichunk 315/512 completed
Adding minichunk at offset (48, 8, 32) with 512 non-empty voxels
Minichunk 316/512 completed
Adding minichunk at offset (56, 8, 32) with 512 non-empty voxels
Minichunk 317/512 completed
Adding minichunk at offset (0, 16, 32) with 512 non-empty voxels
Minichunk 318/512 completed
Adding minichunk at offset (8, 16, 32) with 512 non-empty voxels
Minichunk 319/512 completed
Adding minichunk at offset (16, 16, 32) with 512 non-empty voxels
Minichunk 320/512 completed
Releasing workspace 1 (was in_use: true)
Available workspaces after release: 2/3
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 437
Velocity: [0.00, 0.00, 6487.04] speed=6487.04 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -8913.29] | Torque: [124300.406, 300087.938, 95379.062]
  Angular vel: current=[-9108.609, -21990.129, -6989.283] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 241.55] -> [5.00, 5.00, 241.51]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-9106.99, -21986.23, -6988.04] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 437, frames_in_flight: 3
Checking readback 422: submitted frame 435, current frame 437, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 9 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(1, 0, 1) with 11 minichunks (available workspaces: 2)
Allocating workspace 0 (current_index: 0)
Available workspaces after allocation: 1/3
Processing 11 minichunks in workspace 0
Overall bounds: [64, 40, 96] to [128, 56, 104]
renderer_buffer_write called - buffer: anyopaque@1efff479918, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479918, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479918 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbe88, alignment: 0
Returning buffer pointer: 0x1f002dbbe88 (aligned: true)
Created staging buffer at: 0x1f002dbbe88
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a2b000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(7696145987827405871), dst: vk.Buffer(16655718796899647951)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1efff479658, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479658, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479658 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbcc8, alignment: 0
Returning buffer pointer: 0x1f002dbbcc8 (aligned: true)
Created staging buffer at: 0x1f002dbbcc8
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a2c000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(8085177390990365745), dst: vk.Buffer(15589100158980194763)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1efff479818, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479818, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479818 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbd08, alignment: 0
Returning buffer pointer: 0x1f002dbbd08 (aligned: true)
Created staging buffer at: 0x1f002dbbd08
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b13000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(9971972329602815027), dst: vk.Buffer(170787141142446541)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5a28, size: 704, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5a28, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5a28 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbd48, alignment: 0
Returning buffer pointer: 0x1f002dbbd48 (aligned: true)
Created staging buffer at: 0x1f002dbbd48
Staging buffer cast successful
About to map memory for staging buffer - size: 704
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b14000
About to memcpy 704 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(7280471218900177973), dst: vk.Buffer(1025278100226703827)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,4.0e1,9.6e1] to [1.3e2,5.6e1,1.0e2]
Buffer handles - SDF: vk.Buffer(15589100158980194763), Params: vk.Buffer(16655718796899647951), Output: vk.Buffer(15344826058683711953)
generateWorldAdaptive called - offset: 0, max_workgroups: 11
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
getBufferDeviceAddress called for buffer: vk.Buffer(170787141142446541)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534177280
Using actual brush buffer with address: 0x238480000
Dispatching brush chunk: offset=0, size=11 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=11, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002dbbec8, alignment: 0
Returning buffer pointer: 0x1f002dbbec8 (aligned: true)
Submitting readback 423 at frame 437 (will be ready at frame 440)
Successfully queued 11 minichunks from this batch
Processing pending minichunk batch for chunk ChunkId(1, 0, 1) with 24 minichunks (available workspaces: 1)
Allocating workspace 1 (current_index: 1)
Available workspaces after allocation: 0/3
Processing 11 minichunks in workspace 1
Overall bounds: [64, 24, 88] to [128, 40, 96]
renderer_buffer_write called - buffer: anyopaque@1f002cf5c68, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5c68, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5c68 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbfc8, alignment: 0
Returning buffer pointer: 0x1f002dbbfc8 (aligned: true)
Created staging buffer at: 0x1f002dbbfc8
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a49000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(9129017446517183546), dst: vk.Buffer(17645821321130541531)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5768, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5768, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5768 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c2c8, alignment: 0
Returning buffer pointer: 0x1f002d9c2c8 (aligned: true)
Created staging buffer at: 0x1f002d9c2c8
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b19000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(8939257132725834812), dst: vk.Buffer(14073195781184029143)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5928, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5928, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5928 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c148, alignment: 0
Returning buffer pointer: 0x1f002d9c148 (aligned: true)
Created staging buffer at: 0x1f002d9c148
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b1a000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(8838258193621587006), dst: vk.Buffer(16705046187056562649)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf57e8, size: 704, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf57e8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf57e8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c308, alignment: 0
Returning buffer pointer: 0x1f002d9c308 (aligned: true)
Created staging buffer at: 0x1f002d9c308
Staging buffer cast successful
About to map memory for staging buffer - size: 704
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a5b000
About to memcpy 704 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(8601034161882403904), dst: vk.Buffer(18334454249699672543)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,2.4e1,8.8e1] to [1.3e2,4.0e1,9.6e1]
Buffer handles - SDF: vk.Buffer(14073195781184029143), Params: vk.Buffer(17645821321130541531), Output: vk.Buffer(18233758775804690909)
generateWorldAdaptive called - offset: 0, max_workgroups: 11
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
getBufferDeviceAddress called for buffer: vk.Buffer(16705046187056562649)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545711616
Using actual brush buffer with address: 0x238f80000
Dispatching brush chunk: offset=0, size=11 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=11, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002d9c508, alignment: 0
Returning buffer pointer: 0x1f002d9c508 (aligned: true)
Submitting readback 424 at frame 437 (will be ready at frame 440)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 1: No available workspace in ring buffer
Re-queuing 13 remaining minichunks from batch
Successfully queued 11 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 38.2ms (target: 10.0ms), Workgroups: 12 -> 12 (PID: 16)
DeferredReadbackManager: advanced to frame 438
Processing readbacks: 3 pending, completed_frame: 438, frames_in_flight: 3
Checking readback 422: submitted frame 435, current frame 438, 3 frames elapsed (need 3)
Readback 422 ready (submitted frame 435, current frame 438)
Checking readback 423: submitted frame 437, current frame 438, 1 frames elapsed (need 3)
Processing 1 completed readbacks
Minichunk batch readback complete for workspace 2 (12 minichunks, 24576 bytes)
Adding minichunk at offset (0, 48, 24) with 512 non-empty voxels
Minichunk 321/512 completed
Adding minichunk at offset (8, 48, 24) with 512 non-empty voxels
Minichunk 322/512 completed
Adding minichunk at offset (16, 48, 24) with 512 non-empty voxels
Minichunk 323/512 completed
Adding minichunk at offset (24, 48, 24) with 512 non-empty voxels
Minichunk 324/512 completed
Adding minichunk at offset (32, 48, 24) with 512 non-empty voxels
Minichunk 325/512 completed
Adding minichunk at offset (40, 48, 24) with 512 non-empty voxels
Minichunk 326/512 completed
Adding minichunk at offset (48, 48, 24) with 512 non-empty voxels
Minichunk 327/512 completed
Adding minichunk at offset (56, 48, 24) with 512 non-empty voxels
Minichunk 328/512 completed
Adding minichunk at offset (0, 56, 24) with 512 non-empty voxels
Minichunk 329/512 completed
Adding minichunk at offset (8, 56, 24) with 512 non-empty voxels
Minichunk 330/512 completed
Adding minichunk at offset (16, 56, 24) with 512 non-empty voxels
Minichunk 331/512 completed
Adding minichunk at offset (24, 56, 24) with 512 non-empty voxels
Minichunk 332/512 completed
Releasing workspace 2 (was in_use: true)
Available workspaces after release: 1/3
Force processing old readbacks: 2 pending, max age: 3 frames, current frame: 438
Velocity: [0.00, 0.00, 12218.91] speed=12218.91 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -77325.20] | Torque: [320041.969, 772649.688, 245576.875]
  Angular vel: current=[-3188.335, -7697.323, -2446.496] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 241.51] -> [5.00, 5.00, 241.46]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-3187.77, -7695.97, -2446.06] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 0
Command buffer begun in frame_begin
Processing readbacks: 2 pending, completed_frame: 438, frames_in_flight: 3
Checking readback 423: submitted frame 437, current frame 438, 1 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 8 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(1, 0, 1) with 13 minichunks (available workspaces: 1)
Allocating workspace 2 (current_index: 2)
Available workspaces after allocation: 0/3
Processing 12 minichunks in workspace 2
Overall bounds: [64, 16, 96] to [128, 32, 104]
renderer_buffer_write called - buffer: anyopaque@1f002cf5be8, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5be8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5be8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c388, alignment: 0
Returning buffer pointer: 0x1f002d9c388 (aligned: true)
Created staging buffer at: 0x1f002d9c388
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a34000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(7950717014518010949), dst: vk.Buffer(10094846052541661671)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5ba8, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ba8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5ba8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c4c8, alignment: 0
Returning buffer pointer: 0x1f002d9c4c8 (aligned: true)
Created staging buffer at: 0x1f002d9c4c8
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a5c000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(594876472557048903), dst: vk.Buffer(16700742698545447395)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5ca8, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ca8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5ca8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c588, alignment: 0
Returning buffer pointer: 0x1f002d9c588 (aligned: true)
Created staging buffer at: 0x1f002d9c588
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a25000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(7001966023096144969), dst: vk.Buffer(17497165150031970789)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf58a8, size: 768, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf58a8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf58a8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c5c8, alignment: 0
Returning buffer pointer: 0x1f002d9c5c8 (aligned: true)
Created staging buffer at: 0x1f002d9c5c8
Staging buffer cast successful
About to map memory for staging buffer - size: 768
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a26000
About to memcpy 768 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(5041050806632059979), dst: vk.Buffer(14063823544068866539)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,1.6e1,9.6e1] to [1.3e2,3.2e1,1.0e2]
Buffer handles - SDF: vk.Buffer(16700742698545447395), Params: vk.Buffer(10094846052541661671), Output: vk.Buffer(17114293211007812073)
generateWorldAdaptive called - offset: 0, max_workgroups: 12
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
getBufferDeviceAddress called for buffer: vk.Buffer(17497165150031970789)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557245952
Using actual brush buffer with address: 0x239a80000
Dispatching brush chunk: offset=0, size=12 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=12, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002d9c6c8, alignment: 0
Returning buffer pointer: 0x1f002d9c6c8 (aligned: true)
Submitting readback 425 at frame 438 (will be ready at frame 441)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 1: No available workspace in ring buffer
Re-queuing 1 remaining minichunks from batch
Successfully queued 12 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 38.2ms (target: 10.0ms), Workgroups: 13 -> 13 (PID: 14)
DeferredReadbackManager: advanced to frame 439
Processing readbacks: 3 pending, completed_frame: 439, frames_in_flight: 3
Checking readback 423: submitted frame 437, current frame 439, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 3 pending, max age: 3 frames, current frame: 439
Velocity: [0.00, 0.00, 4277.03] speed=4277.03 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -33393.46] | Torque: [173549.156, 418984.750, 133168.969]
  Angular vel: current=[-4910.592, -11855.219, -3768.031] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 241.46] -> [5.00, 5.00, 241.42]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-4909.72, -11853.12, -3767.36] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 1
Command buffer begun in frame_begin
Processing readbacks: 3 pending, completed_frame: 439, frames_in_flight: 3
Checking readback 423: submitted frame 437, current frame 439, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 8 batches waiting, 1 active chunks
No available workspaces, stopping batch processing
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 34.0ms (target: 10.0ms), Workgroups: 12 -> 12 (PID: 4)
DeferredReadbackManager: advanced to frame 440
Processing readbacks: 3 pending, completed_frame: 440, frames_in_flight: 3
Checking readback 423: submitted frame 437, current frame 440, 3 frames elapsed (need 3)
Readback 423 ready (submitted frame 437, current frame 440)
Checking readback 424: submitted frame 437, current frame 440, 3 frames elapsed (need 3)
Readback 424 ready (submitted frame 437, current frame 440)
Checking readback 425: submitted frame 438, current frame 440, 2 frames elapsed (need 3)
Processing 2 completed readbacks
Minichunk batch readback complete for workspace 0 (11 minichunks, 22528 bytes)
Adding minichunk at offset (40, 40, 32) with 512 non-empty voxels
Minichunk 333/512 completed
Adding minichunk at offset (48, 40, 32) with 512 non-empty voxels
Minichunk 334/512 completed
Adding minichunk at offset (56, 40, 32) with 512 non-empty voxels
Minichunk 335/512 completed
Adding minichunk at offset (0, 48, 32) with 512 non-empty voxels
Minichunk 336/512 completed
Adding minichunk at offset (8, 48, 32) with 512 non-empty voxels
Minichunk 337/512 completed
Adding minichunk at offset (16, 48, 32) with 512 non-empty voxels
Minichunk 338/512 completed
Adding minichunk at offset (24, 48, 32) with 512 non-empty voxels
Minichunk 339/512 completed
Adding minichunk at offset (32, 48, 32) with 512 non-empty voxels
Minichunk 340/512 completed
Adding minichunk at offset (40, 48, 32) with 512 non-empty voxels
Minichunk 341/512 completed
Adding minichunk at offset (48, 48, 32) with 512 non-empty voxels
Minichunk 342/512 completed
Adding minichunk at offset (56, 48, 32) with 512 non-empty voxels
Minichunk 343/512 completed
Releasing workspace 0 (was in_use: true)
Available workspaces after release: 1/3
Minichunk batch readback complete for workspace 1 (11 minichunks, 22528 bytes)
Adding minichunk at offset (0, 24, 24) with 512 non-empty voxels
Minichunk 344/512 completed
Adding minichunk at offset (8, 24, 24) with 512 non-empty voxels
Minichunk 345/512 completed
Adding minichunk at offset (16, 24, 24) with 512 non-empty voxels
Minichunk 346/512 completed
Adding minichunk at offset (24, 24, 24) with 512 non-empty voxels
Minichunk 347/512 completed
Adding minichunk at offset (32, 24, 24) with 512 non-empty voxels
Minichunk 348/512 completed
Adding minichunk at offset (40, 24, 24) with 512 non-empty voxels
Minichunk 349/512 completed
Adding minichunk at offset (48, 24, 24) with 512 non-empty voxels
Minichunk 350/512 completed
Adding minichunk at offset (56, 24, 24) with 512 non-empty voxels
Minichunk 351/512 completed
Adding minichunk at offset (0, 32, 24) with 512 non-empty voxels
Minichunk 352/512 completed
Adding minichunk at offset (8, 32, 24) with 512 non-empty voxels
Minichunk 353/512 completed
Adding minichunk at offset (16, 32, 24) with 512 non-empty voxels
Minichunk 354/512 completed
Releasing workspace 1 (was in_use: true)
Available workspaces after release: 2/3
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 440
Velocity: [0.00, 0.00, 6587.35] speed=6587.35 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -2430.93] | Torque: [104032.188, 251156.062, 79826.781]
  Angular vel: current=[-9497.498, -22928.990, -7287.688] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.042 units: [5.00, 5.00, 241.42] -> [5.00, 5.00, 241.38]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-9495.82, -22924.95, -7286.40] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 440, frames_in_flight: 3
Checking readback 425: submitted frame 438, current frame 440, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 8 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(1, 0, 1) with 12 minichunks (available workspaces: 2)
Allocating workspace 0 (current_index: 0)
Available workspaces after allocation: 1/3
Processing 12 minichunks in workspace 0
Overall bounds: [64, 0, 88] to [128, 64, 104]
renderer_buffer_write called - buffer: anyopaque@1efff479918, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479918, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479918 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c188, alignment: 0
Returning buffer pointer: 0x1f002d9c188 (aligned: true)
Created staging buffer at: 0x1f002d9c188
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a2d000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(2156399587789640784), dst: vk.Buffer(16655718796899647951)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1efff479658, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479658, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479658 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c508, alignment: 0
Returning buffer pointer: 0x1f002d9c508 (aligned: true)
Created staging buffer at: 0x1f002d9c508
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a2e000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(10702083234818167890), dst: vk.Buffer(15589100158980194763)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1efff479818, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479818, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479818 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbba88, alignment: 0
Returning buffer pointer: 0x1f002dbba88 (aligned: true)
Created staging buffer at: 0x1f002dbba88
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a09000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(6305028483202421844), dst: vk.Buffer(170787141142446541)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5a28, size: 768, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5a28, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5a28 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbc88, alignment: 0
Returning buffer pointer: 0x1f002dbbc88 (aligned: true)
Created staging buffer at: 0x1f002dbbc88
Staging buffer cast successful
About to map memory for staging buffer - size: 768
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a0a000
About to memcpy 768 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(3145856698695029846), dst: vk.Buffer(1025278100226703827)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,0.0e0,8.8e1] to [1.3e2,6.4e1,1.0e2]
Buffer handles - SDF: vk.Buffer(15589100158980194763), Params: vk.Buffer(16655718796899647951), Output: vk.Buffer(15344826058683711953)
generateWorldAdaptive called - offset: 0, max_workgroups: 12
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x8x2 workgroups for 64x64x16 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=8, z=2
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
getBufferDeviceAddress called for buffer: vk.Buffer(170787141142446541)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534177280
Using actual brush buffer with address: 0x238480000
Dispatching brush chunk: offset=0, size=12 (of 128 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=12, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002dbbb08, alignment: 0
Returning buffer pointer: 0x1f002dbbb08 (aligned: true)
Submitting readback 426 at frame 440 (will be ready at frame 443)
Successfully queued 12 minichunks from this batch
Processing pending minichunk batch for chunk ChunkId(1, 0, 1) with 24 minichunks (available workspaces: 1)
Allocating workspace 1 (current_index: 1)
Available workspaces after allocation: 0/3
Processing 12 minichunks in workspace 1
Overall bounds: [64, 0, 88] to [128, 16, 96]
renderer_buffer_write called - buffer: anyopaque@1f002cf5c68, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5c68, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5c68 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbe08, alignment: 0
Returning buffer pointer: 0x1f002dbbe08 (aligned: true)
Created staging buffer at: 0x1f002dbbe08
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a4a000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(9953228954884117595), dst: vk.Buffer(17645821321130541531)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5768, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5768, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5768 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbec8, alignment: 0
Returning buffer pointer: 0x1f002dbbec8 (aligned: true)
Created staging buffer at: 0x1f002dbbec8
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b15000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(2374949514042676317), dst: vk.Buffer(14073195781184029143)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5928, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5928, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5928 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbf48, alignment: 0
Returning buffer pointer: 0x1f002dbbf48 (aligned: true)
Created staging buffer at: 0x1f002dbbf48
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b16000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(4164639983736460383), dst: vk.Buffer(16705046187056562649)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf57e8, size: 768, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf57e8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf57e8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbb888, alignment: 0
Returning buffer pointer: 0x1f002dbb888 (aligned: true)
Created staging buffer at: 0x1f002dbb888
Staging buffer cast successful
About to map memory for staging buffer - size: 768
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a3a000
About to memcpy 768 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(12853836286468822113), dst: vk.Buffer(18334454249699672543)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,0.0e0,8.8e1] to [1.3e2,1.6e1,9.6e1]
Buffer handles - SDF: vk.Buffer(14073195781184029143), Params: vk.Buffer(17645821321130541531), Output: vk.Buffer(18233758775804690909)
generateWorldAdaptive called - offset: 0, max_workgroups: 12
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
getBufferDeviceAddress called for buffer: vk.Buffer(16705046187056562649)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545711616
Using actual brush buffer with address: 0x238f80000
Dispatching brush chunk: offset=0, size=12 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=12, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1efff479cd8, alignment: 0
Returning buffer pointer: 0x1efff479cd8 (aligned: true)
Submitting readback 427 at frame 440 (will be ready at frame 443)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 1: No available workspace in ring buffer
Re-queuing 12 remaining minichunks from batch
Successfully queued 12 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 38.2ms (target: 10.0ms), Workgroups: 13 -> 13 (PID: 16)
DeferredReadbackManager: advanced to frame 441
Processing readbacks: 3 pending, completed_frame: 441, frames_in_flight: 3
Checking readback 425: submitted frame 438, current frame 441, 3 frames elapsed (need 3)
Readback 425 ready (submitted frame 438, current frame 441)
Checking readback 426: submitted frame 440, current frame 441, 1 frames elapsed (need 3)
Processing 1 completed readbacks
Minichunk batch readback complete for workspace 2 (12 minichunks, 24576 bytes)
Adding minichunk at offset (24, 16, 32) with 512 non-empty voxels
Minichunk 355/512 completed
Adding minichunk at offset (32, 16, 32) with 512 non-empty voxels
Minichunk 356/512 completed
Adding minichunk at offset (40, 16, 32) with 512 non-empty voxels
Minichunk 357/512 completed
Adding minichunk at offset (48, 16, 32) with 512 non-empty voxels
Minichunk 358/512 completed
Adding minichunk at offset (56, 16, 32) with 512 non-empty voxels
Minichunk 359/512 completed
Adding minichunk at offset (0, 24, 32) with 512 non-empty voxels
Minichunk 360/512 completed
Adding minichunk at offset (8, 24, 32) with 512 non-empty voxels
Minichunk 361/512 completed
Adding minichunk at offset (16, 24, 32) with 512 non-empty voxels
Minichunk 362/512 completed
Adding minichunk at offset (24, 24, 32) with 512 non-empty voxels
Minichunk 363/512 completed
Adding minichunk at offset (32, 24, 32) with 512 non-empty voxels
Minichunk 364/512 completed
Adding minichunk at offset (40, 24, 32) with 512 non-empty voxels
Minichunk 365/512 completed
Adding minichunk at offset (48, 24, 32) with 512 non-empty voxels
Minichunk 366/512 completed
Releasing workspace 2 (was in_use: true)
Available workspaces after release: 1/3
Force processing old readbacks: 2 pending, max age: 3 frames, current frame: 441
Velocity: [0.00, 0.00, 12740.47] speed=12740.47 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -79921.39] | Torque: [329575.500, 795665.688, 252892.188]
  Angular vel: current=[-3173.885, -7662.436, -2435.408] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 241.38] -> [5.00, 5.00, 241.34]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-3173.33, -7661.09, -2434.98] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 0
Command buffer begun in frame_begin
Processing readbacks: 2 pending, completed_frame: 441, frames_in_flight: 3
Checking readback 426: submitted frame 440, current frame 441, 1 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 7 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(1, 0, 1) with 13 minichunks (available workspaces: 1)
Allocating workspace 2 (current_index: 2)
Available workspaces after allocation: 0/3
Processing 13 minichunks in workspace 2
Overall bounds: [64, 32, 88] to [128, 48, 96]
renderer_buffer_write called - buffer: anyopaque@1f002cf5be8, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5be8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5be8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1efff479c58, alignment: 0
Returning buffer pointer: 0x1efff479c58 (aligned: true)
Created staging buffer at: 0x1efff479c58
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a21000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(3632970036613747814), dst: vk.Buffer(10094846052541661671)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5ba8, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ba8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5ba8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1efff479858, alignment: 0
Returning buffer pointer: 0x1efff479858 (aligned: true)
Created staging buffer at: 0x1efff479858
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b12000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(13191158757289104488), dst: vk.Buffer(16700742698545447395)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5ca8, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ca8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5ca8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1efff479a58, alignment: 0
Returning buffer pointer: 0x1efff479a58 (aligned: true)
Created staging buffer at: 0x1efff479a58
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b0c000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(12359595914178860138), dst: vk.Buffer(17497165150031970789)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf58a8, size: 832, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf58a8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf58a8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1efff479ad8, alignment: 0
Returning buffer pointer: 0x1efff479ad8 (aligned: true)
Created staging buffer at: 0x1efff479ad8
Staging buffer cast successful
About to map memory for staging buffer - size: 832
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a08000
About to memcpy 832 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(1075424626546316396), dst: vk.Buffer(14063823544068866539)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,3.2e1,8.8e1] to [1.3e2,4.8e1,9.6e1]
Buffer handles - SDF: vk.Buffer(16700742698545447395), Params: vk.Buffer(10094846052541661671), Output: vk.Buffer(17114293211007812073)
generateWorldAdaptive called - offset: 0, max_workgroups: 13
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
getBufferDeviceAddress called for buffer: vk.Buffer(17497165150031970789)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557245952
Using actual brush buffer with address: 0x239a80000
Dispatching brush chunk: offset=0, size=13 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=13, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1efff479b58, alignment: 0
Returning buffer pointer: 0x1efff479b58 (aligned: true)
Submitting readback 428 at frame 441 (will be ready at frame 444)
Successfully queued 13 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 38.1ms (target: 10.0ms), Workgroups: 14 -> 14 (PID: 14)
DeferredReadbackManager: advanced to frame 442
Processing readbacks: 3 pending, completed_frame: 442, frames_in_flight: 3
Checking readback 426: submitted frame 440, current frame 442, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 3 pending, max age: 3 frames, current frame: 442
Velocity: [0.00, 0.00, 4257.61] speed=4257.61 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -33420.97] | Torque: [173192.781, 418124.375, 132895.516]
  Angular vel: current=[-4864.569, -11744.109, -3732.716] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.042 units: [5.00, 5.00, 241.34] -> [5.00, 5.00, 241.29]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-4863.71, -11742.04, -3732.06] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 1
Command buffer begun in frame_begin
Processing readbacks: 3 pending, completed_frame: 442, frames_in_flight: 3
Checking readback 426: submitted frame 440, current frame 442, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 6 batches waiting, 1 active chunks
No available workspaces, stopping batch processing
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 34.2ms (target: 10.0ms), Workgroups: 13 -> 13 (PID: 4)
DeferredReadbackManager: advanced to frame 443
Processing readbacks: 3 pending, completed_frame: 443, frames_in_flight: 3
Checking readback 426: submitted frame 440, current frame 443, 3 frames elapsed (need 3)
Readback 426 ready (submitted frame 440, current frame 443)
Checking readback 427: submitted frame 440, current frame 443, 3 frames elapsed (need 3)
Readback 427 ready (submitted frame 440, current frame 443)
Checking readback 428: submitted frame 441, current frame 443, 2 frames elapsed (need 3)
Processing 2 completed readbacks
Minichunk batch readback complete for workspace 0 (12 minichunks, 24576 bytes)
Adding minichunk at offset (32, 56, 24) with 512 non-empty voxels
Minichunk 367/512 completed
Adding minichunk at offset (40, 56, 24) with 512 non-empty voxels
Minichunk 368/512 completed
Adding minichunk at offset (48, 56, 24) with 512 non-empty voxels
Minichunk 369/512 completed
Adding minichunk at offset (56, 56, 24) with 512 non-empty voxels
Minichunk 370/512 completed
Adding minichunk at offset (0, 0, 32) with 512 non-empty voxels
Minichunk 371/512 completed
Adding minichunk at offset (8, 0, 32) with 512 non-empty voxels
Minichunk 372/512 completed
Adding minichunk at offset (16, 0, 32) with 512 non-empty voxels
Minichunk 373/512 completed
Adding minichunk at offset (24, 0, 32) with 512 non-empty voxels
Minichunk 374/512 completed
Adding minichunk at offset (32, 0, 32) with 512 non-empty voxels
Minichunk 375/512 completed
Adding minichunk at offset (40, 0, 32) with 512 non-empty voxels
Minichunk 376/512 completed
Adding minichunk at offset (48, 0, 32) with 512 non-empty voxels
Minichunk 377/512 completed
Adding minichunk at offset (56, 0, 32) with 512 non-empty voxels
Minichunk 378/512 completed
Releasing workspace 0 (was in_use: true)
Available workspaces after release: 1/3
Minichunk batch readback complete for workspace 1 (12 minichunks, 24576 bytes)
Adding minichunk at offset (0, 0, 24) with 512 non-empty voxels
Minichunk 379/512 completed
Adding minichunk at offset (8, 0, 24) with 512 non-empty voxels
Minichunk 380/512 completed
Adding minichunk at offset (16, 0, 24) with 512 non-empty voxels
Minichunk 381/512 completed
Adding minichunk at offset (24, 0, 24) with 512 non-empty voxels
Minichunk 382/512 completed
Adding minichunk at offset (32, 0, 24) with 512 non-empty voxels
Minichunk 383/512 completed
Adding minichunk at offset (40, 0, 24) with 512 non-empty voxels
Minichunk 384/512 completed
Adding minichunk at offset (48, 0, 24) with 512 non-empty voxels
Minichunk 385/512 completed
Adding minichunk at offset (56, 0, 24) with 512 non-empty voxels
Minichunk 386/512 completed
Adding minichunk at offset (0, 8, 24) with 512 non-empty voxels
Minichunk 387/512 completed
Adding minichunk at offset (8, 8, 24) with 512 non-empty voxels
Minichunk 388/512 completed
Adding minichunk at offset (16, 8, 24) with 512 non-empty voxels
Minichunk 389/512 completed
Adding minichunk at offset (24, 8, 24) with 512 non-empty voxels
Minichunk 390/512 completed
Releasing workspace 1 (was in_use: true)
Available workspaces after release: 2/3
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 443
Velocity: [0.00, 0.00, 6525.55] speed=6525.55 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -13570.93] | Torque: [139506.125, 336797.688, 107046.859]
  Angular vel: current=[-8893.357, -21470.467, -6824.115] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.042 units: [5.00, 5.00, 241.29] -> [5.00, 5.00, 241.25]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-8891.80, -21466.70, -6822.92] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 443, frames_in_flight: 3
Checking readback 428: submitted frame 441, current frame 443, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 6 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(1, 0, 1) with 24 minichunks (available workspaces: 2)
Allocating workspace 0 (current_index: 0)
Available workspaces after allocation: 1/3
Processing 13 minichunks in workspace 0
Overall bounds: [64, 16, 80] to [128, 32, 88]
renderer_buffer_write called - buffer: anyopaque@1efff479918, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479918, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479918 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1efff479c18, alignment: 0
Returning buffer pointer: 0x1efff479c18 (aligned: true)
Created staging buffer at: 0x1efff479c18
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a65000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(12003236499035264113), dst: vk.Buffer(16655718796899647951)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1efff479658, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479658, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479658 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1efff479cd8, alignment: 0
Returning buffer pointer: 0x1efff479cd8 (aligned: true)
Created staging buffer at: 0x1efff479cd8
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a51000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(15648410015205692531), dst: vk.Buffer(15589100158980194763)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1efff479818, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479818, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479818 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbb988, alignment: 0
Returning buffer pointer: 0x1f002dbb988 (aligned: true)
Created staging buffer at: 0x1f002dbb988
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a52000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(1171969444046443637), dst: vk.Buffer(170787141142446541)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5a28, size: 832, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5a28, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5a28 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbb9c8, alignment: 0
Returning buffer pointer: 0x1f002dbb9c8 (aligned: true)
Created staging buffer at: 0x1f002dbb9c8
Staging buffer cast successful
About to map memory for staging buffer - size: 832
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a1b000
About to memcpy 832 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(11437663110870078583), dst: vk.Buffer(1025278100226703827)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,1.6e1,8.0e1] to [1.3e2,3.2e1,8.8e1]
Buffer handles - SDF: vk.Buffer(15589100158980194763), Params: vk.Buffer(16655718796899647951), Output: vk.Buffer(15344826058683711953)
generateWorldAdaptive called - offset: 0, max_workgroups: 13
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
getBufferDeviceAddress called for buffer: vk.Buffer(170787141142446541)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534177280
Using actual brush buffer with address: 0x238480000
Dispatching brush chunk: offset=0, size=13 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=13, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002dbba48, alignment: 0
Returning buffer pointer: 0x1f002dbba48 (aligned: true)
Submitting readback 429 at frame 443 (will be ready at frame 446)
Allocating workspace 1 (current_index: 1)
Available workspaces after allocation: 0/3
Processing 11 minichunks in workspace 1
Overall bounds: [64, 24, 80] to [128, 40, 88]
renderer_buffer_write called - buffer: anyopaque@1f002cf5c68, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5c68, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5c68 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbd88, alignment: 0
Returning buffer pointer: 0x1f002dbbd88 (aligned: true)
Created staging buffer at: 0x1f002dbbd88
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a1c000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(15506698359548155004), dst: vk.Buffer(17645821321130541531)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5768, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5768, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5768 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbb08, alignment: 0
Returning buffer pointer: 0x1f002dbbb08 (aligned: true)
Created staging buffer at: 0x1f002dbbb08
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a4b000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(16421687746927531134), dst: vk.Buffer(14073195781184029143)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5928, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5928, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5928 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbc08, alignment: 0
Returning buffer pointer: 0x1f002dbbc08 (aligned: true)
Created staging buffer at: 0x1f002dbbc08
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a4c000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(10092496396193109120), dst: vk.Buffer(16705046187056562649)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf57e8, size: 704, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf57e8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf57e8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbc48, alignment: 0
Returning buffer pointer: 0x1f002dbbc48 (aligned: true)
Created staging buffer at: 0x1f002dbbc48
Staging buffer cast successful
About to map memory for staging buffer - size: 704
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a4d000
About to memcpy 704 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(17118465857635226754), dst: vk.Buffer(18334454249699672543)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,2.4e1,8.0e1] to [1.3e2,4.0e1,8.8e1]
Buffer handles - SDF: vk.Buffer(14073195781184029143), Params: vk.Buffer(17645821321130541531), Output: vk.Buffer(18233758775804690909)
generateWorldAdaptive called - offset: 0, max_workgroups: 11
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
getBufferDeviceAddress called for buffer: vk.Buffer(16705046187056562649)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545711616
Using actual brush buffer with address: 0x238f80000
Dispatching brush chunk: offset=0, size=11 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=11, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002df5558, alignment: 0
Returning buffer pointer: 0x1f002df5558 (aligned: true)
Submitting readback 430 at frame 443 (will be ready at frame 446)
Successfully queued 24 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 38.9ms (target: 10.0ms), Workgroups: 14 -> 14 (PID: 16)
DeferredReadbackManager: advanced to frame 444
Processing readbacks: 3 pending, completed_frame: 444, frames_in_flight: 3
Checking readback 428: submitted frame 441, current frame 444, 3 frames elapsed (need 3)
Readback 428 ready (submitted frame 441, current frame 444)
Checking readback 429: submitted frame 443, current frame 444, 1 frames elapsed (need 3)
Processing 1 completed readbacks
Minichunk batch readback complete for workspace 2 (13 minichunks, 26624 bytes)
Adding minichunk at offset (24, 32, 24) with 512 non-empty voxels
Minichunk 391/512 completed
Adding minichunk at offset (32, 32, 24) with 512 non-empty voxels
Minichunk 392/512 completed
Adding minichunk at offset (40, 32, 24) with 512 non-empty voxels
Minichunk 393/512 completed
Adding minichunk at offset (48, 32, 24) with 512 non-empty voxels
Minichunk 394/512 completed
Adding minichunk at offset (56, 32, 24) with 512 non-empty voxels
Minichunk 395/512 completed
Adding minichunk at offset (0, 40, 24) with 512 non-empty voxels
Minichunk 396/512 completed
Adding minichunk at offset (8, 40, 24) with 512 non-empty voxels
Minichunk 397/512 completed
Adding minichunk at offset (16, 40, 24) with 512 non-empty voxels
Minichunk 398/512 completed
Adding minichunk at offset (24, 40, 24) with 512 non-empty voxels
Minichunk 399/512 completed
Adding minichunk at offset (32, 40, 24) with 512 non-empty voxels
Minichunk 400/512 completed
Adding minichunk at offset (40, 40, 24) with 512 non-empty voxels
Minichunk 401/512 completed
Adding minichunk at offset (48, 40, 24) with 512 non-empty voxels
Minichunk 402/512 completed
Adding minichunk at offset (56, 40, 24) with 512 non-empty voxels
Minichunk 403/512 completed
Releasing workspace 2 (was in_use: true)
Available workspaces after release: 1/3
Force processing old readbacks: 2 pending, max age: 3 frames, current frame: 444
Velocity: [0.00, 0.00, 11929.93] speed=11929.93 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -72647.17] | Torque: [300750.031, 726074.875, 230773.656]
  Angular vel: current=[-3001.890, -7247.205, -2303.431] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.042 units: [5.00, 5.00, 241.25] -> [5.00, 5.00, 241.21]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-3001.37, -7245.94, -2303.03] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 0
Command buffer begun in frame_begin
Processing readbacks: 2 pending, completed_frame: 444, frames_in_flight: 3
Checking readback 429: submitted frame 443, current frame 444, 1 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 5 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(1, 0, 1) with 1 minichunks (available workspaces: 1)
Allocating workspace 2 (current_index: 2)
Available workspaces after allocation: 0/3
Processing 1 minichunks in workspace 2
Overall bounds: [120, 24, 96] to [128, 32, 104]
renderer_buffer_write called - buffer: anyopaque@1f002cf5be8, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5be8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5be8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5718, alignment: 0
Returning buffer pointer: 0x1f002df5718 (aligned: true)
Created staging buffer at: 0x1f002df5718
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a33000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(17656554753640895623), dst: vk.Buffer(10094846052541661671)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5ba8, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ba8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5ba8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5598, alignment: 0
Returning buffer pointer: 0x1f002df5598 (aligned: true)
Created staging buffer at: 0x1f002df5598
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a23000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(17411260306553836681), dst: vk.Buffer(16700742698545447395)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5ca8, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ca8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5ca8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5298, alignment: 0
Returning buffer pointer: 0x1f002df5298 (aligned: true)
Created staging buffer at: 0x1f002df5298
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb18f7000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(17931973620305761419), dst: vk.Buffer(17497165150031970789)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf58a8, size: 64, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf58a8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf58a8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df51d8, alignment: 0
Returning buffer pointer: 0x1f002df51d8 (aligned: true)
Created staging buffer at: 0x1f002df51d8
Staging buffer cast successful
About to map memory for staging buffer - size: 64
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b17000
About to memcpy 64 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(14108885928621642893), dst: vk.Buffer(14063823544068866539)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [1.2e2,2.4e1,9.6e1] to [1.3e2,3.2e1,1.0e2]
Buffer handles - SDF: vk.Buffer(16700742698545447395), Params: vk.Buffer(10094846052541661671), Output: vk.Buffer(17114293211007812073)
generateWorldAdaptive called - offset: 0, max_workgroups: 1
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 1x1x1 workgroups for 8x8x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
getBufferDeviceAddress called for buffer: vk.Buffer(17497165150031970789)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557245952
Using actual brush buffer with address: 0x239a80000
Dispatching brush chunk: offset=0, size=1 (of 1 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002df5398, alignment: 0
Returning buffer pointer: 0x1f002df5398 (aligned: true)
Submitting readback 431 at frame 444 (will be ready at frame 447)
Successfully queued 1 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 38.9ms (target: 10.0ms), Workgroups: 15 -> 15 (PID: 15)
DeferredReadbackManager: advanced to frame 445
Processing readbacks: 3 pending, completed_frame: 445, frames_in_flight: 3
Checking readback 429: submitted frame 443, current frame 445, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 3 pending, max age: 3 frames, current frame: 445
Velocity: [0.00, 0.00, 4026.85] speed=4026.85 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -31677.02] | Torque: [166301.812, 401488.188, 127607.883]
  Angular vel: current=[-4825.259, -11649.206, -3702.552] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.042 units: [5.00, 5.00, 241.21] -> [5.00, 5.00, 241.17]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-4824.41, -11647.16, -3701.90] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 1
Command buffer begun in frame_begin
Processing readbacks: 3 pending, completed_frame: 445, frames_in_flight: 3
Checking readback 429: submitted frame 443, current frame 445, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 4 batches waiting, 1 active chunks
No available workspaces, stopping batch processing
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 34.8ms (target: 10.0ms), Workgroups: 14 -> 14 (PID: 4)
DeferredReadbackManager: advanced to frame 446
Processing readbacks: 3 pending, completed_frame: 446, frames_in_flight: 3
Checking readback 429: submitted frame 443, current frame 446, 3 frames elapsed (need 3)
Readback 429 ready (submitted frame 443, current frame 446)
Checking readback 430: submitted frame 443, current frame 446, 3 frames elapsed (need 3)
Readback 430 ready (submitted frame 443, current frame 446)
Checking readback 431: submitted frame 444, current frame 446, 2 frames elapsed (need 3)
Processing 2 completed readbacks
Minichunk batch readback complete for workspace 0 (13 minichunks, 26624 bytes)
Adding minichunk at offset (0, 16, 16) with 512 non-empty voxels
Minichunk 404/512 completed
Adding minichunk at offset (8, 16, 16) with 512 non-empty voxels
Minichunk 405/512 completed
Adding minichunk at offset (16, 16, 16) with 512 non-empty voxels
Minichunk 406/512 completed
Adding minichunk at offset (24, 16, 16) with 512 non-empty voxels
Minichunk 407/512 completed
Adding minichunk at offset (32, 16, 16) with 512 non-empty voxels
Minichunk 408/512 completed
Adding minichunk at offset (40, 16, 16) with 512 non-empty voxels
Minichunk 409/512 completed
Adding minichunk at offset (48, 16, 16) with 512 non-empty voxels
Minichunk 410/512 completed
Adding minichunk at offset (56, 16, 16) with 512 non-empty voxels
Minichunk 411/512 completed
Adding minichunk at offset (0, 24, 16) with 512 non-empty voxels
Minichunk 412/512 completed
Adding minichunk at offset (8, 24, 16) with 512 non-empty voxels
Minichunk 413/512 completed
Adding minichunk at offset (16, 24, 16) with 512 non-empty voxels
Minichunk 414/512 completed
Adding minichunk at offset (24, 24, 16) with 512 non-empty voxels
Minichunk 415/512 completed
Adding minichunk at offset (32, 24, 16) with 512 non-empty voxels
Minichunk 416/512 completed
Releasing workspace 0 (was in_use: true)
Available workspaces after release: 1/3
Minichunk batch readback complete for workspace 1 (11 minichunks, 22528 bytes)
Adding minichunk at offset (40, 24, 16) with 512 non-empty voxels
Minichunk 417/512 completed
Adding minichunk at offset (48, 24, 16) with 512 non-empty voxels
Minichunk 418/512 completed
Adding minichunk at offset (56, 24, 16) with 512 non-empty voxels
Minichunk 419/512 completed
Adding minichunk at offset (0, 32, 16) with 512 non-empty voxels
Minichunk 420/512 completed
Adding minichunk at offset (8, 32, 16) with 512 non-empty voxels
Minichunk 421/512 completed
Adding minichunk at offset (16, 32, 16) with 512 non-empty voxels
Minichunk 422/512 completed
Adding minichunk at offset (24, 32, 16) with 512 non-empty voxels
Minichunk 423/512 completed
Adding minichunk at offset (32, 32, 16) with 512 non-empty voxels
Minichunk 424/512 completed
Adding minichunk at offset (40, 32, 16) with 512 non-empty voxels
Minichunk 425/512 completed
Adding minichunk at offset (48, 32, 16) with 512 non-empty voxels
Minichunk 426/512 completed
Adding minichunk at offset (56, 32, 16) with 512 non-empty voxels
Minichunk 427/512 completed
Releasing workspace 1 (was in_use: true)
Available workspaces after release: 2/3
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 446
Velocity: [0.00, 0.00, 6472.75] speed=6472.75 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -15164.76] | Torque: [144136.844, 347977.250, 110600.156]
  Angular vel: current=[-8762.404, -21154.316, -6723.630] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.042 units: [5.00, 5.00, 241.17] -> [5.00, 5.00, 241.12]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-8760.87, -21150.62, -6722.45] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 446, frames_in_flight: 3
Checking readback 431: submitted frame 444, current frame 446, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 4 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(1, 0, 1) with 12 minichunks (available workspaces: 2)
Allocating workspace 0 (current_index: 0)
Available workspaces after allocation: 1/3
Processing 12 minichunks in workspace 0
Overall bounds: [64, 8, 88] to [128, 24, 96]
renderer_buffer_write called - buffer: anyopaque@1efff479918, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479918, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479918 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5758, alignment: 0
Returning buffer pointer: 0x1f002df5758 (aligned: true)
Created staging buffer at: 0x1f002df5758
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a19000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(16412016442649613458), dst: vk.Buffer(16655718796899647951)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1efff479658, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479658, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479658 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5798, alignment: 0
Returning buffer pointer: 0x1f002df5798 (aligned: true)
Created staging buffer at: 0x1f002df5798
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a29000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(1020394069576127636), dst: vk.Buffer(15589100158980194763)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1efff479818, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479818, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479818 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5558, alignment: 0
Returning buffer pointer: 0x1f002df5558 (aligned: true)
Created staging buffer at: 0x1f002df5558
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a53000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(17039255940458615958), dst: vk.Buffer(170787141142446541)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5a28, size: 768, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5a28, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5a28 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df52d8, alignment: 0
Returning buffer pointer: 0x1f002df52d8 (aligned: true)
Created staging buffer at: 0x1f002df52d8
Staging buffer cast successful
About to map memory for staging buffer - size: 768
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a24000
About to memcpy 768 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(15365972965820732568), dst: vk.Buffer(1025278100226703827)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,8.0e0,8.8e1] to [1.3e2,2.4e1,9.6e1]
Buffer handles - SDF: vk.Buffer(15589100158980194763), Params: vk.Buffer(16655718796899647951), Output: vk.Buffer(15344826058683711953)
generateWorldAdaptive called - offset: 0, max_workgroups: 12
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
getBufferDeviceAddress called for buffer: vk.Buffer(170787141142446541)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534177280
Using actual brush buffer with address: 0x238480000
Dispatching brush chunk: offset=0, size=12 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=12, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002df50d8, alignment: 0
Returning buffer pointer: 0x1f002df50d8 (aligned: true)
Submitting readback 432 at frame 446 (will be ready at frame 449)
Successfully queued 12 minichunks from this batch
Processing pending minichunk batch for chunk ChunkId(1, 0, 1) with 24 minichunks (available workspaces: 1)
Allocating workspace 1 (current_index: 1)
Available workspaces after allocation: 0/3
Processing 14 minichunks in workspace 1
Overall bounds: [64, 0, 72] to [128, 64, 88]
renderer_buffer_write called - buffer: anyopaque@1f002cf5c68, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5c68, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5c68 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbba48, alignment: 0
Returning buffer pointer: 0x1f002dbba48 (aligned: true)
Created staging buffer at: 0x1f002dbba48
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a4e000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(2127741916723287197), dst: vk.Buffer(17645821321130541531)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5768, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5768, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5768 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbf08, alignment: 0
Returning buffer pointer: 0x1f002dbbf08 (aligned: true)
Created staging buffer at: 0x1f002dbbf08
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a3d000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(11456453764588770463), dst: vk.Buffer(14073195781184029143)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5928, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5928, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5928 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbac8, alignment: 0
Returning buffer pointer: 0x1f002dbbac8 (aligned: true)
Created staging buffer at: 0x1f002dbbac8
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a1d000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(14099158549250708641), dst: vk.Buffer(16705046187056562649)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf57e8, size: 896, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf57e8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf57e8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbe48, alignment: 0
Returning buffer pointer: 0x1f002dbbe48 (aligned: true)
Created staging buffer at: 0x1f002dbbe48
Staging buffer cast successful
About to map memory for staging buffer - size: 896
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a0b000
About to memcpy 896 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(2828264964035187875), dst: vk.Buffer(18334454249699672543)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,0.0e0,7.2e1] to [1.3e2,6.4e1,8.8e1]
Buffer handles - SDF: vk.Buffer(14073195781184029143), Params: vk.Buffer(17645821321130541531), Output: vk.Buffer(18233758775804690909)
generateWorldAdaptive called - offset: 0, max_workgroups: 14
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x8x2 workgroups for 64x64x16 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=8, z=2
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
getBufferDeviceAddress called for buffer: vk.Buffer(16705046187056562649)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545711616
Using actual brush buffer with address: 0x238f80000
Dispatching brush chunk: offset=0, size=14 (of 128 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=14, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002dbbf88, alignment: 0
Returning buffer pointer: 0x1f002dbbf88 (aligned: true)
Submitting readback 433 at frame 446 (will be ready at frame 449)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 1: No available workspace in ring buffer
Re-queuing 10 remaining minichunks from batch
Successfully queued 14 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 38.9ms (target: 10.0ms), Workgroups: 15 -> 15 (PID: 16)
DeferredReadbackManager: advanced to frame 447
Processing readbacks: 3 pending, completed_frame: 447, frames_in_flight: 3
Checking readback 431: submitted frame 444, current frame 447, 3 frames elapsed (need 3)
Readback 431 ready (submitted frame 444, current frame 447)
Checking readback 432: submitted frame 446, current frame 447, 1 frames elapsed (need 3)
Processing 1 completed readbacks
Minichunk batch readback complete for workspace 2 (1 minichunks, 2048 bytes)
Adding minichunk at offset (56, 24, 32) with 512 non-empty voxels
Minichunk 428/512 completed
Releasing workspace 2 (was in_use: true)
Available workspaces after release: 1/3
Force processing old readbacks: 2 pending, max age: 3 frames, current frame: 447
Velocity: [0.00, 0.00, 11754.14] speed=11754.14 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -76377.89] | Torque: [317467.000, 766433.188, 243601.000]
  Angular vel: current=[-3282.955, -7925.755, -2519.100] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.042 units: [5.00, 5.00, 241.12] -> [5.00, 5.00, 241.08]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-3282.38, -7924.38, -2518.66] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 0
Command buffer begun in frame_begin
Processing readbacks: 2 pending, completed_frame: 447, frames_in_flight: 3
Checking readback 432: submitted frame 446, current frame 447, 1 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 3 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(1, 0, 1) with 24 minichunks (available workspaces: 1)
Allocating workspace 2 (current_index: 2)
Available workspaces after allocation: 0/3
Processing 15 minichunks in workspace 2
Overall bounds: [64, 48, 64] to [128, 64, 72]
renderer_buffer_write called - buffer: anyopaque@1f002cf5be8, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5be8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5be8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbb48, alignment: 0
Returning buffer pointer: 0x1f002dbbb48 (aligned: true)
Created staging buffer at: 0x1f002dbbb48
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a0c000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(9820265013737165992), dst: vk.Buffer(10094846052541661671)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5ba8, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ba8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5ba8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbbc8, alignment: 0
Returning buffer pointer: 0x1f002dbbbc8 (aligned: true)
Created staging buffer at: 0x1f002dbbbc8
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a1e000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(3627039270893524138), dst: vk.Buffer(16700742698545447395)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5ca8, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ca8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5ca8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d83bb8, alignment: 0
Returning buffer pointer: 0x1f002d83bb8 (aligned: true)
Created staging buffer at: 0x1f002d83bb8
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a4f000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(3827060227195278508), dst: vk.Buffer(17497165150031970789)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf58a8, size: 960, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf58a8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf58a8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d83cf8, alignment: 0
Returning buffer pointer: 0x1f002d83cf8 (aligned: true)
Created staging buffer at: 0x1f002d83cf8
Staging buffer cast successful
About to map memory for staging buffer - size: 960
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a2f000
About to memcpy 960 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(9549583942676386990), dst: vk.Buffer(14063823544068866539)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,4.8e1,6.4e1] to [1.3e2,6.4e1,7.2e1]
Buffer handles - SDF: vk.Buffer(16700742698545447395), Params: vk.Buffer(10094846052541661671), Output: vk.Buffer(17114293211007812073)
generateWorldAdaptive called - offset: 0, max_workgroups: 15
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
getBufferDeviceAddress called for buffer: vk.Buffer(17497165150031970789)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557245952
Using actual brush buffer with address: 0x239a80000
Dispatching brush chunk: offset=0, size=15 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=15, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002d83e38, alignment: 0
Returning buffer pointer: 0x1f002d83e38 (aligned: true)
Submitting readback 434 at frame 447 (will be ready at frame 450)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 1: No available workspace in ring buffer
Re-queuing 9 remaining minichunks from batch
Successfully queued 15 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 38.4ms (target: 10.0ms), Workgroups: 14 -> 14 (PID: 11)
DeferredReadbackManager: advanced to frame 448
Processing readbacks: 3 pending, completed_frame: 448, frames_in_flight: 3
Checking readback 432: submitted frame 446, current frame 448, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 3 pending, max age: 3 frames, current frame: 448
Velocity: [0.00, 0.00, 4403.83] speed=4403.83 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -34096.43] | Torque: [176920.062, 427122.875, 135755.562]
  Angular vel: current=[-4985.311, -12035.607, -3825.365] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.042 units: [5.00, 5.00, 241.08] -> [5.00, 5.00, 241.04]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-4984.44, -12033.51, -3824.70] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 1
Command buffer begun in frame_begin
Processing readbacks: 3 pending, completed_frame: 448, frames_in_flight: 3
Checking readback 432: submitted frame 446, current frame 448, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 3 batches waiting, 1 active chunks
No available workspaces, stopping batch processing
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 34.5ms (target: 10.0ms), Workgroups: 13 -> 13 (PID: 4)
DeferredReadbackManager: advanced to frame 449
Processing readbacks: 3 pending, completed_frame: 449, frames_in_flight: 3
Checking readback 432: submitted frame 446, current frame 449, 3 frames elapsed (need 3)
Readback 432 ready (submitted frame 446, current frame 449)
Checking readback 433: submitted frame 446, current frame 449, 3 frames elapsed (need 3)
Readback 433 ready (submitted frame 446, current frame 449)
Checking readback 434: submitted frame 447, current frame 449, 2 frames elapsed (need 3)
Processing 2 completed readbacks
Minichunk batch readback complete for workspace 0 (12 minichunks, 24576 bytes)
Adding minichunk at offset (32, 8, 24) with 512 non-empty voxels
Minichunk 429/512 completed
Adding minichunk at offset (40, 8, 24) with 512 non-empty voxels
Minichunk 430/512 completed
Adding minichunk at offset (48, 8, 24) with 512 non-empty voxels
Minichunk 431/512 completed
Adding minichunk at offset (56, 8, 24) with 512 non-empty voxels
Minichunk 432/512 completed
Adding minichunk at offset (0, 16, 24) with 512 non-empty voxels
Minichunk 433/512 completed
Adding minichunk at offset (8, 16, 24) with 512 non-empty voxels
Minichunk 434/512 completed
Adding minichunk at offset (16, 16, 24) with 512 non-empty voxels
Minichunk 435/512 completed
Adding minichunk at offset (24, 16, 24) with 512 non-empty voxels
Minichunk 436/512 completed
Adding minichunk at offset (32, 16, 24) with 512 non-empty voxels
Minichunk 437/512 completed
Adding minichunk at offset (40, 16, 24) with 512 non-empty voxels
Minichunk 438/512 completed
Adding minichunk at offset (48, 16, 24) with 512 non-empty voxels
Minichunk 439/512 completed
Adding minichunk at offset (56, 16, 24) with 512 non-empty voxels
Minichunk 440/512 completed
Releasing workspace 0 (was in_use: true)
Available workspaces after release: 1/3
Minichunk batch readback complete for workspace 1 (14 minichunks, 28672 bytes)
Adding minichunk at offset (0, 56, 8) with 512 non-empty voxels
Minichunk 441/512 completed
Adding minichunk at offset (8, 56, 8) with 512 non-empty voxels
Minichunk 442/512 completed
Adding minichunk at offset (16, 56, 8) with 512 non-empty voxels
Minichunk 443/512 completed
Adding minichunk at offset (24, 56, 8) with 512 non-empty voxels
Minichunk 444/512 completed
Adding minichunk at offset (32, 56, 8) with 512 non-empty voxels
Minichunk 445/512 completed
Adding minichunk at offset (40, 56, 8) with 512 non-empty voxels
Minichunk 446/512 completed
Adding minichunk at offset (48, 56, 8) with 512 non-empty voxels
Minichunk 447/512 completed
Adding minichunk at offset (56, 56, 8) with 512 non-empty voxels
Minichunk 448/512 completed
Adding minichunk at offset (0, 0, 16) with 512 non-empty voxels
Minichunk 449/512 completed
Adding minichunk at offset (8, 0, 16) with 512 non-empty voxels
Minichunk 450/512 completed
Adding minichunk at offset (16, 0, 16) with 512 non-empty voxels
Minichunk 451/512 completed
Adding minichunk at offset (24, 0, 16) with 512 non-empty voxels
Minichunk 452/512 completed
Adding minichunk at offset (32, 0, 16) with 512 non-empty voxels
Minichunk 453/512 completed
Adding minichunk at offset (40, 0, 16) with 512 non-empty voxels
Minichunk 454/512 completed
Releasing workspace 1 (was in_use: true)
Available workspaces after release: 2/3
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 449
Velocity: [0.00, 0.00, 6687.39] speed=6687.39 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -37489.18] | Torque: [214597.734, 518084.844, 164666.688]
  Angular vel: current=[-7488.680, -18079.275, -5746.268] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.042 units: [5.00, 5.00, 241.04] -> [5.00, 5.00, 241.00]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-7487.38, -18076.13, -5745.27] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 449, frames_in_flight: 3
Checking readback 434: submitted frame 447, current frame 449, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 3 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(1, 0, 1) with 24 minichunks (available workspaces: 2)
Allocating workspace 0 (current_index: 0)
Available workspaces after allocation: 1/3
Processing 13 minichunks in workspace 0
Overall bounds: [64, 32, 72] to [128, 48, 80]
renderer_buffer_write called - buffer: anyopaque@1efff479918, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479918, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479918 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d840b8, alignment: 0
Returning buffer pointer: 0x1f002d840b8 (aligned: true)
Created staging buffer at: 0x1f002d840b8
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a30000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(4331922981321184435), dst: vk.Buffer(16655718796899647951)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1efff479658, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479658, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479658 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d84178, alignment: 0
Returning buffer pointer: 0x1f002d84178 (aligned: true)
Created staging buffer at: 0x1f002d84178
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a55000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(4866679257583064245), dst: vk.Buffer(15589100158980194763)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1efff479818, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479818, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479818 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d84278, alignment: 0
Returning buffer pointer: 0x1f002d84278 (aligned: true)
Created staging buffer at: 0x1f002d84278
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a56000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(13214257297565422775), dst: vk.Buffer(170787141142446541)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5a28, size: 832, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5a28, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5a28 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d842f8, alignment: 0
Returning buffer pointer: 0x1f002d842f8 (aligned: true)
Created staging buffer at: 0x1f002d842f8
Staging buffer cast successful
About to map memory for staging buffer - size: 832
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a13000
About to memcpy 832 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(3511944592721188025), dst: vk.Buffer(1025278100226703827)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,3.2e1,7.2e1] to [1.3e2,4.8e1,8.0e1]
Buffer handles - SDF: vk.Buffer(15589100158980194763), Params: vk.Buffer(16655718796899647951), Output: vk.Buffer(15344826058683711953)
generateWorldAdaptive called - offset: 0, max_workgroups: 13
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
getBufferDeviceAddress called for buffer: vk.Buffer(170787141142446541)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534177280
Using actual brush buffer with address: 0x238480000
Dispatching brush chunk: offset=0, size=13 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=13, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002d83cb8, alignment: 0
Returning buffer pointer: 0x1f002d83cb8 (aligned: true)
Submitting readback 435 at frame 449 (will be ready at frame 452)
Allocating workspace 1 (current_index: 1)
Available workspaces after allocation: 0/3
Processing 11 minichunks in workspace 1
Overall bounds: [64, 40, 72] to [128, 56, 80]
renderer_buffer_write called - buffer: anyopaque@1f002cf5c68, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5c68, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5c68 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5698, alignment: 0
Returning buffer pointer: 0x1f002df5698 (aligned: true)
Created staging buffer at: 0x1f002df5698
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a14000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(5779314590567371966), dst: vk.Buffer(17645821321130541531)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5768, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5768, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5768 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df55d8, alignment: 0
Returning buffer pointer: 0x1f002df55d8 (aligned: true)
Created staging buffer at: 0x1f002df55d8
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a5f000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(12249225837471077568), dst: vk.Buffer(14073195781184029143)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5928, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5928, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5928 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5318, alignment: 0
Returning buffer pointer: 0x1f002df5318 (aligned: true)
Created staging buffer at: 0x1f002df5318
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a60000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(479435448221963458), dst: vk.Buffer(16705046187056562649)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf57e8, size: 704, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf57e8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf57e8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5518, alignment: 0
Returning buffer pointer: 0x1f002df5518 (aligned: true)
Created staging buffer at: 0x1f002df5518
Staging buffer cast successful
About to map memory for staging buffer - size: 704
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a22000
About to memcpy 704 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(6660570961206580420), dst: vk.Buffer(18334454249699672543)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,4.0e1,7.2e1] to [1.3e2,5.6e1,8.0e1]
Buffer handles - SDF: vk.Buffer(14073195781184029143), Params: vk.Buffer(17645821321130541531), Output: vk.Buffer(18233758775804690909)
generateWorldAdaptive called - offset: 0, max_workgroups: 11
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
getBufferDeviceAddress called for buffer: vk.Buffer(16705046187056562649)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545711616
Using actual brush buffer with address: 0x238f80000
Dispatching brush chunk: offset=0, size=11 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=11, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002df5398, alignment: 0
Returning buffer pointer: 0x1f002df5398 (aligned: true)
Submitting readback 436 at frame 449 (will be ready at frame 452)
Successfully queued 24 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 39.2ms (target: 10.0ms), Workgroups: 14 -> 14 (PID: 16)
DeferredReadbackManager: advanced to frame 450
Processing readbacks: 3 pending, completed_frame: 450, frames_in_flight: 3
Checking readback 434: submitted frame 447, current frame 450, 3 frames elapsed (need 3)
Readback 434 ready (submitted frame 447, current frame 450)
Checking readback 435: submitted frame 449, current frame 450, 1 frames elapsed (need 3)
Processing 1 completed readbacks
Minichunk batch readback complete for workspace 2 (15 minichunks, 30720 bytes)
Adding minichunk at offset (0, 48, 0) with 512 non-empty voxels
Minichunk 455/512 completed
Adding minichunk at offset (8, 48, 0) with 512 non-empty voxels
Minichunk 456/512 completed
Adding minichunk at offset (16, 48, 0) with 512 non-empty voxels
Minichunk 457/512 completed
Adding minichunk at offset (24, 48, 0) with 512 non-empty voxels
Minichunk 458/512 completed
Adding minichunk at offset (32, 48, 0) with 512 non-empty voxels
Minichunk 459/512 completed
Adding minichunk at offset (40, 48, 0) with 512 non-empty voxels
Minichunk 460/512 completed
Adding minichunk at offset (48, 48, 0) with 512 non-empty voxels
Minichunk 461/512 completed
Adding minichunk at offset (56, 48, 0) with 512 non-empty voxels
Minichunk 462/512 completed
Adding minichunk at offset (0, 56, 0) with 512 non-empty voxels
Minichunk 463/512 completed
Adding minichunk at offset (8, 56, 0) with 512 non-empty voxels
Minichunk 464/512 completed
Adding minichunk at offset (16, 56, 0) with 512 non-empty voxels
Minichunk 465/512 completed
Adding minichunk at offset (24, 56, 0) with 512 non-empty voxels
Minichunk 466/512 completed
Adding minichunk at offset (32, 56, 0) with 512 non-empty voxels
Minichunk 467/512 completed
Adding minichunk at offset (40, 56, 0) with 512 non-empty voxels
Minichunk 468/512 completed
Adding minichunk at offset (48, 56, 0) with 512 non-empty voxels
Minichunk 469/512 completed
Releasing workspace 2 (was in_use: true)
Available workspaces after release: 1/3
Force processing old readbacks: 2 pending, max age: 3 frames, current frame: 450
Velocity: [0.00, 0.00, 10045.44] speed=10045.44 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -63961.95] | Torque: [269048.031, 649539.500, 206447.875]
  Angular vel: current=[-3067.879, -7406.516, -2354.067] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.042 units: [5.00, 5.00, 241.00] -> [5.00, 5.00, 240.96]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-3067.35, -7405.24, -2353.66] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true

=== Camera State ===
Position: [5.00, 5.00, 240.96]
Rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°]
Mesh Generator: SimpleCube
==================
Controls:
  WASD/Left Stick: Move
  Mouse/Right Stick: Look
  Left Click/RT: Place voxel
  Right Click/LT: Remove voxel
  B/Circle: Toggle mesh generator
  Start/Menu: Save/Load world

Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 0
Command buffer begun in frame_begin
Processing readbacks: 2 pending, completed_frame: 450, frames_in_flight: 3
Checking readback 435: submitted frame 449, current frame 450, 1 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 2 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(1, 0, 1) with 10 minichunks (available workspaces: 1)
Allocating workspace 2 (current_index: 2)
Available workspaces after allocation: 0/3
Processing 10 minichunks in workspace 2
Overall bounds: [64, 0, 80] to [128, 16, 88]
renderer_buffer_write called - buffer: anyopaque@1f002cf5be8, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5be8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5be8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5198, alignment: 0
Returning buffer pointer: 0x1f002df5198 (aligned: true)
Created staging buffer at: 0x1f002df5198
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a40000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(4929047955157030089), dst: vk.Buffer(10094846052541661671)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5ba8, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ba8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5ba8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5418, alignment: 0
Returning buffer pointer: 0x1f002df5418 (aligned: true)
Created staging buffer at: 0x1f002df5418
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a61000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(1661245521336997067), dst: vk.Buffer(16700742698545447395)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5ca8, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ca8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5ca8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5618, alignment: 0
Returning buffer pointer: 0x1f002df5618 (aligned: true)
Created staging buffer at: 0x1f002df5618
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a62000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(10561803143299994829), dst: vk.Buffer(17497165150031970789)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf58a8, size: 640, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf58a8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf58a8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df53d8, alignment: 0
Returning buffer pointer: 0x1f002df53d8 (aligned: true)
Created staging buffer at: 0x1f002df53d8
Staging buffer cast successful
About to map memory for staging buffer - size: 640
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a31000
About to memcpy 640 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(5321796807133500623), dst: vk.Buffer(14063823544068866539)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,0.0e0,8.0e1] to [1.3e2,1.6e1,8.8e1]
Buffer handles - SDF: vk.Buffer(16700742698545447395), Params: vk.Buffer(10094846052541661671), Output: vk.Buffer(17114293211007812073)
generateWorldAdaptive called - offset: 0, max_workgroups: 10
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
getBufferDeviceAddress called for buffer: vk.Buffer(17497165150031970789)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557245952
Using actual brush buffer with address: 0x239a80000
Dispatching brush chunk: offset=0, size=10 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=10, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002df5098, alignment: 0
Returning buffer pointer: 0x1f002df5098 (aligned: true)
Submitting readback 437 at frame 450 (will be ready at frame 453)
Successfully queued 10 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 40.0ms (target: 10.0ms), Workgroups: 15 -> 15 (PID: 16)
DeferredReadbackManager: advanced to frame 451
Processing readbacks: 3 pending, completed_frame: 451, frames_in_flight: 3
Checking readback 435: submitted frame 449, current frame 451, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 3 pending, max age: 3 frames, current frame: 451
Velocity: [0.00, 0.00, 4115.29] speed=4115.29 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -33832.30] | Torque: [169999.062, 410414.094, 130444.883]
  Angular vel: current=[-4391.503, -10602.028, -3369.719] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.042 units: [5.00, 5.00, 240.96] -> [5.00, 5.00, 240.91]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-4390.74, -10600.18, -3369.13] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 1
Command buffer begun in frame_begin
Processing readbacks: 3 pending, completed_frame: 451, frames_in_flight: 3
Checking readback 435: submitted frame 449, current frame 451, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 1 batches waiting, 1 active chunks
No available workspaces, stopping batch processing
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 35.8ms (target: 10.0ms), Workgroups: 14 -> 14 (PID: 4)
DeferredReadbackManager: advanced to frame 452
Processing readbacks: 3 pending, completed_frame: 452, frames_in_flight: 3
Checking readback 435: submitted frame 449, current frame 452, 3 frames elapsed (need 3)
Readback 435 ready (submitted frame 449, current frame 452)
Checking readback 436: submitted frame 449, current frame 452, 3 frames elapsed (need 3)
Readback 436 ready (submitted frame 449, current frame 452)
Checking readback 437: submitted frame 450, current frame 452, 2 frames elapsed (need 3)
Processing 2 completed readbacks
Minichunk batch readback complete for workspace 0 (13 minichunks, 26624 bytes)
Adding minichunk at offset (0, 32, 8) with 512 non-empty voxels
Minichunk 470/512 completed
Adding minichunk at offset (8, 32, 8) with 512 non-empty voxels
Minichunk 471/512 completed
Adding minichunk at offset (16, 32, 8) with 512 non-empty voxels
Minichunk 472/512 completed
Adding minichunk at offset (24, 32, 8) with 512 non-empty voxels
Minichunk 473/512 completed
Adding minichunk at offset (32, 32, 8) with 512 non-empty voxels
Minichunk 474/512 completed
Adding minichunk at offset (40, 32, 8) with 512 non-empty voxels
Minichunk 475/512 completed
Adding minichunk at offset (48, 32, 8) with 512 non-empty voxels
Minichunk 476/512 completed
Adding minichunk at offset (56, 32, 8) with 512 non-empty voxels
Minichunk 477/512 completed
Adding minichunk at offset (0, 40, 8) with 512 non-empty voxels
Minichunk 478/512 completed
Adding minichunk at offset (8, 40, 8) with 512 non-empty voxels
Minichunk 479/512 completed
Adding minichunk at offset (16, 40, 8) with 512 non-empty voxels
Minichunk 480/512 completed
Adding minichunk at offset (24, 40, 8) with 512 non-empty voxels
Minichunk 481/512 completed
Adding minichunk at offset (32, 40, 8) with 512 non-empty voxels
Minichunk 482/512 completed
Releasing workspace 0 (was in_use: true)
Available workspaces after release: 1/3
Minichunk batch readback complete for workspace 1 (11 minichunks, 22528 bytes)
Adding minichunk at offset (40, 40, 8) with 512 non-empty voxels
Minichunk 483/512 completed
Adding minichunk at offset (48, 40, 8) with 512 non-empty voxels
Minichunk 484/512 completed
Adding minichunk at offset (56, 40, 8) with 512 non-empty voxels
Minichunk 485/512 completed
Adding minichunk at offset (0, 48, 8) with 512 non-empty voxels
Minichunk 486/512 completed
Adding minichunk at offset (8, 48, 8) with 512 non-empty voxels
Minichunk 487/512 completed
Adding minichunk at offset (16, 48, 8) with 512 non-empty voxels
Minichunk 488/512 completed
Adding minichunk at offset (24, 48, 8) with 512 non-empty voxels
Minichunk 489/512 completed
Adding minichunk at offset (32, 48, 8) with 512 non-empty voxels
Minichunk 490/512 completed
Adding minichunk at offset (40, 48, 8) with 512 non-empty voxels
Minichunk 491/512 completed
Adding minichunk at offset (48, 48, 8) with 512 non-empty voxels
Minichunk 492/512 completed
Adding minichunk at offset (56, 48, 8) with 512 non-empty voxels
Minichunk 493/512 completed
Releasing workspace 1 (was in_use: true)
Available workspaces after release: 2/3
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 452
Velocity: [0.00, 0.00, 5890.79] speed=5890.79 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -12198.23] | Torque: [129957.875, 313746.062, 99720.188]
  Angular vel: current=[-8449.942, -20399.969, -6483.870] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.042 units: [5.00, 5.00, 240.91] -> [5.00, 5.00, 240.87]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-8448.48, -20396.43, -6482.75] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 452, frames_in_flight: 3
Checking readback 437: submitted frame 450, current frame 452, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 1 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(1, 0, 1) with 9 minichunks (available workspaces: 2)
Allocating workspace 0 (current_index: 0)
Available workspaces after allocation: 1/3
Processing 9 minichunks in workspace 0
Overall bounds: [64, 0, 64] to [128, 64, 80]
renderer_buffer_write called - buffer: anyopaque@1efff479918, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479918, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479918 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df50d8, alignment: 0
Returning buffer pointer: 0x1f002df50d8 (aligned: true)
Created staging buffer at: 0x1f002df50d8
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b0d000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(7612043243907192020), dst: vk.Buffer(16655718796899647951)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1efff479658, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479658, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479658 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5218, alignment: 0
Returning buffer pointer: 0x1f002df5218 (aligned: true)
Created staging buffer at: 0x1f002df5218
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a0f000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(9320721696866440406), dst: vk.Buffer(15589100158980194763)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1efff479818, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479818, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479818 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5398, alignment: 0
Returning buffer pointer: 0x1f002df5398 (aligned: true)
Created staging buffer at: 0x1f002df5398
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a10000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(8813162940229227736), dst: vk.Buffer(170787141142446541)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5a28, size: 576, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5a28, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5a28 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5118, alignment: 0
Returning buffer pointer: 0x1f002df5118 (aligned: true)
Created staging buffer at: 0x1f002df5118
Staging buffer cast successful
About to map memory for staging buffer - size: 576
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b0e000
About to memcpy 576 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(9197659957439239386), dst: vk.Buffer(1025278100226703827)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,0.0e0,6.4e1] to [1.3e2,6.4e1,8.0e1]
Buffer handles - SDF: vk.Buffer(15589100158980194763), Params: vk.Buffer(16655718796899647951), Output: vk.Buffer(15344826058683711953)
generateWorldAdaptive called - offset: 0, max_workgroups: 9
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x8x2 workgroups for 64x64x16 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=8, z=2
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
getBufferDeviceAddress called for buffer: vk.Buffer(170787141142446541)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534177280
Using actual brush buffer with address: 0x238480000
Dispatching brush chunk: offset=0, size=9 (of 128 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=9, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002df54d8, alignment: 0
Returning buffer pointer: 0x1f002df54d8 (aligned: true)
Submitting readback 438 at frame 452 (will be ready at frame 455)
Successfully queued 9 minichunks from this batch
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 37.0ms (target: 10.0ms), Workgroups: 15 -> 15 (PID: 16)
DeferredReadbackManager: advanced to frame 453
Processing readbacks: 2 pending, completed_frame: 453, frames_in_flight: 3
Checking readback 437: submitted frame 450, current frame 453, 3 frames elapsed (need 3)
Readback 437 ready (submitted frame 450, current frame 453)
Checking readback 438: submitted frame 452, current frame 453, 1 frames elapsed (need 3)
Processing 1 completed readbacks
Minichunk batch readback complete for workspace 2 (10 minichunks, 20480 bytes)
Adding minichunk at offset (48, 0, 16) with 512 non-empty voxels
Minichunk 494/512 completed
Adding minichunk at offset (56, 0, 16) with 512 non-empty voxels
Minichunk 495/512 completed
Adding minichunk at offset (0, 8, 16) with 512 non-empty voxels
Minichunk 496/512 completed
Adding minichunk at offset (8, 8, 16) with 512 non-empty voxels
Minichunk 497/512 completed
Adding minichunk at offset (16, 8, 16) with 512 non-empty voxels
Minichunk 498/512 completed
Adding minichunk at offset (24, 8, 16) with 512 non-empty voxels
Minichunk 499/512 completed
Adding minichunk at offset (32, 8, 16) with 512 non-empty voxels
Minichunk 500/512 completed
Adding minichunk at offset (40, 8, 16) with 512 non-empty voxels
Minichunk 501/512 completed
Adding minichunk at offset (48, 8, 16) with 512 non-empty voxels
Minichunk 502/512 completed
Adding minichunk at offset (56, 8, 16) with 512 non-empty voxels
Minichunk 503/512 completed
Releasing workspace 2 (was in_use: true)
Available workspaces after release: 2/3
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 453
Velocity: [0.00, 0.00, 11334.77] speed=11334.77 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -88623.19] | Torque: [374893.312, 905072.688, 287665.812]
  Angular vel: current=[-4461.442, -10770.876, -3423.385] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.041 units: [5.00, 5.00, 240.87] -> [5.00, 5.00, 240.83]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-4460.67, -10769.02, -3422.80] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 0
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 453, frames_in_flight: 3
Checking readback 438: submitted frame 452, current frame 453, 1 frames elapsed (need 3)
Processing 0 completed readbacks
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 33.1ms (target: 10.0ms), Workgroups: 14 -> 14 (PID: 4)
DeferredReadbackManager: advanced to frame 454
Processing readbacks: 1 pending, completed_frame: 454, frames_in_flight: 3
Checking readback 438: submitted frame 452, current frame 454, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 454
Velocity: [0.00, 0.00, 5984.58] speed=5984.58 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, 68368.99] | Torque: [-137792.188, -332659.625, -105731.656]
  Angular vel: current=[-11700.803, -28248.240, -8978.343] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.041 units: [5.00, 5.00, 240.83] -> [5.00, 5.00, 240.79]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-11698.79, -28243.39, -8976.80] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 8, pending meshes: 0
Checking 8 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 1
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 454, frames_in_flight: 3
Checking readback 438: submitted frame 452, current frame 454, 2 frames elapsed (need 3)
Processing 0 completed readbacks
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 29.6ms (target: 10.0ms), Workgroups: 13 -> 13 (PID: 4)
DeferredReadbackManager: advanced to frame 455
Processing readbacks: 1 pending, completed_frame: 455, frames_in_flight: 3
Checking readback 438: submitted frame 452, current frame 455, 3 frames elapsed (need 3)
Readback 438 ready (submitted frame 452, current frame 455)
Processing 1 completed readbacks
Minichunk batch readback complete for workspace 0 (9 minichunks, 18432 bytes)
Adding minichunk at offset (56, 56, 0) with 512 non-empty voxels
Minichunk 504/512 completed
Adding minichunk at offset (0, 0, 8) with 512 non-empty voxels
Minichunk 505/512 completed
Adding minichunk at offset (8, 0, 8) with 512 non-empty voxels
Minichunk 506/512 completed
Adding minichunk at offset (16, 0, 8) with 512 non-empty voxels
Minichunk 507/512 completed
Adding minichunk at offset (24, 0, 8) with 512 non-empty voxels
Minichunk 508/512 completed
Adding minichunk at offset (32, 0, 8) with 512 non-empty voxels
Minichunk 509/512 completed
Adding minichunk at offset (40, 0, 8) with 512 non-empty voxels
Minichunk 510/512 completed
Adding minichunk at offset (48, 0, 8) with 512 non-empty voxels
Minichunk 511/512 completed
Adding minichunk at offset (56, 0, 8) with 512 non-empty voxels
Minichunk 512/512 completed
Chunk ChunkId(1, 0, 1) complete! All 512 minichunks processed
Releasing workspace 0 (was in_use: true)
Available workspaces after release: 3/3
GPU generation completed successfully
GPU generation completed successfully. Voxel count: 262144
Velocity: [0.00, 0.00, 15695.42] speed=15695.42 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -153209.08] | Torque: [657791.125, 1588048.375, 504740.938]
  Angular vel: current=[-8681.188, -20958.244, -6661.311] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
Non-empty voxels: 262144
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: GPU pipeline worker: Processing request 15 with priority 7
gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBufferGPU generation thread spawned for bounds: [64.0,64.0,0.0] to [128.0,128.0,64.0]
(2129473653360)GPU generation: starting for 262144 voxels

  pipeline: vk.Pipelinequeue_generation_blocking returned: true
(2974440636901491137)GPU generation: waiting for result...

  pipeline_layout: Async generation completed for chunk ChunkId(1, 0, 1)
vk.PipelineLayout(14968327988565770688)
Sending result for chunk ChunkId(1, 0, 1) through channel
  vkd pointer: vk.DeviceDispatch@1efce700b30Result sent successfully for chunk ChunkId(1, 0, 1)

  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.041 units: [5.00, 5.00, 240.79] -> [5.00, 5.00, 240.75]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-8679.71, -20954.66, -6660.17] target: [0.00, 0.00, 0.00]
Received generation result 1 for region RegionId(0, 0, 0)
Processing single chunk workspace for chunk ChunkId(1, 0, 1)
Chunk ChunkId(1, 0, 1) has 262144 non-empty voxels out of 262144
First few non-empty voxels in chunk ChunkId(1, 0, 1):
  Voxel at (0,0,0): type 3735928559
  Voxel at (1,0,0): type 3735928559
  Voxel at (2,0,0): type 3735928559
  Voxel at (3,0,0): type 3735928559
  Voxel at (4,0,0): type 3735928559
  Voxel at (5,0,0): type 3735928559
  Voxel at (6,0,0): type 3735928559
  Voxel at (7,0,0): type 3735928559
  Voxel at (8,0,0): type 3735928559
  Voxel at (9,0,0): type 3735928559
Extracted 1 chunks from region RegionId(0, 0, 0)
  Chunk ChunkId(1, 0, 1): palette size 1, 32768 bytes compressed
Adding chunk ChunkId(1, 0, 1) to active_chunks (total: 9)
Decompressed 262144 voxels for chunk ChunkId(1, 0, 1), 262144 non-empty
  First 10 voxels: [Voxel(3735928559), Voxel(3735928559), Voxel(3735928559), Voxel(3735928559), Voxel(3735928559), Voxel(3735928559), Voxel(3735928559), Voxel(3735928559), Voxel(3735928559), Voxel(3735928559)]
Successfully sent chunk ChunkId(1, 0, 1) to mesh generation
Creating generation params for region RegionId(0, 0, 0)
Region RegionId(0, 0, 0) world bounds: min=[0,0,0] max=[256,256,256]
Creating plane SDF with normal [0, 0, 1] and distance 0
get_chunks_for_rendering called - active chunks: 9, pending meshes: 0
Checking 9 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing 0 completed readbacks
Main thread: Execute GPU worldgen for bounds [64.0,64.0,0.0] to [128.0,128.0,64.0]
Processing chunk ChunkId(1, 1, 0) as minichunks
Creating ChunkAccumulator: 262144 voxels, 512 minichunks (8 per axis)
Queuing 512 minichunks for chunk ChunkId(1, 1, 0)
Processing 512 minichunks in 20 batches of up to 26 each (frames_in_flight: 3)
PID controller: Processing 13 minichunks per workspace (workgroup budget: 13)
Allocating workspace 1 (current_index: 1)
Available workspaces after allocation: 2/3
Processing 13 minichunks in workspace 1
Overall bounds: [64, 64, 0] to [128, 80, 8]
renderer_buffer_write called - buffer: anyopaque@1f002cf5c68, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5c68, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5c68 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5358, alignment: 0
Returning buffer pointer: 0x1f002df5358 (aligned: true)
Created staging buffer at: 0x1f002df5358
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a15000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(8588155582186263775), dst: vk.Buffer(17645821321130541531)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5768, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5768, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5768 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002cf56a8, alignment: 0
Returning buffer pointer: 0x1f002cf56a8 (aligned: true)
Created staging buffer at: 0x1f002cf56a8
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a32000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(8426661513321780449), dst: vk.Buffer(14073195781184029143)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5928, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5928, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5928 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002cf5a68, alignment: 0
Returning buffer pointer: 0x1f002cf5a68 (aligned: true)
Created staging buffer at: 0x1f002cf5a68
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a54000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(5636331899468125411), dst: vk.Buffer(16705046187056562649)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf57e8, size: 832, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf57e8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf57e8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002cf5d28, alignment: 0
Returning buffer pointer: 0x1f002cf5d28 (aligned: true)
Created staging buffer at: 0x1f002cf5d28
Staging buffer cast successful
About to map memory for staging buffer - size: 832
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b0f000
About to memcpy 832 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(7017233841559442661), dst: vk.Buffer(18334454249699672543)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,6.4e1,0.0e0] to [1.3e2,8.0e1,8.0e0]
Buffer handles - SDF: vk.Buffer(14073195781184029143), Params: vk.Buffer(17645821321130541531), Output: vk.Buffer(18233758775804690909)
generateWorldAdaptive called - offset: 0, max_workgroups: 13
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
getBufferDeviceAddress called for buffer: vk.Buffer(16705046187056562649)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545711616
Using actual brush buffer with address: 0x238f80000
Dispatching brush chunk: offset=0, size=13 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=13, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002cf5828, alignment: 0
Returning buffer pointer: 0x1f002cf5828 (aligned: true)
Submitting readback 439 at frame 455 (will be ready at frame 458)
Allocating workspace 2 (current_index: 2)
Available workspaces after allocation: 1/3
Processing 13 minichunks in workspace 2
Overall bounds: [64, 72, 0] to [128, 96, 8]
renderer_buffer_write called - buffer: anyopaque@1f002cf5be8, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5be8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5be8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002cf5d68, alignment: 0
Returning buffer pointer: 0x1f002cf5d68 (aligned: true)
Created staging buffer at: 0x1f002cf5d68
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a41000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(106843942917510378), dst: vk.Buffer(10094846052541661671)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5ba8, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ba8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5ba8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002cf5668, alignment: 0
Returning buffer pointer: 0x1f002cf5668 (aligned: true)
Created staging buffer at: 0x1f002cf5668
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a16000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(6389534747890029804), dst: vk.Buffer(16700742698545447395)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5ca8, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ca8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5ca8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c408, alignment: 0
Returning buffer pointer: 0x1f002d9c408 (aligned: true)
Created staging buffer at: 0x1f002d9c408
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a5d000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(6901258454573257966), dst: vk.Buffer(17497165150031970789)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf58a8, size: 832, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf58a8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf58a8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c688, alignment: 0
Returning buffer pointer: 0x1f002d9c688 (aligned: true)
Created staging buffer at: 0x1f002d9c688
Staging buffer cast successful
About to map memory for staging buffer - size: 832
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b1b000
About to memcpy 832 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(2078494790915200240), dst: vk.Buffer(14063823544068866539)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,7.2e1,0.0e0] to [1.3e2,9.6e1,8.0e0]
Buffer handles - SDF: vk.Buffer(16700742698545447395), Params: vk.Buffer(10094846052541661671), Output: vk.Buffer(17114293211007812073)
generateWorldAdaptive called - offset: 0, max_workgroups: 13
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x3x1 workgroups for 64x24x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=3, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
getBufferDeviceAddress called for buffer: vk.Buffer(17497165150031970789)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557245952
Using actual brush buffer with address: 0x239a80000
Dispatching brush chunk: offset=0, size=13 (of 24 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=13, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002d9c248, alignment: 0
Returning buffer pointer: 0x1f002d9c248 (aligned: true)
Submitting readback 440 at frame 455 (will be ready at frame 458)
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 55.0ms (target: 10.0ms), Workgroups: 14 -> 14 (PID: 16)
DeferredReadbackManager: advanced to frame 456
Processing readbacks: 2 pending, completed_frame: 456, frames_in_flight: 3
Checking readback 439: submitted frame 455, current frame 456, 1 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 2 pending, max age: 3 frames, current frame: 456
Velocity: [0.00, 0.00, 11644.90] speed=11644.90 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -46728.49] | Torque: [191719.922, 462852.875, 147111.891]
  Angular vel: current=[-1757.198, -4242.250, -1348.345] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.044 units: [5.00, 5.00, 240.75] -> [5.00, 5.00, 240.71]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-1756.90, -4241.53, -1348.12] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 9, pending meshes: 0
Checking 9 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 0
Command buffer begun in frame_begin
Processing readbacks: 2 pending, completed_frame: 456, frames_in_flight: 3
Checking readback 439: submitted frame 455, current frame 456, 1 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 19 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(1, 1, 0) with 26 minichunks (available workspaces: 1)
Allocating workspace 0 (current_index: 0)
Available workspaces after allocation: 0/3
Processing 14 minichunks in workspace 0
Overall bounds: [64, 88, 0] to [128, 104, 8]
renderer_buffer_write called - buffer: anyopaque@1efff479918, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479918, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479918 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c788, alignment: 0
Returning buffer pointer: 0x1f002d9c788 (aligned: true)
Created staging buffer at: 0x1f002d9c788
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a2a000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(12308382861580309749), dst: vk.Buffer(16655718796899647951)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1efff479658, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479658, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479658 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c7c8, alignment: 0
Returning buffer pointer: 0x1f002d9c7c8 (aligned: true)
Created staging buffer at: 0x1f002d9c7c8
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a3e000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(5484886267369886967), dst: vk.Buffer(15589100158980194763)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1efff479818, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479818, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479818 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d83e38, alignment: 0
Returning buffer pointer: 0x1f002d83e38 (aligned: true)
Created staging buffer at: 0x1f002d83e38
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a1a000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(3279936644144174329), dst: vk.Buffer(170787141142446541)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5a28, size: 896, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5a28, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5a28 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d83cb8, alignment: 0
Returning buffer pointer: 0x1f002d83cb8 (aligned: true)
Created staging buffer at: 0x1f002d83cb8
Staging buffer cast successful
About to map memory for staging buffer - size: 896
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b1c000
About to memcpy 896 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(10030465248688870651), dst: vk.Buffer(1025278100226703827)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,8.8e1,0.0e0] to [1.3e2,1.0e2,8.0e0]
Buffer handles - SDF: vk.Buffer(15589100158980194763), Params: vk.Buffer(16655718796899647951), Output: vk.Buffer(15344826058683711953)
generateWorldAdaptive called - offset: 0, max_workgroups: 14
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
getBufferDeviceAddress called for buffer: vk.Buffer(170787141142446541)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534177280
Using actual brush buffer with address: 0x238480000
Dispatching brush chunk: offset=0, size=14 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=14, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002d83d38, alignment: 0
Returning buffer pointer: 0x1f002d83d38 (aligned: true)
Submitting readback 441 at frame 456 (will be ready at frame 459)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 1: No available workspace in ring buffer
Re-queuing 12 remaining minichunks from batch
Successfully queued 14 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 53.9ms (target: 10.0ms), Workgroups: 15 -> 15 (PID: 16)
DeferredReadbackManager: advanced to frame 457
Processing readbacks: 3 pending, completed_frame: 457, frames_in_flight: 3
Checking readback 439: submitted frame 455, current frame 457, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 3 pending, max age: 3 frames, current frame: 457
Velocity: [0.00, 0.00, 2357.06] speed=2357.06 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -21471.34] | Torque: [122247.273, 295131.031, 93803.633]
  Angular vel: current=[-4222.777, -10194.688, -3240.252] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 240.71] -> [5.00, 5.00, 240.66]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-4222.01, -10192.84, -3239.67] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 9, pending meshes: 0
Checking 9 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 1
Command buffer begun in frame_begin
Processing readbacks: 3 pending, completed_frame: 457, frames_in_flight: 3
Checking readback 439: submitted frame 455, current frame 457, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 19 batches waiting, 1 active chunks
No available workspaces, stopping batch processing
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 48.4ms (target: 10.0ms), Workgroups: 14 -> 14 (PID: 4)
DeferredReadbackManager: advanced to frame 458
Processing readbacks: 3 pending, completed_frame: 458, frames_in_flight: 3
Checking readback 439: submitted frame 455, current frame 458, 3 frames elapsed (need 3)
Readback 439 ready (submitted frame 455, current frame 458)
Checking readback 440: submitted frame 455, current frame 458, 3 frames elapsed (need 3)
Readback 440 ready (submitted frame 455, current frame 458)
Checking readback 441: submitted frame 456, current frame 458, 2 frames elapsed (need 3)
Processing 2 completed readbacks
Minichunk batch readback complete for workspace 1 (13 minichunks, 26624 bytes)
Adding minichunk at offset (0, 0, 0) with 512 non-empty voxels
Minichunk 1/512 completed
Adding minichunk at offset (8, 0, 0) with 512 non-empty voxels
Minichunk 2/512 completed
Adding minichunk at offset (16, 0, 0) with 512 non-empty voxels
Minichunk 3/512 completed
Adding minichunk at offset (24, 0, 0) with 512 non-empty voxels
Minichunk 4/512 completed
Adding minichunk at offset (32, 0, 0) with 512 non-empty voxels
Minichunk 5/512 completed
Adding minichunk at offset (40, 0, 0) with 512 non-empty voxels
Minichunk 6/512 completed
Adding minichunk at offset (48, 0, 0) with 512 non-empty voxels
Minichunk 7/512 completed
Adding minichunk at offset (56, 0, 0) with 512 non-empty voxels
Minichunk 8/512 completed
Adding minichunk at offset (0, 8, 0) with 512 non-empty voxels
Minichunk 9/512 completed
Adding minichunk at offset (8, 8, 0) with 512 non-empty voxels
Minichunk 10/512 completed
Adding minichunk at offset (16, 8, 0) with 512 non-empty voxels
Minichunk 11/512 completed
Adding minichunk at offset (24, 8, 0) with 512 non-empty voxels
Minichunk 12/512 completed
Adding minichunk at offset (32, 8, 0) with 512 non-empty voxels
Minichunk 13/512 completed
Releasing workspace 1 (was in_use: true)
Available workspaces after release: 1/3
Minichunk batch readback complete for workspace 2 (13 minichunks, 26624 bytes)
Adding minichunk at offset (40, 8, 0) with 512 non-empty voxels
Minichunk 14/512 completed
Adding minichunk at offset (48, 8, 0) with 512 non-empty voxels
Minichunk 15/512 completed
Adding minichunk at offset (56, 8, 0) with 512 non-empty voxels
Minichunk 16/512 completed
Adding minichunk at offset (0, 16, 0) with 512 non-empty voxels
Minichunk 17/512 completed
Adding minichunk at offset (8, 16, 0) with 512 non-empty voxels
Minichunk 18/512 completed
Adding minichunk at offset (16, 16, 0) with 512 non-empty voxels
Minichunk 19/512 completed
Adding minichunk at offset (24, 16, 0) with 512 non-empty voxels
Minichunk 20/512 completed
Adding minichunk at offset (32, 16, 0) with 512 non-empty voxels
Minichunk 21/512 completed
Adding minichunk at offset (40, 16, 0) with 512 non-empty voxels
Minichunk 22/512 completed
Adding minichunk at offset (48, 16, 0) with 512 non-empty voxels
Minichunk 23/512 completed
Adding minichunk at offset (56, 16, 0) with 512 non-empty voxels
Minichunk 24/512 completed
Adding minichunk at offset (0, 24, 0) with 512 non-empty voxels
Minichunk 25/512 completed
Adding minichunk at offset (8, 24, 0) with 512 non-empty voxels
Minichunk 26/512 completed
Releasing workspace 2 (was in_use: true)
Available workspaces after release: 2/3
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 458
Velocity: [0.00, 0.00, 5664.25] speed=5664.25 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -19839.89] | Torque: [151903.453, 366727.375, 116559.625]
  Angular vel: current=[-7796.391, -18822.156, -5982.383] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 240.66] -> [5.00, 5.00, 240.62]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-7794.99, -18818.76, -5981.30] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 9, pending meshes: 0
Checking 9 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 458, frames_in_flight: 3
Checking readback 441: submitted frame 456, current frame 458, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 19 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(1, 1, 0) with 26 minichunks (available workspaces: 2)
Allocating workspace 1 (current_index: 1)
Available workspaces after allocation: 1/3
Processing 14 minichunks in workspace 1
Overall bounds: [64, 72, 8] to [128, 96, 16]
renderer_buffer_write called - buffer: anyopaque@1f002cf5c68, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5c68, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5c68 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d83f78, alignment: 0
Returning buffer pointer: 0x1f002d83f78 (aligned: true)
Created staging buffer at: 0x1f002d83f78
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a57000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(4218249971683562752), dst: vk.Buffer(17645821321130541531)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5768, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5768, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5768 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d83fb8, alignment: 0
Returning buffer pointer: 0x1f002d83fb8 (aligned: true)
Created staging buffer at: 0x1f002d83fb8
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b18000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(4603110927242368258), dst: vk.Buffer(14073195781184029143)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5928, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5928, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5928 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d84038, alignment: 0
Returning buffer pointer: 0x1f002d84038 (aligned: true)
Created staging buffer at: 0x1f002d84038
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a5e000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(13456437927722620164), dst: vk.Buffer(16705046187056562649)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf57e8, size: 896, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf57e8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf57e8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5458, alignment: 0
Returning buffer pointer: 0x1f002df5458 (aligned: true)
Created staging buffer at: 0x1f002df5458
Staging buffer cast successful
About to map memory for staging buffer - size: 896
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a63000
About to memcpy 896 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(2699640795283068166), dst: vk.Buffer(18334454249699672543)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,7.2e1,8.0e0] to [1.3e2,9.6e1,1.6e1]
Buffer handles - SDF: vk.Buffer(14073195781184029143), Params: vk.Buffer(17645821321130541531), Output: vk.Buffer(18233758775804690909)
generateWorldAdaptive called - offset: 0, max_workgroups: 14
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x3x1 workgroups for 64x24x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=3, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
getBufferDeviceAddress called for buffer: vk.Buffer(16705046187056562649)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545711616
Using actual brush buffer with address: 0x238f80000
Dispatching brush chunk: offset=0, size=14 (of 24 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=14, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002df5498, alignment: 0
Returning buffer pointer: 0x1f002df5498 (aligned: true)
Submitting readback 442 at frame 458 (will be ready at frame 461)
Allocating workspace 2 (current_index: 2)
Available workspaces after allocation: 0/3
Processing 12 minichunks in workspace 2
Overall bounds: [64, 88, 8] to [128, 104, 16]
renderer_buffer_write called - buffer: anyopaque@1f002cf5be8, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5be8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5be8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5658, alignment: 0
Returning buffer pointer: 0x1f002df5658 (aligned: true)
Created staging buffer at: 0x1f002df5658
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a58000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(14879770023529813259), dst: vk.Buffer(10094846052541661671)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5ba8, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ba8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5ba8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df56d8, alignment: 0
Returning buffer pointer: 0x1f002df56d8 (aligned: true)
Created staging buffer at: 0x1f002df56d8
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a0d000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(12512510493811807501), dst: vk.Buffer(16700742698545447395)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5ca8, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ca8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5ca8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5158, alignment: 0
Returning buffer pointer: 0x1f002df5158 (aligned: true)
Created staging buffer at: 0x1f002df5158
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a45000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(797994753114248463), dst: vk.Buffer(17497165150031970789)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf58a8, size: 768, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf58a8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf58a8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002cf57a8, alignment: 0
Returning buffer pointer: 0x1f002cf57a8 (aligned: true)
Created staging buffer at: 0x1f002cf57a8
Staging buffer cast successful
About to map memory for staging buffer - size: 768
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a46000
About to memcpy 768 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(15536145479963251985), dst: vk.Buffer(14063823544068866539)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,8.8e1,8.0e0] to [1.3e2,1.0e2,1.6e1]
Buffer handles - SDF: vk.Buffer(16700742698545447395), Params: vk.Buffer(10094846052541661671), Output: vk.Buffer(17114293211007812073)
generateWorldAdaptive called - offset: 0, max_workgroups: 12
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
getBufferDeviceAddress called for buffer: vk.Buffer(17497165150031970789)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557245952
Using actual brush buffer with address: 0x239a80000
Dispatching brush chunk: offset=0, size=12 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=12, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002cf5828, alignment: 0
Returning buffer pointer: 0x1f002cf5828 (aligned: true)
Submitting readback 443 at frame 458 (will be ready at frame 461)
Successfully queued 26 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 51.3ms (target: 10.0ms), Workgroups: 15 -> 15 (PID: 16)
DeferredReadbackManager: advanced to frame 459
Processing readbacks: 3 pending, completed_frame: 459, frames_in_flight: 3
Checking readback 441: submitted frame 456, current frame 459, 3 frames elapsed (need 3)
Readback 441 ready (submitted frame 456, current frame 459)
Checking readback 442: submitted frame 458, current frame 459, 1 frames elapsed (need 3)
Processing 1 completed readbacks
Minichunk batch readback complete for workspace 0 (14 minichunks, 28672 bytes)
Adding minichunk at offset (16, 24, 0) with 512 non-empty voxels
Minichunk 27/512 completed
Adding minichunk at offset (24, 24, 0) with 512 non-empty voxels
Minichunk 28/512 completed
Adding minichunk at offset (32, 24, 0) with 512 non-empty voxels
Minichunk 29/512 completed
Adding minichunk at offset (40, 24, 0) with 512 non-empty voxels
Minichunk 30/512 completed
Adding minichunk at offset (48, 24, 0) with 512 non-empty voxels
Minichunk 31/512 completed
Adding minichunk at offset (56, 24, 0) with 512 non-empty voxels
Minichunk 32/512 completed
Adding minichunk at offset (0, 32, 0) with 512 non-empty voxels
Minichunk 33/512 completed
Adding minichunk at offset (8, 32, 0) with 512 non-empty voxels
Minichunk 34/512 completed
Adding minichunk at offset (16, 32, 0) with 512 non-empty voxels
Minichunk 35/512 completed
Adding minichunk at offset (24, 32, 0) with 512 non-empty voxels
Minichunk 36/512 completed
Adding minichunk at offset (32, 32, 0) with 512 non-empty voxels
Minichunk 37/512 completed
Adding minichunk at offset (40, 32, 0) with 512 non-empty voxels
Minichunk 38/512 completed
Adding minichunk at offset (48, 32, 0) with 512 non-empty voxels
Minichunk 39/512 completed
Adding minichunk at offset (56, 32, 0) with 512 non-empty voxels
Minichunk 40/512 completed
Releasing workspace 0 (was in_use: true)
Available workspaces after release: 1/3
Force processing old readbacks: 2 pending, max age: 3 frames, current frame: 459
Velocity: [0.00, 0.00, 10457.72] speed=10457.72 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -67223.47] | Torque: [281945.156, 680675.875, 216344.188]
  Angular vel: current=[-3141.089, -7583.261, -2410.243] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 240.62] -> [5.00, 5.00, 240.58]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-3140.53, -7581.90, -2409.81] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 9, pending meshes: 0
Checking 9 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 0
Command buffer begun in frame_begin
Processing readbacks: 2 pending, completed_frame: 459, frames_in_flight: 3
Checking readback 442: submitted frame 458, current frame 459, 1 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 18 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(1, 1, 0) with 26 minichunks (available workspaces: 1)
Allocating workspace 0 (current_index: 0)
Available workspaces after allocation: 0/3
Processing 15 minichunks in workspace 0
Overall bounds: [64, 64, 16] to [128, 128, 32]
renderer_buffer_write called - buffer: anyopaque@1efff479918, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479918, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479918 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002cf59a8, alignment: 0
Returning buffer pointer: 0x1f002cf59a8 (aligned: true)
Created staging buffer at: 0x1f002cf59a8
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a64000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(15997662187187344662), dst: vk.Buffer(16655718796899647951)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1efff479658, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479658, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479658 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002cf59e8, alignment: 0
Returning buffer pointer: 0x1f002cf59e8 (aligned: true)
Created staging buffer at: 0x1f002cf59e8
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a27000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(1773682679904998680), dst: vk.Buffer(15589100158980194763)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1efff479818, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479818, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479818 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c648, alignment: 0
Returning buffer pointer: 0x1f002d9c648 (aligned: true)
Created staging buffer at: 0x1f002d9c648
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a1f000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(16236849946693735706), dst: vk.Buffer(170787141142446541)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5a28, size: 960, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5a28, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5a28 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c6c8, alignment: 0
Returning buffer pointer: 0x1f002d9c6c8 (aligned: true)
Created staging buffer at: 0x1f002d9c6c8
Staging buffer cast successful
About to map memory for staging buffer - size: 960
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a20000
About to memcpy 960 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(14253442020860237084), dst: vk.Buffer(1025278100226703827)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,6.4e1,1.6e1] to [1.3e2,1.3e2,3.2e1]
Buffer handles - SDF: vk.Buffer(15589100158980194763), Params: vk.Buffer(16655718796899647951), Output: vk.Buffer(15344826058683711953)
generateWorldAdaptive called - offset: 0, max_workgroups: 15
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x8x2 workgroups for 64x64x16 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=8, z=2
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
getBufferDeviceAddress called for buffer: vk.Buffer(170787141142446541)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534177280
Using actual brush buffer with address: 0x238480000
Dispatching brush chunk: offset=0, size=15 (of 128 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=15, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002d9c488, alignment: 0
Returning buffer pointer: 0x1f002d9c488 (aligned: true)
Submitting readback 444 at frame 459 (will be ready at frame 462)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 1: No available workspace in ring buffer
Re-queuing 11 remaining minichunks from batch
Successfully queued 15 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 49.5ms (target: 10.0ms), Workgroups: 14 -> 14 (PID: 11)
DeferredReadbackManager: advanced to frame 460
Processing readbacks: 3 pending, completed_frame: 460, frames_in_flight: 3
Checking readback 442: submitted frame 458, current frame 460, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 3 pending, max age: 3 frames, current frame: 460
Velocity: [0.00, 0.00, 4213.30] speed=4213.30 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -33017.16] | Torque: [171642.953, 414382.781, 131706.297]
  Angular vel: current=[-4859.188, -11731.117, -3728.586] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 240.58] -> [5.00, 5.00, 240.53]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-4858.31, -11729.00, -3727.91] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 9, pending meshes: 0
Checking 9 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 1
Command buffer begun in frame_begin
Processing readbacks: 3 pending, completed_frame: 460, frames_in_flight: 3
Checking readback 442: submitted frame 458, current frame 460, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 18 batches waiting, 1 active chunks
No available workspaces, stopping batch processing
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 44.3ms (target: 10.0ms), Workgroups: 13 -> 13 (PID: 4)
DeferredReadbackManager: advanced to frame 461
Processing readbacks: 3 pending, completed_frame: 461, frames_in_flight: 3
Checking readback 442: submitted frame 458, current frame 461, 3 frames elapsed (need 3)
Readback 442 ready (submitted frame 458, current frame 461)
Checking readback 443: submitted frame 458, current frame 461, 3 frames elapsed (need 3)
Readback 443 ready (submitted frame 458, current frame 461)
Checking readback 444: submitted frame 459, current frame 461, 2 frames elapsed (need 3)
Processing 2 completed readbacks
Minichunk batch readback complete for workspace 1 (14 minichunks, 28672 bytes)
Adding minichunk at offset (48, 8, 8) with 512 non-empty voxels
Minichunk 41/512 completed
Adding minichunk at offset (56, 8, 8) with 512 non-empty voxels
Minichunk 42/512 completed
Adding minichunk at offset (0, 16, 8) with 512 non-empty voxels
Minichunk 43/512 completed
Adding minichunk at offset (8, 16, 8) with 512 non-empty voxels
Minichunk 44/512 completed
Adding minichunk at offset (16, 16, 8) with 512 non-empty voxels
Minichunk 45/512 completed
Adding minichunk at offset (24, 16, 8) with 512 non-empty voxels
Minichunk 46/512 completed
Adding minichunk at offset (32, 16, 8) with 512 non-empty voxels
Minichunk 47/512 completed
Adding minichunk at offset (40, 16, 8) with 512 non-empty voxels
Minichunk 48/512 completed
Adding minichunk at offset (48, 16, 8) with 512 non-empty voxels
Minichunk 49/512 completed
Adding minichunk at offset (56, 16, 8) with 512 non-empty voxels
Minichunk 50/512 completed
Adding minichunk at offset (0, 24, 8) with 512 non-empty voxels
Minichunk 51/512 completed
Adding minichunk at offset (8, 24, 8) with 512 non-empty voxels
Minichunk 52/512 completed
Adding minichunk at offset (16, 24, 8) with 512 non-empty voxels
Minichunk 53/512 completed
Adding minichunk at offset (24, 24, 8) with 512 non-empty voxels
Minichunk 54/512 completed
Releasing workspace 1 (was in_use: true)
Available workspaces after release: 1/3
Minichunk batch readback complete for workspace 2 (12 minichunks, 24576 bytes)
Adding minichunk at offset (32, 24, 8) with 512 non-empty voxels
Minichunk 55/512 completed
Adding minichunk at offset (40, 24, 8) with 512 non-empty voxels
Minichunk 56/512 completed
Adding minichunk at offset (48, 24, 8) with 512 non-empty voxels
Minichunk 57/512 completed
Adding minichunk at offset (56, 24, 8) with 512 non-empty voxels
Minichunk 58/512 completed
Adding minichunk at offset (0, 32, 8) with 512 non-empty voxels
Minichunk 59/512 completed
Adding minichunk at offset (8, 32, 8) with 512 non-empty voxels
Minichunk 60/512 completed
Adding minichunk at offset (16, 32, 8) with 512 non-empty voxels
Minichunk 61/512 completed
Adding minichunk at offset (24, 32, 8) with 512 non-empty voxels
Minichunk 62/512 completed
Adding minichunk at offset (32, 32, 8) with 512 non-empty voxels
Minichunk 63/512 completed
Adding minichunk at offset (40, 32, 8) with 512 non-empty voxels
Minichunk 64/512 completed
Adding minichunk at offset (48, 32, 8) with 512 non-empty voxels
Minichunk 65/512 completed
Adding minichunk at offset (56, 32, 8) with 512 non-empty voxels
Minichunk 66/512 completed
Releasing workspace 2 (was in_use: true)
Available workspaces after release: 2/3
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 461
Velocity: [0.00, 0.00, 6517.84] speed=6517.84 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -34048.10] | Torque: [202714.031, 489394.906, 155547.969]
  Angular vel: current=[-7582.061, -18304.717, -5817.921] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 240.53] -> [5.00, 5.00, 240.49]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-7580.70, -18301.44, -5816.88] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 9, pending meshes: 0
Checking 9 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 461, frames_in_flight: 3
Checking readback 444: submitted frame 459, current frame 461, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 18 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(1, 1, 0) with 26 minichunks (available workspaces: 2)
Allocating workspace 1 (current_index: 1)
Available workspaces after allocation: 1/3
Processing 13 minichunks in workspace 1
Overall bounds: [64, 64, 48] to [128, 88, 56]
renderer_buffer_write called - buffer: anyopaque@1f002cf5c68, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5c68, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5c68 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c548, alignment: 0
Returning buffer pointer: 0x1f002d9c548 (aligned: true)
Created staging buffer at: 0x1f002d9c548
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a17000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(16845656132063073569), dst: vk.Buffer(17645821321130541531)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5768, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5768, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5768 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c348, alignment: 0
Returning buffer pointer: 0x1f002d9c348 (aligned: true)
Created staging buffer at: 0x1f002d9c348
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a28000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(17650021455548650787), dst: vk.Buffer(14073195781184029143)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5928, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5928, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5928 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c708, alignment: 0
Returning buffer pointer: 0x1f002d9c708 (aligned: true)
Created staging buffer at: 0x1f002d9c708
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a0e000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(17850851652408448293), dst: vk.Buffer(16705046187056562649)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf57e8, size: 832, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf57e8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf57e8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c248, alignment: 0
Returning buffer pointer: 0x1f002d9c248 (aligned: true)
Created staging buffer at: 0x1f002d9c248
Staging buffer cast successful
About to map memory for staging buffer - size: 832
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a18000
About to memcpy 832 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(18015547499133015335), dst: vk.Buffer(18334454249699672543)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,6.4e1,4.8e1] to [1.3e2,8.8e1,5.6e1]
Buffer handles - SDF: vk.Buffer(14073195781184029143), Params: vk.Buffer(17645821321130541531), Output: vk.Buffer(18233758775804690909)
generateWorldAdaptive called - offset: 0, max_workgroups: 13
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x3x1 workgroups for 64x24x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=3, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
getBufferDeviceAddress called for buffer: vk.Buffer(16705046187056562649)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545711616
Using actual brush buffer with address: 0x238f80000
Dispatching brush chunk: offset=0, size=13 (of 24 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=13, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002d9c748, alignment: 0
Returning buffer pointer: 0x1f002d9c748 (aligned: true)
Submitting readback 445 at frame 461 (will be ready at frame 464)
Allocating workspace 2 (current_index: 2)
Available workspaces after allocation: 0/3
Processing 13 minichunks in workspace 2
Overall bounds: [64, 80, 48] to [128, 96, 56]
renderer_buffer_write called - buffer: anyopaque@1f002cf5be8, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5be8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5be8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c288, alignment: 0
Returning buffer pointer: 0x1f002d9c288 (aligned: true)
Created staging buffer at: 0x1f002d9c288
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a59000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(18047038611664147756), dst: vk.Buffer(10094846052541661671)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5ba8, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ba8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5ba8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c808, alignment: 0
Returning buffer pointer: 0x1f002d9c808 (aligned: true)
Created staging buffer at: 0x1f002d9c808
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a5a000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(16229411750531831086), dst: vk.Buffer(16700742698545447395)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5ca8, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ca8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5ca8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c108, alignment: 0
Returning buffer pointer: 0x1f002d9c108 (aligned: true)
Created staging buffer at: 0x1f002d9c108
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a11000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(14546637791522985264), dst: vk.Buffer(17497165150031970789)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf58a8, size: 832, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf58a8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf58a8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002df5058, alignment: 0
Returning buffer pointer: 0x1f002df5058 (aligned: true)
Created staging buffer at: 0x1f002df5058
Staging buffer cast successful
About to map memory for staging buffer - size: 832
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a37000
About to memcpy 832 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(17498270159217890610), dst: vk.Buffer(14063823544068866539)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,8.0e1,4.8e1] to [1.3e2,9.6e1,5.6e1]
Buffer handles - SDF: vk.Buffer(16700742698545447395), Params: vk.Buffer(10094846052541661671), Output: vk.Buffer(17114293211007812073)
generateWorldAdaptive called - offset: 0, max_workgroups: 13
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
getBufferDeviceAddress called for buffer: vk.Buffer(17497165150031970789)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557245952
Using actual brush buffer with address: 0x239a80000
Dispatching brush chunk: offset=0, size=13 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=13, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002df5258, alignment: 0
Returning buffer pointer: 0x1f002df5258 (aligned: true)
Submitting readback 446 at frame 461 (will be ready at frame 464)
Successfully queued 26 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 47.1ms (target: 10.0ms), Workgroups: 14 -> 14 (PID: 16)
DeferredReadbackManager: advanced to frame 462
Processing readbacks: 3 pending, completed_frame: 462, frames_in_flight: 3
Checking readback 444: submitted frame 459, current frame 462, 3 frames elapsed (need 3)
Readback 444 ready (submitted frame 459, current frame 462)
Checking readback 445: submitted frame 461, current frame 462, 1 frames elapsed (need 3)
Processing 1 completed readbacks
Minichunk batch readback complete for workspace 0 (15 minichunks, 30720 bytes)
Adding minichunk at offset (48, 48, 16) with 512 non-empty voxels
Minichunk 67/512 completed
Adding minichunk at offset (56, 48, 16) with 512 non-empty voxels
Minichunk 68/512 completed
Adding minichunk at offset (0, 56, 16) with 512 non-empty voxels
Minichunk 69/512 completed
Adding minichunk at offset (8, 56, 16) with 512 non-empty voxels
Minichunk 70/512 completed
Adding minichunk at offset (16, 56, 16) with 512 non-empty voxels
Minichunk 71/512 completed
Adding minichunk at offset (24, 56, 16) with 512 non-empty voxels
Minichunk 72/512 completed
Adding minichunk at offset (32, 56, 16) with 512 non-empty voxels
Minichunk 73/512 completed
Adding minichunk at offset (40, 56, 16) with 512 non-empty voxels
Minichunk 74/512 completed
Adding minichunk at offset (48, 56, 16) with 512 non-empty voxels
Minichunk 75/512 completed
Adding minichunk at offset (56, 56, 16) with 512 non-empty voxels
Minichunk 76/512 completed
Adding minichunk at offset (0, 0, 24) with 512 non-empty voxels
Minichunk 77/512 completed
Adding minichunk at offset (8, 0, 24) with 512 non-empty voxels
Minichunk 78/512 completed
Adding minichunk at offset (16, 0, 24) with 512 non-empty voxels
Minichunk 79/512 completed
Adding minichunk at offset (24, 0, 24) with 512 non-empty voxels
Minichunk 80/512 completed
Adding minichunk at offset (32, 0, 24) with 512 non-empty voxels
Minichunk 81/512 completed
Releasing workspace 0 (was in_use: true)
Available workspaces after release: 1/3
Force processing old readbacks: 2 pending, max age: 3 frames, current frame: 462
Velocity: [0.00, 0.00, 10170.13] speed=10170.13 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -65265.59] | Torque: [274337.812, 662310.188, 210506.844]
  Angular vel: current=[-3109.781, -7507.677, -2386.219] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 240.49] -> [5.00, 5.00, 240.45]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-3109.23, -7506.34, -2385.79] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 9, pending meshes: 0
Checking 9 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 0
Command buffer begun in frame_begin
Processing readbacks: 2 pending, completed_frame: 462, frames_in_flight: 3
Checking readback 445: submitted frame 461, current frame 462, 1 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 17 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(1, 1, 0) with 18 minichunks (available workspaces: 1)
Allocating workspace 0 (current_index: 0)
Available workspaces after allocation: 0/3
Processing 14 minichunks in workspace 0
Overall bounds: [64, 104, 56] to [128, 128, 64]
renderer_buffer_write called - buffer: anyopaque@1efff479918, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479918, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479918 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d841f8, alignment: 0
Returning buffer pointer: 0x1f002d841f8 (aligned: true)
Created staging buffer at: 0x1f002d841f8
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a47000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(1346546601769833783), dst: vk.Buffer(16655718796899647951)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1efff479658, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479658, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479658 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d842b8, alignment: 0
Returning buffer pointer: 0x1f002d842b8 (aligned: true)
Created staging buffer at: 0x1f002d842b8
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a48000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(15511628569687102777), dst: vk.Buffer(15589100158980194763)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1efff479818, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479818, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479818 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d83ef8, alignment: 0
Returning buffer pointer: 0x1f002d83ef8 (aligned: true)
Created staging buffer at: 0x1f002d83ef8
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a35000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(16454642309435233595), dst: vk.Buffer(170787141142446541)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5a28, size: 896, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5a28, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5a28 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d83f38, alignment: 0
Returning buffer pointer: 0x1f002d83f38 (aligned: true)
Created staging buffer at: 0x1f002d83f38
Staging buffer cast successful
About to map memory for staging buffer - size: 896
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a36000
About to memcpy 896 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(2203293758714287421), dst: vk.Buffer(1025278100226703827)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,1.0e2,5.6e1] to [1.3e2,1.3e2,6.4e1]
Buffer handles - SDF: vk.Buffer(15589100158980194763), Params: vk.Buffer(16655718796899647951), Output: vk.Buffer(15344826058683711953)
generateWorldAdaptive called - offset: 0, max_workgroups: 14
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x3x1 workgroups for 64x24x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=3, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
getBufferDeviceAddress called for buffer: vk.Buffer(170787141142446541)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534177280
Using actual brush buffer with address: 0x238480000
Dispatching brush chunk: offset=0, size=14 (of 24 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=14, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002d83bf8, alignment: 0
Returning buffer pointer: 0x1f002d83bf8 (aligned: true)
Submitting readback 447 at frame 462 (will be ready at frame 465)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 1: No available workspace in ring buffer
Re-queuing 4 remaining minichunks from batch
Successfully queued 14 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 45.7ms (target: 10.0ms), Workgroups: 13 -> 13 (PID: 12)
DeferredReadbackManager: advanced to frame 463
Processing readbacks: 3 pending, completed_frame: 463, frames_in_flight: 3
Checking readback 445: submitted frame 461, current frame 463, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 3 pending, max age: 3 frames, current frame: 463
Velocity: [0.00, 0.00, 4171.26] speed=4171.26 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -33288.80] | Torque: [171104.719, 413083.312, 131293.266]
  Angular vel: current=[-4703.989, -11356.436, -3609.499] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 240.45] -> [5.00, 5.00, 240.40]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-4703.15, -11354.40, -3608.85] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 9, pending meshes: 0
Checking 9 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 1
Command buffer begun in frame_begin
Processing readbacks: 3 pending, completed_frame: 463, frames_in_flight: 3
Checking readback 445: submitted frame 461, current frame 463, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 17 batches waiting, 1 active chunks
No available workspaces, stopping batch processing
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 40.1ms (target: 10.0ms), Workgroups: 12 -> 12 (PID: 4)
DeferredReadbackManager: advanced to frame 464
Processing readbacks: 3 pending, completed_frame: 464, frames_in_flight: 3
Checking readback 445: submitted frame 461, current frame 464, 3 frames elapsed (need 3)
Readback 445 ready (submitted frame 461, current frame 464)
Checking readback 446: submitted frame 461, current frame 464, 3 frames elapsed (need 3)
Readback 446 ready (submitted frame 461, current frame 464)
Checking readback 447: submitted frame 462, current frame 464, 2 frames elapsed (need 3)
Processing 2 completed readbacks
Minichunk batch readback complete for workspace 1 (13 minichunks, 26624 bytes)
Adding minichunk at offset (48, 0, 48) with 512 non-empty voxels
Minichunk 82/512 completed
Adding minichunk at offset (56, 0, 48) with 512 non-empty voxels
Minichunk 83/512 completed
Adding minichunk at offset (0, 8, 48) with 512 non-empty voxels
Minichunk 84/512 completed
Adding minichunk at offset (8, 8, 48) with 512 non-empty voxels
Minichunk 85/512 completed
Adding minichunk at offset (16, 8, 48) with 512 non-empty voxels
Minichunk 86/512 completed
Adding minichunk at offset (24, 8, 48) with 512 non-empty voxels
Minichunk 87/512 completed
Adding minichunk at offset (32, 8, 48) with 512 non-empty voxels
Minichunk 88/512 completed
Adding minichunk at offset (40, 8, 48) with 512 non-empty voxels
Minichunk 89/512 completed
Adding minichunk at offset (48, 8, 48) with 512 non-empty voxels
Minichunk 90/512 completed
Adding minichunk at offset (56, 8, 48) with 512 non-empty voxels
Minichunk 91/512 completed
Adding minichunk at offset (0, 16, 48) with 512 non-empty voxels
Minichunk 92/512 completed
Adding minichunk at offset (8, 16, 48) with 512 non-empty voxels
Minichunk 93/512 completed
Adding minichunk at offset (16, 16, 48) with 512 non-empty voxels
Minichunk 94/512 completed
Releasing workspace 1 (was in_use: true)
Available workspaces after release: 1/3
Minichunk batch readback complete for workspace 2 (13 minichunks, 26624 bytes)
Adding minichunk at offset (24, 16, 48) with 512 non-empty voxels
Minichunk 95/512 completed
Adding minichunk at offset (32, 16, 48) with 512 non-empty voxels
Minichunk 96/512 completed
Adding minichunk at offset (40, 16, 48) with 512 non-empty voxels
Minichunk 97/512 completed
Adding minichunk at offset (48, 16, 48) with 512 non-empty voxels
Minichunk 98/512 completed
Adding minichunk at offset (56, 16, 48) with 512 non-empty voxels
Minichunk 99/512 completed
Adding minichunk at offset (0, 24, 48) with 512 non-empty voxels
Minichunk 100/512 completed
Adding minichunk at offset (8, 24, 48) with 512 non-empty voxels
Minichunk 101/512 completed
Adding minichunk at offset (16, 24, 48) with 512 non-empty voxels
Minichunk 102/512 completed
Adding minichunk at offset (24, 24, 48) with 512 non-empty voxels
Minichunk 103/512 completed
Adding minichunk at offset (32, 24, 48) with 512 non-empty voxels
Minichunk 104/512 completed
Adding minichunk at offset (40, 24, 48) with 512 non-empty voxels
Minichunk 105/512 completed
Adding minichunk at offset (48, 24, 48) with 512 non-empty voxels
Minichunk 106/512 completed
Adding minichunk at offset (56, 24, 48) with 512 non-empty voxels
Minichunk 107/512 completed
Releasing workspace 2 (was in_use: true)
Available workspaces after release: 2/3
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 464
Velocity: [0.00, 0.00, 6309.60] speed=6309.60 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -28324.79] | Torque: [183563.953, 443162.594, 140853.594]
  Angular vel: current=[-7799.985, -18830.832, -5985.140] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 240.40] -> [5.00, 5.00, 240.36]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-7798.60, -18827.48, -5984.07] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 9, pending meshes: 0
Checking 9 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 464, frames_in_flight: 3
Checking readback 447: submitted frame 462, current frame 464, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 17 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(1, 1, 0) with 12 minichunks (available workspaces: 2)
Allocating workspace 1 (current_index: 1)
Available workspaces after allocation: 1/3
Processing 12 minichunks in workspace 1
Overall bounds: [64, 104, 0] to [128, 120, 8]
renderer_buffer_write called - buffer: anyopaque@1f002cf5c68, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5c68, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5c68 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d83d38, alignment: 0
Returning buffer pointer: 0x1f002d83d38 (aligned: true)
Created staging buffer at: 0x1f002d83d38
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a50000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(11897326041489741122), dst: vk.Buffer(17645821321130541531)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5768, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5768, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5768 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c3c8, alignment: 0
Returning buffer pointer: 0x1f002d9c3c8 (aligned: true)
Created staging buffer at: 0x1f002d9c3c8
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a3b000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(14520340771921466692), dst: vk.Buffer(14073195781184029143)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5928, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5928, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5928 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c448, alignment: 0
Returning buffer pointer: 0x1f002d9c448 (aligned: true)
Created staging buffer at: 0x1f002d9c448
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a3c000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(1167785802302756166), dst: vk.Buffer(16705046187056562649)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf57e8, size: 768, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf57e8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf57e8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c488, alignment: 0
Returning buffer pointer: 0x1f002d9c488 (aligned: true)
Created staging buffer at: 0x1f002d9c488
Staging buffer cast successful
About to map memory for staging buffer - size: 768
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a38000
About to memcpy 768 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(12645880154749408584), dst: vk.Buffer(18334454249699672543)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,1.0e2,0.0e0] to [1.3e2,1.2e2,8.0e0]
Buffer handles - SDF: vk.Buffer(14073195781184029143), Params: vk.Buffer(17645821321130541531), Output: vk.Buffer(18233758775804690909)
generateWorldAdaptive called - offset: 0, max_workgroups: 12
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
getBufferDeviceAddress called for buffer: vk.Buffer(16705046187056562649)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545711616
Using actual brush buffer with address: 0x238f80000
Dispatching brush chunk: offset=0, size=12 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=12, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002d9c608, alignment: 0
Returning buffer pointer: 0x1f002d9c608 (aligned: true)
Submitting readback 448 at frame 464 (will be ready at frame 467)
Successfully queued 12 minichunks from this batch
Processing pending minichunk batch for chunk ChunkId(1, 1, 0) with 26 minichunks (available workspaces: 1)
Allocating workspace 2 (current_index: 2)
Available workspaces after allocation: 0/3
Processing 12 minichunks in workspace 2
Overall bounds: [64, 80, 56] to [128, 96, 64]
renderer_buffer_write called - buffer: anyopaque@1f002cf5be8, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5be8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5be8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c748, alignment: 0
Returning buffer pointer: 0x1f002d9c748 (aligned: true)
Created staging buffer at: 0x1f002d9c748
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a12000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(3992331118501172557), dst: vk.Buffer(10094846052541661671)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5ba8, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ba8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5ba8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c0c8, alignment: 0
Returning buffer pointer: 0x1f002d9c0c8 (aligned: true)
Created staging buffer at: 0x1f002d9c0c8
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb18f6000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(2574174423925921103), dst: vk.Buffer(16700742698545447395)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5ca8, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ca8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5ca8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c1c8, alignment: 0
Returning buffer pointer: 0x1f002d9c1c8 (aligned: true)
Created staging buffer at: 0x1f002d9c1c8
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b1d000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(13614724721168880977), dst: vk.Buffer(17497165150031970789)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf58a8, size: 768, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf58a8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf58a8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c208, alignment: 0
Returning buffer pointer: 0x1f002d9c208 (aligned: true)
Created staging buffer at: 0x1f002d9c208
Staging buffer cast successful
About to map memory for staging buffer - size: 768
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a3f000
About to memcpy 768 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(4407839861172606291), dst: vk.Buffer(14063823544068866539)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,8.0e1,5.6e1] to [1.3e2,9.6e1,6.4e1]
Buffer handles - SDF: vk.Buffer(16700742698545447395), Params: vk.Buffer(10094846052541661671), Output: vk.Buffer(17114293211007812073)
generateWorldAdaptive called - offset: 0, max_workgroups: 12
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
getBufferDeviceAddress called for buffer: vk.Buffer(17497165150031970789)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557245952
Using actual brush buffer with address: 0x239a80000
Dispatching brush chunk: offset=0, size=12 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=12, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002dbbdc8, alignment: 0
Returning buffer pointer: 0x1f002dbbdc8 (aligned: true)
Submitting readback 449 at frame 464 (will be ready at frame 467)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 1: No available workspace in ring buffer
Re-queuing 14 remaining minichunks from batch
Successfully queued 12 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 42.7ms (target: 10.0ms), Workgroups: 13 -> 13 (PID: 16)
DeferredReadbackManager: advanced to frame 465
Processing readbacks: 3 pending, completed_frame: 465, frames_in_flight: 3
Checking readback 447: submitted frame 462, current frame 465, 3 frames elapsed (need 3)
Readback 447 ready (submitted frame 462, current frame 465)
Checking readback 448: submitted frame 464, current frame 465, 1 frames elapsed (need 3)
Processing 1 completed readbacks
Minichunk batch readback complete for workspace 0 (14 minichunks, 28672 bytes)
Adding minichunk at offset (48, 40, 56) with 512 non-empty voxels
Minichunk 108/512 completed
Adding minichunk at offset (56, 40, 56) with 512 non-empty voxels
Minichunk 109/512 completed
Adding minichunk at offset (0, 48, 56) with 512 non-empty voxels
Minichunk 110/512 completed
Adding minichunk at offset (8, 48, 56) with 512 non-empty voxels
Minichunk 111/512 completed
Adding minichunk at offset (16, 48, 56) with 512 non-empty voxels
Minichunk 112/512 completed
Adding minichunk at offset (24, 48, 56) with 512 non-empty voxels
Minichunk 113/512 completed
Adding minichunk at offset (32, 48, 56) with 512 non-empty voxels
Minichunk 114/512 completed
Adding minichunk at offset (40, 48, 56) with 512 non-empty voxels
Minichunk 115/512 completed
Adding minichunk at offset (48, 48, 56) with 512 non-empty voxels
Minichunk 116/512 completed
Adding minichunk at offset (56, 48, 56) with 512 non-empty voxels
Minichunk 117/512 completed
Adding minichunk at offset (0, 56, 56) with 512 non-empty voxels
Minichunk 118/512 completed
Adding minichunk at offset (8, 56, 56) with 512 non-empty voxels
Minichunk 119/512 completed
Adding minichunk at offset (16, 56, 56) with 512 non-empty voxels
Minichunk 120/512 completed
Adding minichunk at offset (24, 56, 56) with 512 non-empty voxels
Minichunk 121/512 completed
Releasing workspace 0 (was in_use: true)
Available workspaces after release: 1/3
Force processing old readbacks: 2 pending, max age: 3 frames, current frame: 465
Velocity: [0.00, 0.00, 10462.34] speed=10462.34 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -64495.39] | Torque: [269879.688, 651547.188, 207085.969]
  Angular vel: current=[-2950.759, -7123.764, -2264.198] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 240.36] -> [5.00, 5.00, 240.32]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-2950.24, -7122.50, -2263.80] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 9, pending meshes: 0
Checking 9 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 0
Command buffer begun in frame_begin
Processing readbacks: 2 pending, completed_frame: 465, frames_in_flight: 3
Checking readback 448: submitted frame 464, current frame 465, 1 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 16 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(1, 1, 0) with 11 minichunks (available workspaces: 1)
Allocating workspace 0 (current_index: 0)
Available workspaces after allocation: 0/3
Processing 11 minichunks in workspace 0
Overall bounds: [64, 64, 24] to [128, 80, 32]
renderer_buffer_write called - buffer: anyopaque@1efff479918, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479918, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479918 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbcc8, alignment: 0
Returning buffer pointer: 0x1f002dbbcc8 (aligned: true)
Created staging buffer at: 0x1f002dbbcc8
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a2b000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(3864968089586111832), dst: vk.Buffer(16655718796899647951)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1efff479658, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479658, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479658 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbb88, alignment: 0
Returning buffer pointer: 0x1f002dbbb88 (aligned: true)
Created staging buffer at: 0x1f002dbbb88
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b13000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(12832200096657446234), dst: vk.Buffer(15589100158980194763)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1efff479818, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479818, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479818 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbba08, alignment: 0
Returning buffer pointer: 0x1f002dbba08 (aligned: true)
Created staging buffer at: 0x1f002dbba08
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b19000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(2926957127744361820), dst: vk.Buffer(170787141142446541)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5a28, size: 704, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5a28, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5a28 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbd48, alignment: 0
Returning buffer pointer: 0x1f002dbbd48 (aligned: true)
Created staging buffer at: 0x1f002dbbd48
Staging buffer cast successful
About to map memory for staging buffer - size: 704
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b1a000
About to memcpy 704 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(4839018843563103582), dst: vk.Buffer(1025278100226703827)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,6.4e1,2.4e1] to [1.3e2,8.0e1,3.2e1]
Buffer handles - SDF: vk.Buffer(15589100158980194763), Params: vk.Buffer(16655718796899647951), Output: vk.Buffer(15344826058683711953)
generateWorldAdaptive called - offset: 0, max_workgroups: 11
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
getBufferDeviceAddress called for buffer: vk.Buffer(170787141142446541)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534177280
Using actual brush buffer with address: 0x238480000
Dispatching brush chunk: offset=0, size=11 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=11, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002dbbd08, alignment: 0
Returning buffer pointer: 0x1f002dbbd08 (aligned: true)
Submitting readback 450 at frame 465 (will be ready at frame 468)
Successfully queued 11 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 40.3ms (target: 10.0ms), Workgroups: 12 -> 12 (PID: 4)
DeferredReadbackManager: advanced to frame 466
Processing readbacks: 3 pending, completed_frame: 466, frames_in_flight: 3
Checking readback 448: submitted frame 464, current frame 466, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 3 pending, max age: 3 frames, current frame: 466
Velocity: [0.00, 0.00, 3957.92] speed=3957.92 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -30672.95] | Torque: [163319.625, 394288.438, 125319.578]
  Angular vel: current=[-4900.278, -11830.319, -3760.116] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 240.32] -> [5.00, 5.00, 240.28]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-4899.40, -11828.21, -3759.45] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 9, pending meshes: 0
Checking 9 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 1
Command buffer begun in frame_begin
Processing readbacks: 3 pending, completed_frame: 466, frames_in_flight: 3
Checking readback 448: submitted frame 464, current frame 466, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 15 batches waiting, 1 active chunks
No available workspaces, stopping batch processing
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 36.1ms (target: 10.0ms), Workgroups: 11 -> 11 (PID: 4)
DeferredReadbackManager: advanced to frame 467
Processing readbacks: 3 pending, completed_frame: 467, frames_in_flight: 3
Checking readback 448: submitted frame 464, current frame 467, 3 frames elapsed (need 3)
Readback 448 ready (submitted frame 464, current frame 467)
Checking readback 449: submitted frame 464, current frame 467, 3 frames elapsed (need 3)
Readback 449 ready (submitted frame 464, current frame 467)
Checking readback 450: submitted frame 465, current frame 467, 2 frames elapsed (need 3)
Processing 2 completed readbacks
Minichunk batch readback complete for workspace 1 (12 minichunks, 24576 bytes)
Adding minichunk at offset (0, 40, 0) with 512 non-empty voxels
Minichunk 122/512 completed
Adding minichunk at offset (8, 40, 0) with 512 non-empty voxels
Minichunk 123/512 completed
Adding minichunk at offset (16, 40, 0) with 512 non-empty voxels
Minichunk 124/512 completed
Adding minichunk at offset (24, 40, 0) with 512 non-empty voxels
Minichunk 125/512 completed
Adding minichunk at offset (32, 40, 0) with 512 non-empty voxels
Minichunk 126/512 completed
Adding minichunk at offset (40, 40, 0) with 512 non-empty voxels
Minichunk 127/512 completed
Adding minichunk at offset (48, 40, 0) with 512 non-empty voxels
Minichunk 128/512 completed
Adding minichunk at offset (56, 40, 0) with 512 non-empty voxels
Minichunk 129/512 completed
Adding minichunk at offset (0, 48, 0) with 512 non-empty voxels
Minichunk 130/512 completed
Adding minichunk at offset (8, 48, 0) with 512 non-empty voxels
Minichunk 131/512 completed
Adding minichunk at offset (16, 48, 0) with 512 non-empty voxels
Minichunk 132/512 completed
Adding minichunk at offset (24, 48, 0) with 512 non-empty voxels
Minichunk 133/512 completed
Releasing workspace 1 (was in_use: true)
Available workspaces after release: 1/3
Minichunk batch readback complete for workspace 2 (12 minichunks, 24576 bytes)
Adding minichunk at offset (32, 16, 56) with 512 non-empty voxels
Minichunk 134/512 completed
Adding minichunk at offset (40, 16, 56) with 512 non-empty voxels
Minichunk 135/512 completed
Adding minichunk at offset (48, 16, 56) with 512 non-empty voxels
Minichunk 136/512 completed
Adding minichunk at offset (56, 16, 56) with 512 non-empty voxels
Minichunk 137/512 completed
Adding minichunk at offset (0, 24, 56) with 512 non-empty voxels
Minichunk 138/512 completed
Adding minichunk at offset (8, 24, 56) with 512 non-empty voxels
Minichunk 139/512 completed
Adding minichunk at offset (16, 24, 56) with 512 non-empty voxels
Minichunk 140/512 completed
Adding minichunk at offset (24, 24, 56) with 512 non-empty voxels
Minichunk 141/512 completed
Adding minichunk at offset (32, 24, 56) with 512 non-empty voxels
Minichunk 142/512 completed
Adding minichunk at offset (40, 24, 56) with 512 non-empty voxels
Minichunk 143/512 completed
Adding minichunk at offset (48, 24, 56) with 512 non-empty voxels
Minichunk 144/512 completed
Adding minichunk at offset (56, 24, 56) with 512 non-empty voxels
Minichunk 145/512 completed
Releasing workspace 2 (was in_use: true)
Available workspaces after release: 2/3
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 467
Velocity: [0.00, 0.00, 6572.82] speed=6572.82 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -22186.45] | Torque: [166989.281, 403147.750, 128135.438]
  Angular vel: current=[-8430.184, -20352.266, -6468.708] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.042 units: [5.00, 5.00, 240.28] -> [5.00, 5.00, 240.23]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-8428.69, -20348.65, -6467.56] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 9, pending meshes: 0
Checking 9 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 467, frames_in_flight: 3
Checking readback 450: submitted frame 465, current frame 467, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 15 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(1, 1, 0) with 26 minichunks (available workspaces: 2)
Allocating workspace 1 (current_index: 1)
Available workspaces after allocation: 1/3
Processing 11 minichunks in workspace 1
Overall bounds: [64, 64, 48] to [128, 128, 64]
renderer_buffer_write called - buffer: anyopaque@1f002cf5c68, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5c68, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5c68 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbdc8, alignment: 0
Returning buffer pointer: 0x1f002dbbdc8 (aligned: true)
Created staging buffer at: 0x1f002dbbdc8
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b14000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(11790207220665292131), dst: vk.Buffer(17645821321130541531)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5768, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5768, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5768 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbe88, alignment: 0
Returning buffer pointer: 0x1f002dbbe88 (aligned: true)
Created staging buffer at: 0x1f002dbbe88
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a2c000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(2222162477758551397), dst: vk.Buffer(14073195781184029143)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5928, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5928, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5928 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbf88, alignment: 0
Returning buffer pointer: 0x1f002dbbf88 (aligned: true)
Created staging buffer at: 0x1f002dbbf88
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a25000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(6722844001268929895), dst: vk.Buffer(16705046187056562649)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf57e8, size: 704, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf57e8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf57e8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbfc8, alignment: 0
Returning buffer pointer: 0x1f002dbbfc8 (aligned: true)
Created staging buffer at: 0x1f002dbbfc8
Staging buffer cast successful
About to map memory for staging buffer - size: 704
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a26000
About to memcpy 704 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(6159254132080252265), dst: vk.Buffer(18334454249699672543)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,6.4e1,4.8e1] to [1.3e2,1.3e2,6.4e1]
Buffer handles - SDF: vk.Buffer(14073195781184029143), Params: vk.Buffer(17645821321130541531), Output: vk.Buffer(18233758775804690909)
generateWorldAdaptive called - offset: 0, max_workgroups: 11
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x8x2 workgroups for 64x64x16 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=8, z=2
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
getBufferDeviceAddress called for buffer: vk.Buffer(16705046187056562649)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545711616
Using actual brush buffer with address: 0x238f80000
Dispatching brush chunk: offset=0, size=11 (of 128 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=11, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002dbb948, alignment: 0
Returning buffer pointer: 0x1f002dbb948 (aligned: true)
Submitting readback 451 at frame 467 (will be ready at frame 470)
Allocating workspace 2 (current_index: 2)
Available workspaces after allocation: 0/3
Processing 11 minichunks in workspace 2
Overall bounds: [64, 64, 56] to [128, 80, 64]
renderer_buffer_write called - buffer: anyopaque@1f002cf5be8, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5be8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5be8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c148, alignment: 0
Returning buffer pointer: 0x1f002d9c148 (aligned: true)
Created staging buffer at: 0x1f002d9c148
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a5b000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(897211383869871470), dst: vk.Buffer(10094846052541661671)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5ba8, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ba8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5ba8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c2c8, alignment: 0
Returning buffer pointer: 0x1f002d9c2c8 (aligned: true)
Created staging buffer at: 0x1f002d9c2c8
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a5c000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(7978345542700766576), dst: vk.Buffer(16700742698545447395)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5ca8, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ca8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5ca8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c308, alignment: 0
Returning buffer pointer: 0x1f002d9c308 (aligned: true)
Created staging buffer at: 0x1f002d9c308
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a34000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(4829553147959580018), dst: vk.Buffer(17497165150031970789)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf58a8, size: 704, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf58a8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf58a8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c388, alignment: 0
Returning buffer pointer: 0x1f002d9c388 (aligned: true)
Created staging buffer at: 0x1f002d9c388
Staging buffer cast successful
About to map memory for staging buffer - size: 704
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a39000
About to memcpy 704 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(7543462305636291956), dst: vk.Buffer(14063823544068866539)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,6.4e1,5.6e1] to [1.3e2,8.0e1,6.4e1]
Buffer handles - SDF: vk.Buffer(16700742698545447395), Params: vk.Buffer(10094846052541661671), Output: vk.Buffer(17114293211007812073)
generateWorldAdaptive called - offset: 0, max_workgroups: 11
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
getBufferDeviceAddress called for buffer: vk.Buffer(17497165150031970789)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557245952
Using actual brush buffer with address: 0x239a80000
Dispatching brush chunk: offset=0, size=11 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=11, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002d9c5c8, alignment: 0
Returning buffer pointer: 0x1f002d9c5c8 (aligned: true)
Submitting readback 452 at frame 467 (will be ready at frame 470)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 2: No available workspace in ring buffer
Re-queuing 4 remaining minichunks from batch
Successfully queued 22 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 40.3ms (target: 10.0ms), Workgroups: 12 -> 12 (PID: 16)
DeferredReadbackManager: advanced to frame 468
Processing readbacks: 3 pending, completed_frame: 468, frames_in_flight: 3
Checking readback 450: submitted frame 465, current frame 468, 3 frames elapsed (need 3)
Readback 450 ready (submitted frame 465, current frame 468)
Checking readback 451: submitted frame 467, current frame 468, 1 frames elapsed (need 3)
Processing 1 completed readbacks
Minichunk batch readback complete for workspace 0 (11 minichunks, 22528 bytes)
Adding minichunk at offset (40, 0, 24) with 512 non-empty voxels
Minichunk 146/512 completed
Adding minichunk at offset (48, 0, 24) with 512 non-empty voxels
Minichunk 147/512 completed
Adding minichunk at offset (56, 0, 24) with 512 non-empty voxels
Minichunk 148/512 completed
Adding minichunk at offset (0, 8, 24) with 512 non-empty voxels
Minichunk 149/512 completed
Adding minichunk at offset (8, 8, 24) with 512 non-empty voxels
Minichunk 150/512 completed
Adding minichunk at offset (16, 8, 24) with 512 non-empty voxels
Minichunk 151/512 completed
Adding minichunk at offset (24, 8, 24) with 512 non-empty voxels
Minichunk 152/512 completed
Adding minichunk at offset (32, 8, 24) with 512 non-empty voxels
Minichunk 153/512 completed
Adding minichunk at offset (40, 8, 24) with 512 non-empty voxels
Minichunk 154/512 completed
Adding minichunk at offset (48, 8, 24) with 512 non-empty voxels
Minichunk 155/512 completed
Adding minichunk at offset (56, 8, 24) with 512 non-empty voxels
Minichunk 156/512 completed
Releasing workspace 0 (was in_use: true)
Available workspaces after release: 1/3
Force processing old readbacks: 2 pending, max age: 3 frames, current frame: 468
Velocity: [0.00, 0.00, 11307.52] speed=11307.52 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -70272.40] | Torque: [292327.156, 705740.250, 224310.531]
  Angular vel: current=[-3042.142, -7344.381, -2334.318] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.043 units: [5.00, 5.00, 240.23] -> [5.00, 5.00, 240.19]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-3041.60, -7343.08, -2333.91] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 9, pending meshes: 0
Checking 9 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 0
Command buffer begun in frame_begin
Processing readbacks: 2 pending, completed_frame: 468, frames_in_flight: 3
Checking readback 451: submitted frame 467, current frame 468, 1 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 15 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(1, 1, 0) with 4 minichunks (available workspaces: 1)
Allocating workspace 0 (current_index: 0)
Available workspaces after allocation: 0/3
Processing 4 minichunks in workspace 0
Overall bounds: [96, 120, 56] to [128, 128, 64]
renderer_buffer_write called - buffer: anyopaque@1efff479918, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479918, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479918 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c4c8, alignment: 0
Returning buffer pointer: 0x1f002d9c4c8 (aligned: true)
Created staging buffer at: 0x1f002d9c4c8
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a2d000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(8661589764782167417), dst: vk.Buffer(16655718796899647951)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1efff479658, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479658, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479658 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c188, alignment: 0
Returning buffer pointer: 0x1f002d9c188 (aligned: true)
Created staging buffer at: 0x1f002d9c188
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a09000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(8173721062375167355), dst: vk.Buffer(15589100158980194763)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1efff479818, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479818, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1efff479818 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c508, alignment: 0
Returning buffer pointer: 0x1f002d9c508 (aligned: true)
Created staging buffer at: 0x1f002d9c508
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a0a000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(8455624848620655997), dst: vk.Buffer(170787141142446541)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5a28, size: 256, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5a28, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5a28 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c588, alignment: 0
Returning buffer pointer: 0x1f002d9c588 (aligned: true)
Created staging buffer at: 0x1f002d9c588
Staging buffer cast successful
About to map memory for staging buffer - size: 256
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a49000
About to memcpy 256 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(9571266311976129919), dst: vk.Buffer(1025278100226703827)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [9.6e1,1.2e2,5.6e1] to [1.3e2,1.3e2,6.4e1]
Buffer handles - SDF: vk.Buffer(15589100158980194763), Params: vk.Buffer(16655718796899647951), Output: vk.Buffer(15344826058683711953)
generateWorldAdaptive called - offset: 0, max_workgroups: 4
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 4x1x1 workgroups for 32x8x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=4, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
getBufferDeviceAddress called for buffer: vk.Buffer(170787141142446541)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534177280
Using actual brush buffer with address: 0x238480000
Dispatching brush chunk: offset=0, size=4 (of 4 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=4, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002d9c608, alignment: 0
Returning buffer pointer: 0x1f002d9c608 (aligned: true)
Submitting readback 453 at frame 468 (will be ready at frame 471)
Successfully queued 4 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 39.6ms (target: 10.0ms), Workgroups: 12 -> 12 (PID: 12)
DeferredReadbackManager: advanced to frame 469
Processing readbacks: 3 pending, completed_frame: 469, frames_in_flight: 3
Checking readback 451: submitted frame 467, current frame 469, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 3 pending, max age: 3 frames, current frame: 469
Velocity: [0.00, 0.00, 4080.45] speed=4080.45 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -30897.50] | Torque: [165698.594, 400031.812, 127145.016]
  Angular vel: current=[-5054.361, -12202.309, -3878.348] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.042 units: [5.00, 5.00, 240.19] -> [5.00, 5.00, 240.15]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-5053.46, -12200.14, -3877.66] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 9, pending meshes: 0
Checking 9 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 1
Command buffer begun in frame_begin
Processing readbacks: 3 pending, completed_frame: 469, frames_in_flight: 3
Checking readback 451: submitted frame 467, current frame 469, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 14 batches waiting, 1 active chunks
No available workspaces, stopping batch processing
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 35.5ms (target: 10.0ms), Workgroups: 11 -> 11 (PID: 4)
DeferredReadbackManager: advanced to frame 470
Processing readbacks: 3 pending, completed_frame: 470, frames_in_flight: 3
Checking readback 451: submitted frame 467, current frame 470, 3 frames elapsed (need 3)
Readback 451 ready (submitted frame 467, current frame 470)
Checking readback 452: submitted frame 467, current frame 470, 3 frames elapsed (need 3)
Readback 452 ready (submitted frame 467, current frame 470)
Checking readback 453: submitted frame 468, current frame 470, 2 frames elapsed (need 3)
Processing 2 completed readbacks
Minichunk batch readback complete for workspace 1 (11 minichunks, 22528 bytes)
Adding minichunk at offset (16, 56, 48) with 512 non-empty voxels
Minichunk 157/512 completed
Adding minichunk at offset (24, 56, 48) with 512 non-empty voxels
Minichunk 158/512 completed
Adding minichunk at offset (32, 56, 48) with 512 non-empty voxels
Minichunk 159/512 completed
Adding minichunk at offset (40, 56, 48) with 512 non-empty voxels
Minichunk 160/512 completed
Adding minichunk at offset (48, 56, 48) with 512 non-empty voxels
Minichunk 161/512 completed
Adding minichunk at offset (56, 56, 48) with 512 non-empty voxels
Minichunk 162/512 completed
Adding minichunk at offset (0, 0, 56) with 512 non-empty voxels
Minichunk 163/512 completed
Adding minichunk at offset (8, 0, 56) with 512 non-empty voxels
Minichunk 164/512 completed
Adding minichunk at offset (16, 0, 56) with 512 non-empty voxels
Minichunk 165/512 completed
Adding minichunk at offset (24, 0, 56) with 512 non-empty voxels
Minichunk 166/512 completed
Adding minichunk at offset (32, 0, 56) with 512 non-empty voxels
Minichunk 167/512 completed
Releasing workspace 1 (was in_use: true)
Available workspaces after release: 1/3
Minichunk batch readback complete for workspace 2 (11 minichunks, 22528 bytes)
Adding minichunk at offset (40, 0, 56) with 512 non-empty voxels
Minichunk 168/512 completed
Adding minichunk at offset (48, 0, 56) with 512 non-empty voxels
Minichunk 169/512 completed
Adding minichunk at offset (56, 0, 56) with 512 non-empty voxels
Minichunk 170/512 completed
Adding minichunk at offset (0, 8, 56) with 512 non-empty voxels
Minichunk 171/512 completed
Adding minichunk at offset (8, 8, 56) with 512 non-empty voxels
Minichunk 172/512 completed
Adding minichunk at offset (16, 8, 56) with 512 non-empty voxels
Minichunk 173/512 completed
Adding minichunk at offset (24, 8, 56) with 512 non-empty voxels
Minichunk 174/512 completed
Adding minichunk at offset (32, 8, 56) with 512 non-empty voxels
Minichunk 175/512 completed
Adding minichunk at offset (40, 8, 56) with 512 non-empty voxels
Minichunk 176/512 completed
Adding minichunk at offset (48, 8, 56) with 512 non-empty voxels
Minichunk 177/512 completed
Adding minichunk at offset (56, 8, 56) with 512 non-empty voxels
Minichunk 178/512 completed
Releasing workspace 2 (was in_use: true)
Available workspaces after release: 2/3
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 470
Velocity: [0.00, 0.00, 6779.43] speed=6779.43 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -23064.13] | Torque: [171502.781, 414044.375, 131598.734]
  Angular vel: current=[-8554.325, -20651.971, -6563.966] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.042 units: [5.00, 5.00, 240.15] -> [5.00, 5.00, 240.11]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-8552.81, -20648.32, -6562.81] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 9, pending meshes: 0
Checking 9 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 470, frames_in_flight: 3
Checking readback 453: submitted frame 468, current frame 470, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 14 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(1, 1, 0) with 26 minichunks (available workspaces: 2)
Allocating workspace 1 (current_index: 1)
Available workspaces after allocation: 1/3
Processing 11 minichunks in workspace 1
Overall bounds: [64, 96, 48] to [128, 112, 56]
renderer_buffer_write called - buffer: anyopaque@1f002cf5c68, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5c68, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5c68 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002d9c5c8, alignment: 0
Returning buffer pointer: 0x1f002d9c5c8 (aligned: true)
Created staging buffer at: 0x1f002d9c5c8
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a4a000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(7843672960484251012), dst: vk.Buffer(17645821321130541531)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5768, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5768, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5768 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbb948, alignment: 0
Returning buffer pointer: 0x1f002dbb948 (aligned: true)
Created staging buffer at: 0x1f002dbb948
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b15000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(4892300077533500806), dst: vk.Buffer(14073195781184029143)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5928, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5928, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5928 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbba88, alignment: 0
Returning buffer pointer: 0x1f002dbba88 (aligned: true)
Created staging buffer at: 0x1f002dbba88
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b16000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(10848466715382125960), dst: vk.Buffer(16705046187056562649)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf57e8, size: 704, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf57e8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf57e8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbe08, alignment: 0
Returning buffer pointer: 0x1f002dbbe08 (aligned: true)
Created staging buffer at: 0x1f002dbbe08
Staging buffer cast successful
About to map memory for staging buffer - size: 704
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a2e000
About to memcpy 704 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(1186676511579575690), dst: vk.Buffer(18334454249699672543)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,9.6e1,4.8e1] to [1.3e2,1.1e2,5.6e1]
Buffer handles - SDF: vk.Buffer(14073195781184029143), Params: vk.Buffer(17645821321130541531), Output: vk.Buffer(18233758775804690909)
generateWorldAdaptive called - offset: 0, max_workgroups: 11
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
getBufferDeviceAddress called for buffer: vk.Buffer(16705046187056562649)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545711616
Using actual brush buffer with address: 0x238f80000
Dispatching brush chunk: offset=0, size=11 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=11, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1f002dbbc88, alignment: 0
Returning buffer pointer: 0x1f002dbbc88 (aligned: true)
Submitting readback 454 at frame 470 (will be ready at frame 473)
Allocating workspace 2 (current_index: 2)
Available workspaces after allocation: 0/3
Processing 11 minichunks in workspace 2
Overall bounds: [64, 104, 48] to [128, 120, 56]
renderer_buffer_write called - buffer: anyopaque@1f002cf5be8, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5be8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5be8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbd08, alignment: 0
Returning buffer pointer: 0x1f002dbbd08 (aligned: true)
Created staging buffer at: 0x1f002dbbd08
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b0c000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(5805009077796869519), dst: vk.Buffer(10094846052541661671)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5ba8, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ba8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5ba8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbec8, alignment: 0
Returning buffer pointer: 0x1f002dbbec8 (aligned: true)
Created staging buffer at: 0x1f002dbbec8
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a3a000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(6428605893583050129), dst: vk.Buffer(16700742698545447395)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5ca8, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5ca8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf5ca8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbf48, alignment: 0
Returning buffer pointer: 0x1f002dbbf48 (aligned: true)
Created staging buffer at: 0x1f002dbbf48
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb0b12000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(503573026986530195), dst: vk.Buffer(17497165150031970789)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf58a8, size: 704, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf58a8, cmd_buffer: vk.CommandBuffer(2129471926368)
About to cast buffer anyopaque@1f002cf58a8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbb888, alignment: 0
Returning buffer pointer: 0x1f002dbb888 (aligned: true)
Created staging buffer at: 0x1f002dbb888
Staging buffer cast successful
About to map memory for staging buffer - size: 704
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a44000
About to memcpy 704 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(12376950605711676821), dst: vk.Buffer(14063823544068866539)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,1.0e2,4.8e1] to [1.3e2,1.2e2,5.6e1]
Buffer handles - SDF: vk.Buffer(16700742698545447395), Params: vk.Buffer(10094846052541661671), Output: vk.Buffer(17114293211007812073)
generateWorldAdaptive called - offset: 0, max_workgroups: 11
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(16700742698545447395)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9556721664
getBufferDeviceAddress called for buffer: vk.Buffer(10094846052541661671)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557770240
getBufferDeviceAddress called for buffer: vk.Buffer(17114293211007812073)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9558294528
getBufferDeviceAddress called for buffer: vk.Buffer(14063823544068866539)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697230848
getBufferDeviceAddress called for buffer: vk.Buffer(16715007762404213229)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9697755136
getBufferDeviceAddress called for buffer: vk.Buffer(17497165150031970789)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9557245952
Using actual brush buffer with address: 0x239a80000
Dispatching brush chunk: offset=0, size=11 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129471926368)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6af060
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6af060, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129471926368), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129471926368), x=11, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1efff479b58, alignment: 0
Returning buffer pointer: 0x1efff479b58 (aligned: true)
Submitting readback 455 at frame 470 (will be ready at frame 473)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 2: No available workspace in ring buffer
Re-queuing 4 remaining minichunks from batch
Successfully queued 22 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 39.2ms (target: 10.0ms), Workgroups: 12 -> 12 (PID: 16)
DeferredReadbackManager: advanced to frame 471
Processing readbacks: 3 pending, completed_frame: 471, frames_in_flight: 3
Checking readback 453: submitted frame 468, current frame 471, 3 frames elapsed (need 3)
Readback 453 ready (submitted frame 468, current frame 471)
Checking readback 454: submitted frame 470, current frame 471, 1 frames elapsed (need 3)
Processing 1 completed readbacks
Minichunk batch readback complete for workspace 0 (4 minichunks, 8192 bytes)
Adding minichunk at offset (32, 56, 56) with 512 non-empty voxels
Minichunk 179/512 completed
Adding minichunk at offset (40, 56, 56) with 512 non-empty voxels
Minichunk 180/512 completed
Adding minichunk at offset (48, 56, 56) with 512 non-empty voxels
Minichunk 181/512 completed
Adding minichunk at offset (56, 56, 56) with 512 non-empty voxels
Minichunk 182/512 completed
Releasing workspace 0 (was in_use: true)
Available workspaces after release: 1/3
Force processing old readbacks: 2 pending, max age: 3 frames, current frame: 471
Velocity: [0.00, 0.00, 11473.92] speed=11473.92 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -74884.67] | Torque: [311868.500, 752917.250, 239305.156]
  Angular vel: current=[-3276.977, -7911.323, -2514.513] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.042 units: [5.00, 5.00, 240.11] -> [5.00, 5.00, 240.06]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-3276.40, -7909.93, -2514.07] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 9, pending meshes: 0
Checking 9 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 0
Command buffer begun in frame_begin
Processing readbacks: 2 pending, completed_frame: 471, frames_in_flight: 3
Checking readback 454: submitted frame 470, current frame 471, 1 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 14 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(1, 1, 0) with 26 minichunks (available workspaces: 1)
Allocating workspace 0 (current_index: 0)
Available workspaces after allocation: 0/3
Processing 12 minichunks in workspace 0
Overall bounds: [64, 104, 40] to [128, 120, 48]
renderer_buffer_write called - buffer: anyopaque@1efff479918, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479918, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479918 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1efff479a58, alignment: 0
Returning buffer pointer: 0x1efff479a58 (aligned: true)
Created staging buffer at: 0x1efff479a58
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a08000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(5457091712931337626), dst: vk.Buffer(16655718796899647951)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1efff479658, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479658, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479658 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1efff479858, alignment: 0
Returning buffer pointer: 0x1efff479858 (aligned: true)
Created staging buffer at: 0x1efff479858
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a1b000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(3995513105151956380), dst: vk.Buffer(15589100158980194763)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1efff479818, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1efff479818, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1efff479818 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1efff479ad8, alignment: 0
Returning buffer pointer: 0x1efff479ad8 (aligned: true)
Created staging buffer at: 0x1efff479ad8
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a1c000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(12837888969819559326), dst: vk.Buffer(170787141142446541)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5a28, size: 768, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5a28, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5a28 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1efff479cd8, alignment: 0
Returning buffer pointer: 0x1efff479cd8 (aligned: true)
Created staging buffer at: 0x1efff479cd8
Staging buffer cast successful
About to map memory for staging buffer - size: 768
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a51000
About to memcpy 768 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(4152202308203058592), dst: vk.Buffer(1025278100226703827)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,1.0e2,4.0e1] to [1.3e2,1.2e2,4.8e1]
Buffer handles - SDF: vk.Buffer(15589100158980194763), Params: vk.Buffer(16655718796899647951), Output: vk.Buffer(15344826058683711953)
generateWorldAdaptive called - offset: 0, max_workgroups: 12
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=2, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
getBufferDeviceAddress called for buffer: vk.Buffer(15589100158980194763)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533652992
getBufferDeviceAddress called for buffer: vk.Buffer(16655718796899647951)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534701568
getBufferDeviceAddress called for buffer: vk.Buffer(15344826058683711953)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9535225856
getBufferDeviceAddress called for buffer: vk.Buffer(1025278100226703827)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9539944448
getBufferDeviceAddress called for buffer: vk.Buffer(16816681801647915477)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9540468736
getBufferDeviceAddress called for buffer: vk.Buffer(170787141142446541)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9534177280
Using actual brush buffer with address: 0x238480000
Dispatching brush chunk: offset=0, size=12 (of 16 total)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80040
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(13136416272365388288)
  pipeline_layout: vk.PipelineLayout(14054944987674575359)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xb64ded0000000200
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xb64ded0000000200
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14054944987674575359), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=12, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Created GpuBuffer at address: 0x1efff479bd8, alignment: 0
Returning buffer pointer: 0x1efff479bd8 (aligned: true)
Submitting readback 456 at frame 471 (will be ready at frame 474)
WARNING: No available workspaces in ring buffer (all 3 are in use)
Failed to queue minichunk batch 1: No available workspace in ring buffer
Re-queuing 14 remaining minichunks from batch
Successfully queued 12 minichunks from this batch
No available workspaces, stopping batch processing
Recorded minichunk processing commands to frame encoder
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15941205563635925013), signal semaphore: vk.Semaphore(15607181627698970646)
Frame time: 38.8ms (target: 10.0ms), Workgroups: 13 -> 13 (PID: 13)
DeferredReadbackManager: advanced to frame 472
Processing readbacks: 3 pending, completed_frame: 472, frames_in_flight: 3
Checking readback 454: submitted frame 470, current frame 472, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Force processing old readbacks: 3 pending, max age: 3 frames, current frame: 472
Velocity: [0.00, 0.00, 4395.40] speed=4395.40 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -34827.41] | Torque: [177525.625, 428584.812, 136220.203]
  Angular vel: current=[-4772.232, -11521.189, -3661.863] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.042 units: [5.00, 5.00, 240.06] -> [5.00, 5.00, 240.02]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-4771.39, -11519.16, -3661.22] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 9, pending meshes: 0
Checking 9 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 0, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15909243860128104466), current frame: 0
Acquire result: vk.Result.success, image index: 1
Command buffer begun in frame_begin
Processing readbacks: 3 pending, completed_frame: 472, frames_in_flight: 3
Checking readback 454: submitted frame 470, current frame 472, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 14 batches waiting, 1 active chunks
No available workspaces, stopping batch processing
batch_queue_draw called with 0 meshes
VertexPool render: 0 effective draws, 0 total commands
No effective draws to render
Submitting command buffer with wait semaphore: vk.Semaphore(15909243860128104466), signal semaphore: vk.Semaphore(15093167638295085075)
Frame time: 34.3ms (target: 10.0ms), Workgroups: 12 -> 12 (PID: 4)
DeferredReadbackManager: advanced to frame 473
Processing readbacks: 3 pending, completed_frame: 473, frames_in_flight: 3
Checking readback 454: submitted frame 470, current frame 473, 3 frames elapsed (need 3)
Readback 454 ready (submitted frame 470, current frame 473)
Checking readback 455: submitted frame 470, current frame 473, 3 frames elapsed (need 3)
Readback 455 ready (submitted frame 470, current frame 473)
Checking readback 456: submitted frame 471, current frame 473, 2 frames elapsed (need 3)
Processing 2 completed readbacks
Minichunk batch readback complete for workspace 1 (11 minichunks, 22528 bytes)
Adding minichunk at offset (0, 32, 48) with 512 non-empty voxels
Minichunk 183/512 completed
Adding minichunk at offset (8, 32, 48) with 512 non-empty voxels
Minichunk 184/512 completed
Adding minichunk at offset (16, 32, 48) with 512 non-empty voxels
Minichunk 185/512 completed
Adding minichunk at offset (24, 32, 48) with 512 non-empty voxels
Minichunk 186/512 completed
Adding minichunk at offset (32, 32, 48) with 512 non-empty voxels
Minichunk 187/512 completed
Adding minichunk at offset (40, 32, 48) with 512 non-empty voxels
Minichunk 188/512 completed
Adding minichunk at offset (48, 32, 48) with 512 non-empty voxels
Minichunk 189/512 completed
Adding minichunk at offset (56, 32, 48) with 512 non-empty voxels
Minichunk 190/512 completed
Adding minichunk at offset (0, 40, 48) with 512 non-empty voxels
Minichunk 191/512 completed
Adding minichunk at offset (8, 40, 48) with 512 non-empty voxels
Minichunk 192/512 completed
Adding minichunk at offset (16, 40, 48) with 512 non-empty voxels
Minichunk 193/512 completed
Releasing workspace 1 (was in_use: true)
Available workspaces after release: 1/3
Minichunk batch readback complete for workspace 2 (11 minichunks, 22528 bytes)
Adding minichunk at offset (24, 40, 48) with 512 non-empty voxels
Minichunk 194/512 completed
Adding minichunk at offset (32, 40, 48) with 512 non-empty voxels
Minichunk 195/512 completed
Adding minichunk at offset (40, 40, 48) with 512 non-empty voxels
Minichunk 196/512 completed
Adding minichunk at offset (48, 40, 48) with 512 non-empty voxels
Minichunk 197/512 completed
Adding minichunk at offset (56, 40, 48) with 512 non-empty voxels
Minichunk 198/512 completed
Adding minichunk at offset (0, 48, 48) with 512 non-empty voxels
Minichunk 199/512 completed
Adding minichunk at offset (8, 48, 48) with 512 non-empty voxels
Minichunk 200/512 completed
Adding minichunk at offset (16, 48, 48) with 512 non-empty voxels
Minichunk 201/512 completed
Adding minichunk at offset (24, 48, 48) with 512 non-empty voxels
Minichunk 202/512 completed
Adding minichunk at offset (32, 48, 48) with 512 non-empty voxels
Minichunk 203/512 completed
Adding minichunk at offset (40, 48, 48) with 512 non-empty voxels
Minichunk 204/512 completed
Releasing workspace 2 (was in_use: true)
Available workspaces after release: 2/3
Force processing old readbacks: 1 pending, max age: 3 frames, current frame: 473
Velocity: [0.00, 0.00, 6400.95] speed=6400.95 | Target: [0.00, 0.00, 0.00] speed=0.00
PID Force: [0.00, 0.00, -3743.36] | Torque: [106631.656, 257431.750, 81821.375]
  Angular vel: current=[-9268.170, -22375.342, -7111.718] target=[0.000, 0.000, 0.000]
getBufferDeviceAddress called for buffer: vk.Buffer(3588310073316737461)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532080128
getBufferDeviceAddress called for buffer: vk.Buffer(4482814459559018935)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9532604416
getBufferDeviceAddress called for buffer: vk.Buffer(9545482764304777657)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9533128704
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f2880
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1271540117546205636)
  pipeline_layout: vk.PipelineLayout(14080948437671477699)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x11a56b00000001c4
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x11a56b00000001c4
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14080948437671477699), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28a8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(1910713714563088839)
  pipeline_layout: vk.PipelineLayout(15663511807413191110)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1a843800000001c7
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1a843800000001c7
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15663511807413191110), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28f8
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2281887949379338698)
  pipeline_layout: vk.PipelineLayout(15072930027274240457)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x1faae500000001ca
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x1faae500000001ca
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(15072930027274240457), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=64, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1efc02f28d0
  self.manager: gfx.vk.PipelineManager.PipelineManager@1efce700b18
  cmd: vk.CommandBuffer(2129473653360)
  pipeline: vk.Pipeline(2974440636901491137)
  pipeline_layout: vk.PipelineLayout(14968327988565770688)
  vkd pointer: vk.DeviceDispatch@1efce700b30
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce854a70
Pipeline handle value: 0x29475600000001c1
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce854a70, bindPoint=compute, pipeline=0x29475600000001c1
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129473653360), layout=vk.PipelineLayout(14968327988565770688), size=56
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129473653360), x=1, y=1, z=1
vkCmdDispatch function: fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
Dispatch called successfully
Camera moved 0.042 units: [5.00, 5.00, 240.02] -> [5.00, 5.00, 239.98]
Camera rotation: [Yaw: 135.0°, Pitch: 0.0°, Roll: -35.3°] angular_vel: [-9266.54, -22371.41, -7110.47] target: [0.00, 0.00, 0.00]
get_chunks_for_rendering called - active chunks: 9, pending meshes: 0
Checking 9 active chunks for mesh generation
  Chunk ChunkId(0, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 1, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(0, 0, 0): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, -1): has_pending_mesh=false, is_needing_mesh=true
  Chunk ChunkId(1, 0, 0): has_pending_mesh=false, is_needing_mesh=true
Begin frame called - current_frame: 1, image_acquired: false
Acquiring image with swapchain: vk.SwapchainKHR(18065711617638662146), semaphore: vk.Semaphore(15941205563635925013), current frame: 1
Acquire result: vk.Result.success, image index: 2
Command buffer begun in frame_begin
Processing readbacks: 1 pending, completed_frame: 473, frames_in_flight: 3
Checking readback 456: submitted frame 471, current frame 473, 2 frames elapsed (need 3)
Processing 0 completed readbacks
Processing pending minichunk batches: 14 batches waiting, 1 active chunks
Processing pending minichunk batch for chunk ChunkId(1, 1, 0) with 14 minichunks (available workspaces: 2)
Allocating workspace 1 (current_index: 1)
Available workspaces after allocation: 1/3
Processing 12 minichunks in workspace 1
Overall bounds: [64, 96, 56] to [128, 112, 64]
renderer_buffer_write called - buffer: anyopaque@1f002cf5c68, size: 48, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5c68, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5c68 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1efff479c18, alignment: 0
Returning buffer pointer: 0x1efff479c18 (aligned: true)
Created staging buffer at: 0x1efff479c18
Staging buffer cast successful
About to map memory for staging buffer - size: 48
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a52000
About to memcpy 48 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(4113879929928553893), dst: vk.Buffer(17645821321130541531)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf5768, size: 96, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5768, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5768 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1efff479c58, alignment: 0
Returning buffer pointer: 0x1efff479c58 (aligned: true)
Created staging buffer at: 0x1efff479c58
Staging buffer cast successful
About to map memory for staging buffer - size: 96
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a21000
About to memcpy 96 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(9267442661919298983), dst: vk.Buffer(14073195781184029143)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
Brush instructions size: 144 bytes, layers start at offset 144
renderer_buffer_write called - buffer: anyopaque@1f002cf5928, size: 204, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf5928, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf5928 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbbd88, alignment: 0
Returning buffer pointer: 0x1f002dbbd88 (aligned: true)
Created staging buffer at: 0x1f002dbbd88
Staging buffer cast successful
About to map memory for staging buffer - size: 204
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a33000
About to memcpy 204 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(3036081457777874345), dst: vk.Buffer(16705046187056562649)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
renderer_buffer_write called - buffer: anyopaque@1f002cf57e8, size: 768, offset: 0
Buffer pointer is not null, casting to GpuBuffer
renderer_buffer_write_cmd called - buffer: anyopaque@1f002cf57e8, cmd_buffer: vk.CommandBuffer(2129472088192)
About to cast buffer anyopaque@1f002cf57e8 in renderer_buffer_write_cmd
Cast successful in renderer_buffer_write_cmd
Created GpuBuffer at address: 0x1f002dbb9c8, alignment: 0
Returning buffer pointer: 0x1f002dbb9c8 (aligned: true)
Created staging buffer at: 0x1f002dbb9c8
Staging buffer cast successful
About to map memory for staging buffer - size: 768
vkMapMemory result: vk.Result.success
Memory mapped successfully at: anyopaque@1efb1a42000
About to memcpy 768 bytes
Memcpy completed
Memory unmapped
About to record vkCmdCopyBuffer - src: vk.Buffer(14936247537802155435), dst: vk.Buffer(18334454249699672543)
vkCmdCopyBuffer recorded
Adding pipeline barrier for buffer copy
Pipeline barrier added
GPU worldgen generate called with bounds: [6.4e1,9.6e1,5.6e1] to [1.3e2,1.1e2,6.4e1]
Buffer handles - SDF: vk.Buffer(14073195781184029143), Params: vk.Buffer(17645821321130541531), Output: vk.Buffer(18233758775804690909)
generateWorldAdaptive called - offset: 0, max_workgroups: 12
getBufferDeviceAddress called for buffer: vk.Buffer(14073195781184029143)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9545187328
getBufferDeviceAddress called for buffer: vk.Buffer(17645821321130541531)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546235904
getBufferDeviceAddress called for buffer: vk.Buffer(18233758775804690909)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9546760192
getBufferDeviceAddress called for buffer: vk.Buffer(18334454249699672543)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9551478784
getBufferDeviceAddress called for buffer: vk.Buffer(9241235802271252961)
Calling vkGetBufferDeviceAddress with device: vk.Device(2129352751936), dispatch fn: fn (vk.Device, *const vk.BufferDeviceAddressInfo) callconv(.c) u64@7ffb95829310
Got buffer device address: 9552003072
Running SDF evaluation for entire bounds
About to bind SDF pipeline: vk.Pipeline(12512037703811858941)
DeviceAddressPipeline.bind called
  self: gfx.vk.PipelineManager.DeviceAddressPipeline@1f003e80020
  self.manager: gfx.vk.PipelineManager.PipelineManager@1f003e90000
  cmd: vk.CommandBuffer(2129472088192)
  pipeline: vk.Pipeline(12512037703811858941)
  pipeline_layout: vk.PipelineLayout(14924631197454696956)
  vkd pointer: vk.DeviceDispatch@1f003e90018
  vkCmdBindPipeline function: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
  vkCmdDispatch function (for comparison): fn (vk.CommandBuffer, u32, u32, u32) callconv(.c) void@7ffb9581e0f0
  vkCmdPushConstants function (for comparison): fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Command buffer handle value: 0x1efce6d6880
Pipeline handle value: 0xada3b000000001fd
Manager device handle: 0x1efc7507b40
About to call vkCmdBindPipeline
bindPipelineFn pointer: fn (vk.CommandBuffer, vk.PipelineBindPoint, vk.Pipeline) callconv(.c) void@7ffb9581b390
bindPipelineFn address: 0x7ffb9581b390
Calling vkCmdBindPipeline with cmd=0x1efce6d6880, bindPoint=compute, pipeline=0xada3b000000001fd
Pipeline bound successfully
DeviceAddressPipeline.pushConstants: cmd=vk.CommandBuffer(2129472088192), layout=vk.PipelineLayout(14924631197454696956), size=64
vkCmdPushConstants function: fn (vk.CommandBuffer, vk.PipelineLayout, vk.ShaderStageFlags, u32, u32, *const anyopaque) callconv(.c) void@7ffb958223f0
Push constants set successfully
SDF dispatch: 8x2x1 workgroups for 64x16x8 voxels
DeviceAddressPipeline.dispatch: cmd=vk.CommandBuffer(2129472088192), x=8, y=2, z=error: process didn't exit successfully: `target\debug\synthesis.exe` (exit code: 0xc000013a, STATUS_CONTROL_C_EXIT)